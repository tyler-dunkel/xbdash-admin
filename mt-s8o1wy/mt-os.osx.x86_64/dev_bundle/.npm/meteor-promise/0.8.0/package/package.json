{"name":"meteor-promise","author":{"name":"Ben Newman","email":"ben@meteor.com"},"version":"0.8.0","description":"ES6 Promise polyfill with Fiber support","keywords":["meteor","promise","fiber","synchronous","async","await"],"main":"promise_server.js","browser":"promise_client.js","typings":"promise.d.ts","scripts":{"test":"test/run.sh"},"homepage":"https://github.com/meteor/promise","repository":{"type":"git","url":"git://github.com/meteor/promise.git"},"bugs":{"url":"https://github.com/meteor/promise/issues"},"license":"MIT","devDependencies":{"promise":"~7.1.1","fibers":"~1.0.15","mocha":"~2.3.3"},"readme":"# promise [![Build Status](https://travis-ci.org/meteor/promise.svg)](https://travis-ci.org/meteor/promise)\nECMAScript 2015 Promise polyfill with Fiber support\n\nThe static methods `Promise.async` and `Promise.await` implement the\nrelaxed `async` and `await` functions proposed in this talk: [Why Fibers\nMake Sense For Meteor](http://benjamn.github.io/goto2015-talk).\n\nNote: as of\n[v0.4.0](https://github.com/meteor/promise/releases/tag/v0.4.0), this\nlibrary no longer depends directly on the\n[`fibers`](https://www.npmjs.com/package/fibers) package. If you want to\nuse this library in a codebase that uses `Fiber`s, make sure to set\n`Promise.Fiber` to the `Fiber` constructor that you use elsewhere.  For\nexample,\n[here](https://github.com/meteor/promise/blob/1e52f297b02ea83e7fb48ba4c2b17d3b4503c001/test/tests.js#L2-L5)\nis how it's done in the test code for this repository.\n\nIf you'd like to use this [package](https://atmospherejs.com/meteor/promise)\nin a [Meteor](https://www.meteor.com/) project, a much simpler\napproach is simply to run `meteor add promise`.\n","readmeFilename":"README.md","_id":"meteor-promise@0.8.0","_shasum":"56a9c4a5b86cce4b4201a93c3033b1cbd5d0598b","_resolved":"https://registry.npmjs.org/meteor-promise/-/meteor-promise-0.8.0.tgz","_from":"https://registry.npmjs.org/meteor-promise/-/meteor-promise-0.8.0.tgz"}