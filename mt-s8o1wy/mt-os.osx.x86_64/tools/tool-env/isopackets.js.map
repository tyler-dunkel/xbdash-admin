{"version":3,"sources":["/tools/tool-env/isopackets.js"],"names":["assert","require","_","bundler","Builder","compiler","isopackCacheModule","buildmessage","files","config","watch","Console","fiberHelpers","packageMapModule","archinfo","Profile","ISOPACKETS","loadedIsopackets","load","isopacketName","strictEqual","host","split","noYieldsAllowed","has","isopacket","loadIsopacketFromDisk","Error","isopacketPath","pathJoin","getIsopacketRoot","calledEnsure","ensureIsopacketsLoadable","inCheckout","each","packages","name","isopacketBuildContext","failedPackageBuild","messages","withProgressDisplayVisible","capture","isopacketRoot","existingBuildinfo","readJSONOrNull","needRebuild","builtBy","BUILT_BY","watchSet","WatchSet","fromJSON","isUpToDate","makeIsopacketBuildContext","enterJob","title","isopackCache","buildLocalPackages","jobHasMessages","built","buildJsImage","packageMap","use","builder","outputPath","writeJson","toJSON","image","write","complete","hasMessages","error","printMessages","newIsopacketBuildingCatalog","catalogLocal","isopacketCatalog","LocalCatalog","packagesDir","getCurrentToolsDir","initialize","localPackageSearchDirs","buildingIsopackets","arrowError","context","catalog","versions","getAllPackageNames","packageName","getLatestVersion","version","PackageMap","localCatalog","IsopackCache","includeCordovaUnibuild","noLineNumbers","readJsImage","env","__meteor_bootstrap__","startupHooks","__meteor_runtime_config__","meteorRelease","ret","length","hook","shift","exports"],"mappings":"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","file":"tools/tool-env/isopackets.js.map","sourcesContent":["var assert = require('assert');\nvar _ = require('underscore');\n\nvar bundler = require('../isobuild/bundler.js');\nimport Builder from '../isobuild/builder.js';\nvar compiler = require('../isobuild/compiler.js');\nvar isopackCacheModule = require('../isobuild/isopack-cache.js');\n\nvar buildmessage = require('../utils/buildmessage.js');\nvar files = require('../fs/files.js');\nvar config = require('../meteor-services/config.js');\nvar watch = require('../fs/watch.js');\nvar Console = require('../console/console.js').Console;\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar packageMapModule = require('../packaging/package-map.js');\nvar archinfo = require('../utils/archinfo.js');\nvar Profile = require('./profile.js').Profile;\n\n// TL;DR: Isopacket is a set of isopacks. Isopackets are used only inside\n// meteor-tool.\n\n// An isopacket is a predefined set of isopackages which the meteor command-line\n// tool can load into its process. This is how we use the DDP client and many\n// other packages inside the tool. The isopackets are listed below in the\n// ISOPACKETS constant.\n//\n// All packages that are in isopackets and all of their transitive dependencies\n// must be part of the core Meteor git checkout (not loaded from troposphere).\n//\n// The requested packages will be loaded together with all of their\n// dependencies. If you request to load the same isopacket more than once, you\n// will efficiently get the same pre-loaded isopacket. On the other hand, two\n// different loaded isopackets contain distinct copies of all of their packages\n// copy of all of the packages. The return value is an object that maps package\n// name to package exports (that is, it is the Package object from inside the\n// sandbox created for the newly loaded packages).\n//\n// For built releases, all of the isopackets are pre-compiled (as JsImages,\n// similar to a plugin or a server program) into the tool.\n//\n// When run from a checkout, all isopackets are re-compiled early in the startup\n// process if any of their sources have changed.\n//\n// Example usage:\n//   var DDP = require('./isopackets.js').load('ddp')['ddp-client'].DDP;\n//   var reverse = DDP.connect('reverse.meteor.com');\n//   Console.info(reverse.call('reverse', 'hello world'));\n\n\n// All of the defined isopackets. Whenever they are being built, they will be\n// built in the order listed here.\nexport const ISOPACKETS = {\n  'ddp': ['ddp-client'],\n  'mongo': ['npm-mongo'],\n  'ejson': ['ejson'],\n  'constraint-solver': ['constraint-solver'],\n  'cordova-support': ['boilerplate-generator', 'logging', 'webapp-hashing',\n                      'xmlbuilder'],\n  'logging': ['logging'],\n  'runtime': ['babel-runtime'],\n};\n\n// Caches isopackets in memory (each isopacket only needs to be loaded\n// once).  This is a map from isopacket name to either:\n//\n//  - The 'Package' dictionary, if the isopacket has already been loaded\n//    into memory\n//  - null, if the isopacket hasn't been loaded into memory but its on-disk\n//    instance is known to be ready\n//\n// The subtlety here is that when running from a checkout, we don't want to\n// accidentally load an isopacket before ensuring that it doesn't need to be\n// rebuilt. We used to need to load a \"js-analyze\" isopacket as part\n// of building other isopackets in ensureIsopacketsLoadable which made this\n// more important, though we've simplified it now by moving that code into\n// the tool itself.\nvar loadedIsopackets = {};\n\n// The main entry point: loads and returns an isopacket from cache or from\n// disk. Does not do a build step: ensureIsopacketsLoadable must be called\n// first!\nexport function load(isopacketName) {\n  // Small but necessary hack: because archinfo.host() calls execFileSync,\n  // it yields the first time we call it, which is a problem for the\n  // fiberHelpers.noYieldsAllowed block below. Calling it here ensures the\n  // result is cached, so no yielding occurs later.\n  assert.strictEqual(archinfo.host().split(\".\", 1)[0], \"os\");\n\n  return fiberHelpers.noYieldsAllowed(function () {\n    if (_.has(loadedIsopackets, isopacketName)) {\n      if (loadedIsopackets[isopacketName]) {\n        return loadedIsopackets[isopacketName];\n      }\n\n      // This is the case where the isopacket is up to date on disk but not\n      // loaded.\n      var isopacket = loadIsopacketFromDisk(isopacketName);\n      loadedIsopackets[isopacketName] = isopacket;\n      return isopacket;\n    }\n\n    if (_.has(ISOPACKETS, isopacketName)) {\n      throw Error(\"Can't load isopacket before it has been verified: \"\n                  + isopacketName);\n    }\n\n    throw Error(\"Unknown isopacket: \" + isopacketName);\n  });\n}\n\nvar isopacketPath = function (isopacketName) {\n  return files.pathJoin(config.getIsopacketRoot(), isopacketName);\n};\n\n// ensureIsopacketsLoadable is called at startup and ensures that all isopackets\n// exist on disk as up-to-date loadable programs.\nvar calledEnsure = false;\nexport function ensureIsopacketsLoadable() {\n  if (calledEnsure) {\n    throw Error(\"can't ensureIsopacketsLoadable twice!\");\n  }\n  calledEnsure = true;\n\n  // If we're not running from checkout, then there's nothing to build and we\n  // can declare that all isopackets are loadable.\n  if (! files.inCheckout()) {\n    _.each(ISOPACKETS, function (packages, name) {\n      loadedIsopackets[name] = null;\n    });\n    return;\n  }\n\n  // We make this object lazily later.\n  var isopacketBuildContext = null;\n\n  var failedPackageBuild = false;\n  // Look at each isopacket. Check to see if it's on disk and up to date. If\n  // not, build it. We rebuild them in the order listed in ISOPACKETS.\n  var messages = Console.withProgressDisplayVisible(function () {\n    return buildmessage.capture(function () {\n      _.each(ISOPACKETS, function (packages, isopacketName) {\n        if (failedPackageBuild) {\n          return;\n        }\n\n        var isopacketRoot = isopacketPath(isopacketName);\n        var existingBuildinfo = files.readJSONOrNull(\n          files.pathJoin(isopacketRoot, 'isopacket-buildinfo.json'));\n        var needRebuild = ! existingBuildinfo;\n        if (! needRebuild && existingBuildinfo.builtBy !== compiler.BUILT_BY) {\n          needRebuild = true;\n        }\n        if (! needRebuild) {\n          var watchSet = watch.WatchSet.fromJSON(existingBuildinfo.watchSet);\n          if (! watch.isUpToDate(watchSet)) {\n            needRebuild = true;\n          }\n        }\n        if (! needRebuild) {\n          // Great, it's loadable without a rebuild.\n          loadedIsopackets[isopacketName] = null;\n          return;\n        }\n\n        // We're going to need to build! Make a catalog and loader if we haven't\n        // yet.\n        if (! isopacketBuildContext) {\n          isopacketBuildContext = makeIsopacketBuildContext();\n        }\n\n        buildmessage.enterJob({\n          title: \"bundling \" + isopacketName + \" packages for the tool\"\n        }, function () {\n          // Build the packages into the in-memory IsopackCache.\n          isopacketBuildContext.isopackCache.buildLocalPackages(packages);\n          if (buildmessage.jobHasMessages()) {\n            return;\n          }\n\n          // Now bundle them into a program.\n          var built = bundler.buildJsImage({\n            name: \"isopacket-\" + isopacketName,\n            packageMap: isopacketBuildContext.packageMap,\n            isopackCache: isopacketBuildContext.isopackCache,\n            use: packages\n          });\n          if (buildmessage.jobHasMessages()) {\n            return;\n          }\n\n          var builder = new Builder({outputPath: isopacketRoot});\n          builder.writeJson('isopacket-buildinfo.json', {\n            builtBy: compiler.BUILT_BY,\n            watchSet: built.watchSet.toJSON()\n          });\n          built.image.write(builder);\n          builder.complete();\n          // It's loadable now.\n          loadedIsopackets[isopacketName] = null;\n        });\n      });\n    });\n  });\n\n  // This is a build step ... but it's one that only happens in development, so\n  // it can just crash the app instead of being handled nicely.\n  if (messages.hasMessages()) {\n    Console.error(\"Errors prevented isopacket build:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket build failed?\");\n  }\n}\n\n// Returns a new all-local-packages catalog to be used for building isopackets.\nvar newIsopacketBuildingCatalog = function () {\n  if (! files.inCheckout()) {\n    throw Error(\"No need to build isopackets unless in checkout!\");\n  }\n\n  var catalogLocal = require('../packaging/catalog/catalog-local.js');\n  var isopacketCatalog = new catalogLocal.LocalCatalog;\n  var messages = buildmessage.capture(\n    { title: \"scanning local core packages\" },\n    function () {\n      const packagesDir =\n        files.pathJoin(files.getCurrentToolsDir(), 'packages');\n\n      // When running from a checkout, isopacket building does use local\n      // packages, but *ONLY THOSE FROM THE CHECKOUT*: not app packages or\n      // $PACKAGE_DIRS packages.  One side effect of this: we really really\n      // expect them to all build, and we're fine with dying if they don't\n      // (there's no worries about needing to springboard).\n      isopacketCatalog.initialize({\n        localPackageSearchDirs: [\n          packagesDir,\n          files.pathJoin(packagesDir, \"non-core\", \"*\", \"packages\"),\n        ],\n        buildingIsopackets: true\n      });\n    });\n  if (messages.hasMessages()) {\n    Console.arrowError(\"Errors while scanning core packages:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket scan failed?\");\n  }\n  return isopacketCatalog;\n};\n\nexport function makeIsopacketBuildContext() {\n  var context = {};\n  var catalog = newIsopacketBuildingCatalog();\n  var versions = {};\n  _.each(catalog.getAllPackageNames(), function (packageName) {\n    versions[packageName] = catalog.getLatestVersion(packageName).version;\n  });\n  context.packageMap = new packageMapModule.PackageMap(versions, {\n    localCatalog: catalog\n  });\n  // Make an isopack cache that doesn't save isopacks to disk and has no\n  // access to versioned packages.\n  context.isopackCache = new isopackCacheModule.IsopackCache({\n    packageMap: context.packageMap,\n    includeCordovaUnibuild: false,\n    // When linking JS files, don't include the padding spaces and line number\n    // comments. Since isopackets are loaded as part of possibly very short\n    // 'meteor' tool command invocations, we care more about startup time than\n    // legibility, and the difference is actually observable (eg 25% speedup\n    // loading constraint-solver).\n    noLineNumbers: true\n  });\n  return context;\n}\n\n// Loads a built isopacket from disk. Always loads (the cache is in 'load', not\n// this function). Does not run a build process; it must already be built.\nvar loadIsopacketFromDisk = function (isopacketName) {\n  var image = bundler.readJsImage(\n    files.pathJoin(isopacketPath(isopacketName), 'program.json'));\n\n  // An incredibly minimalist version of the environment from\n  // tools/server/boot.js.  Kind of a hack.\n  var env = {\n    __meteor_bootstrap__: { startupHooks: [] },\n    __meteor_runtime_config__: { meteorRelease: \"ISOPACKET\" }\n  };\n  env.Profile = Profile;\n\n  var ret;\n  var messages = buildmessage.capture({\n    title: \"loading isopacket `\" + isopacketName + \"`\"\n  }, function () {\n    ret = image.load(env);\n  });\n\n  // This is a build step ... but it's one that only happens in development, so\n  // it can just crash the app instead of being handled nicely.\n  if (messages.hasMessages()) {\n    Console.error(\"Errors prevented isopacket load:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket load failed?\");\n  }\n\n  // Run any user startup hooks.\n  while (env.__meteor_bootstrap__.startupHooks.length) {\n    var hook = env.__meteor_bootstrap__.startupHooks.shift();\n    hook();\n  }\n  // Setting this to null tells Meteor.startup to call hooks immediately.\n  env.__meteor_bootstrap__.startupHooks = null;\n\n  return ret;\n};\n\n// Support `import isopackets from \"../path/to/isopackets.js\"`.\nexport default exports;\n"]}