{"version":3,"sources":["/tools/tool-env/install-runtime.js"],"names":["require","regenerator","join","realAsync","async","Promise","asyncApply","arguments","defineHelpers"],"mappings":"AAAA;AACA;AACA;AACAA,QAAQ,2BAAR;AACAA,QAAQ,sBAAR;;AAEA;AACA;AACA;AACA,IAAIC,cAAcD,QAAQ,CACxB,eADwB,EAExB,aAFwB,EAGxBE,IAHwB,CAGnB,GAHmB,CAAR,CAAlB;;AAKA;AACA;AACA;AACA,IAAIC,YAAYF,YAAYG,KAA5B;AACAH,YAAYG,KAAZ,GAAoB,YAAY;AAC9B,SAAOC,QAAQC,UAAR,CAAmBH,SAAnB,EAA8BF,WAA9B,EAA2CM,SAA3C,CAAP;AACD,CAFD;;AAIA;AACA;AACAP,QAAQ,cAAR,EAAwBQ,aAAxB;;AAEA;AACA;AACAR,QAAQ,iCAAR","file":"tools/tool-env/install-runtime.js.map","sourcesContent":["// Install ES2015-complaint polyfills for Object, Array, String, Function,\n// Symbol, Map, Set, and Promise, patching the native implementations when\n// they are available.\nrequire(\"meteor-ecmascript-runtime\");\nrequire(\"./install-promise.js\");\n\n// Verify that the babel-runtime package is available to be required.\n// The .join(\"/\") prevents babel-plugin-transform-runtime from\n// \"intelligently\" converting this to an import statement.\nvar regenerator = require([\n  \"babel-runtime\",\n  \"regenerator\"\n].join(\"/\"));\n\n// Use Promise.asyncApply to wrap calls to runtime.async so that the\n// entire async function will run in its own Fiber, not just the code that\n// comes after the first await.\nvar realAsync = regenerator.async;\nregenerator.async = function () {\n  return Promise.asyncApply(realAsync, regenerator, arguments);\n};\n\n// Install global.meteorBabelHelpers so that the compiler doesn't need to\n// add boilerplate at the top of every file.\nrequire(\"meteor-babel\").defineHelpers();\n\n// Installs source map support with a hook to add functions to look for\n// source maps in custom places.\nrequire('./source-map-retriever-stack.js');\n"]}