{"version":3,"sources":["/tools/tool-env/profile.js"],"names":["_","require","Fiber","enabled","process","env","filter","parseFloat","isNaN","bucketStats","SPACES_STR","spaces","x","length","slice","DOTS_STR","dots","leftAlign","str","len","rightAlign","leftRightAlign","str1","str2","middle","Math","max","leftRightDots","printIndentation","isLastLeafStack","isEmpty","init","map","initial","isLastLeaf","join","last","formatMs","n","String","round","replace","encodeEntryKey","entry","decodeEntryKey","key","split","globalEntry","running","runningName","start","Profile","bucketName","f","Object","assign","profileWrapper","apply","arguments","name","isFunction","currentEntry","current","profilerEntry","push","hrtime","err","e","elapsed","stats","time","count","pop","bucket","entries","prefix","entryName","entryStats","entryTime","isTopLevelEntry","topLevelEntries","print","text","console","log","isChild","entry1","entry2","i","children","hasChildren","hasSignificantChildren","some","isLeaf","otherTime","total","each","child","injectOtherTime","other","clone","isOther","reportOn","isParent","childrenList","concat","reportHierarchy","allLeafs","union","leafTotals","leafName","leaf","reportHotLeaves","totals","info","sort","a","b","getTopLevelTotal","topTotal","setupReport","keys","parent","reportNum","report","run","exports"],"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","file":"tools/tool-env/profile.js.map","sourcesContent":["// Tiny profiler\n//\n// Enable by setting the environment variable `METEOR_PROFILE`.\n//\n// The main entry point is `Profile`, which wraps an existing function\n// and returns a new function which, when called, calls the original\n// function and profiles it.\n//\n// before:\n//\n//     foo: function (a) {\n//       return a + this.b;\n//     },\n//\n// after:\n//\n//     foo: Profile(\"foo\", function (a) {\n//       return a + this.b;\n//     }),\n//\n// The advantage of this form is that it doesn't change the\n// indentation of the wrapped code, which makes merging changes from\n// other code branches easier.\n//\n// If profiling is disabled (if `METEOR_PROFILE` isn't set), `Profile`\n// simply returns the original function.\n//\n// To run a profiling session and print the report, call `Profile.run`:\n//\n//     var createBundle = function () {\n//       Profile.run(\"bundle\", function () {\n//         ...code to create the bundle which includes calls to `Profile`.\n//       });\n//     };\n//\n// Code is not profiled when called outside of a `Profile.run`, so the\n// times in the report only include the time spent inside of the call\n// to `Profile.run`.\n//\n// Sometimes you'll want to use a name for the profile bucket which\n// depends on the arguments passed to the function or the value of\n// `this`.  In this case you can pass a function for the bucket\n// argument, which will be called to get the bucket name.\n//\n// before:\n//     build: function (target) {\n//       ... build target ...\n//     },\n//\n// after:\n//     build: Profile(\n//       function (target) { return \"build \" + target; },\n//       function (target) {\n//         ... build target ...\n//       }),\n//\n// But if it's easier, you can use `Profile.time` instead, which\n// immediately calls the passed function with no arguments and\n// profiles it, and returns what the function returns.\n//\n//     foo: function (a) {\n//       var self = this;\n//       return Profile.time(\"foo\", function () {\n//         return a + self.b;\n//       });\n//     },\n//\n//     build: function (target) {\n//       var self = this;\n//       self.doSomeSetup();\n//       Profile.time(\"build \" + target, function () {\n//         ... build target ...\n//       });\n//       self.doSomeCleanup();\n//     },\n//\n// The disadvantage is that you end up changing the indentation of the\n// profiled code, which makes merging branches more painful.  But you\n// can profile anywhere in the code; you don't have to just profile at\n// function boundaries.\n//\n// Note profiling code will itself add a bit of execution time.\n// If you profile in a tight loop and your total execution time is\n// going up, you're probably starting to profile how long it takes to\n// profile things :).\n//\n// If another profile (such as \"compile js\") is called while the first\n// function is currently being profiled, this creates an entry like\n// this:\n//\n//    build client : compile js\n//\n// which can continue to be nested, e.g.,\n//\n//    build client : compile js : read source files\n//\n// The total time reported for a bucket such as \"build client\" doesn't\n// change regardless of whether it has child entries or not.  However,\n// if an entry has child entries, it automatically gets an \"other\"\n// entry:\n//\n//     build client: 400.0\n//       compile js: 300.0\n//         read source files: 20.0\n//         other compile js: 280.0\n//       other build client: 100.0\n//\n// The \"other\" entry reports how much time was spent in the \"build\n// client\" entry not spent in the other child entries.\n//\n// The are two reports displayed: the hierarchical report and the\n// leaf time report.  The hierarchical report looks like the example\n// above and shows how much time was spent in each entry within its\n// parent entry.\n//\n// The primary purpose of the hierarchical report is to be able to see\n// where times are unaccounted for.  If you see a lot of time being\n// spent in an \"other\" bucket, and you don't know what it is, you can\n// add more profiling to dig deeper.\n//\n// The leaf time report shows the total time spent within leaf\n// buckets.  For example, if if multiple steps have \"read source\n// files\", the leaf time reports shows the total amount of time spent\n// in \"read source files\" across all calls.\n//\n// Once you see in the hierarchical report that you have a good handle\n// on accounting for most of the time, the leaf report shows you which\n// buckets are the most expensive.\n//\n// By only including leaf buckets, the times in the leaf report are\n// non-overlapping.  (The total of the times equals the elapsed time\n// being profiled).\n//\n// For example, suppose \"A\" is profiled for a total time of 200ms, and\n// that includes a call to \"B\" of 150ms:\n//\n//     B: 150\n//     A (without B): 50\n//\n// and suppose there's another call to \"A\" which *doesn't* include a\n// call to \"B\":\n//\n//     A: 300\n//\n// and there's a call to \"B\" directly:\n//\n//     B: 100\n//\n// All for a total time of 600ms.  In the hierarchical report, this\n// looks like:\n//\n//     A: 500.0\n//       B: 150.0\n//       other A: 350.0\n//     B: 100.0\n//\n// and in the leaf time report:\n//\n//     other A: 350.0\n//     B: 250.0\n//\n// In both reports the grand total is 600ms.\n\nvar _ = require('underscore');\nvar Fiber = require('fibers');\n\nvar enabled = !! process.env['METEOR_PROFILE'];\nvar filter = parseFloat(process.env['METEOR_PROFILE']); // ms\nif (isNaN(filter)) {\n  filter = 100; // ms\n}\n\nvar bucketStats = {};\n\nvar SPACES_STR = ' ';\n// return a string of `x` spaces\nvar spaces = function (x) {\n  while (SPACES_STR.length < x) {\n    SPACES_STR = SPACES_STR + SPACES_STR;\n  }\n  return SPACES_STR.slice(0, x);\n};\n\nvar DOTS_STR = '.';\n// return a string of `x` dots\nvar dots = function (x) {\n  while (DOTS_STR.length < x) {\n    DOTS_STR = DOTS_STR + DOTS_STR;\n  }\n  return DOTS_STR.slice(0, x);\n};\n\n\nvar leftAlign = function (str, len) {\n  if (str.length < len) {\n    str = str + spaces(len - str.length);\n  }\n  return str;\n};\n\nvar rightAlign = function (str, len) {\n  if (str.length < len) {\n    str = spaces(len - str.length) + str;\n  }\n  return str;\n};\n\nvar leftRightAlign = function (str1, str2, len) {\n  var middle = Math.max(1, len - str1.length - str2.length);\n  return str1 + spaces(middle) + str2;\n};\n\nvar leftRightDots = function (str1, str2, len) {\n  var middle = Math.max(1, len - str1.length - str2.length);\n  return str1 + dots(middle) + str2;\n};\n\nvar printIndentation = function (isLastLeafStack) {\n  if (_.isEmpty(isLastLeafStack)) {\n    return '';\n  }\n\n  var init = _.map(_.initial(isLastLeafStack), function(isLastLeaf) {\n    return isLastLeaf ? '   ' : '│  ';\n  }).join('');\n  var last = _.last(isLastLeafStack) ? '└─ ' : '├─ ';\n  return init + last;\n};\n\nvar formatMs = function (n) {\n  // integer with thousands separators\n  return String(Math.round(n)).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\";\n};\n\nvar encodeEntryKey = function (entry) {\n  return entry.join('\\t');\n};\n\nvar decodeEntryKey = function (key) {\n  return key.split('\\t');\n};\n\nvar globalEntry = [];\n\nvar running = false;\nvar runningName;\n\nvar start = function () {\n  bucketStats = {};\n  running = true;\n};\n\nvar Profile = function (bucketName, f) {\n  if (! enabled) {\n    return f;\n  }\n\n  return Object.assign(function profileWrapper() {\n    if (! running) {\n      return f.apply(this, arguments);\n    }\n\n    var name;\n    if (_.isFunction(bucketName)) {\n      name = bucketName.apply(this, arguments);\n    } else {\n      name = bucketName;\n    }\n\n    var currentEntry;\n    if (Fiber.current) {\n      currentEntry =\n        Fiber.current.profilerEntry || (Fiber.current.profilerEntry = []);\n    } else {\n      currentEntry = globalEntry;\n    }\n\n    currentEntry.push(name);\n    var key = encodeEntryKey(currentEntry);\n    var start = process.hrtime();\n    var err = null;\n    try {\n      return f.apply(this, arguments);\n    }\n    catch (e) {\n      err = e;\n    }\n    finally {\n      var elapsed = process.hrtime(start);\n      var stats = (bucketStats[key] || (bucketStats[key] = {\n        time: 0.0, count: 0\n      }));\n      stats.time += (elapsed[0] * 1000 + elapsed[1] / 1000000);\n      stats.count++;\n      currentEntry.pop();\n    }\n\n    if (err) {\n      throw err;\n    }\n  }, f);\n};\n\nvar time = function (bucket, f) {\n  return Profile(bucket, f)();\n};\n\nvar entries = null;\n\nvar prefix = \"| \";\n\nvar entryName = function (entry) {\n  return _.last(entry);\n};\n\nvar entryStats = function (entry) {\n  return bucketStats[encodeEntryKey(entry)];\n};\n\nvar entryTime = function (entry) {\n  return entryStats(entry).time;\n};\n\nvar isTopLevelEntry = function (entry) {\n  return entry.length === 1;\n};\n\nvar topLevelEntries = function () {\n  return _.filter(entries, isTopLevelEntry);\n};\n\nvar print = function (text) {\n  console.log(prefix + text);\n};\n\nvar isChild = function (entry1, entry2) {\n  if (entry2.length !== entry1.length + 1) {\n    return false;\n  }\n  for (var i = entry1.length-1; i >= 0; i--) {\n    if (entry1[i] !== entry2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar children = function (entry1) {\n  return _.filter(entries, function (entry2) {\n    return isChild(entry1, entry2);\n  });\n}\n\nvar hasChildren = function (entry) {\n  return children(entry).length !== 0;\n};\n\nvar hasSignificantChildren = function (entry) {\n  return _.some(children(entry), function (entry) {\n    return (entryTime(entry) >= filter);\n  });\n};\n\nvar isLeaf = function (entry) {\n  return ! hasChildren(entry);\n};\n\nvar otherTime = function (entry) {\n  var total = 0;\n  _.each(children(entry), function (child) {\n    total += entryTime(child);\n  });\n  return entryTime(entry) - total;\n};\n\nvar injectOtherTime = function (entry) {\n  var name = \"other \" + entryName(entry);\n  var other = _.clone(entry);\n  other.push(name);\n  bucketStats[encodeEntryKey(other)] = {\n    time: otherTime(entry),\n    count: entryStats(entry).count,\n    isOther: true\n  };\n  entries.push(other);\n};\n\nvar reportOn = function (entry, isLastLeafStack) {\n  isLastLeafStack = isLastLeafStack || [];\n  var stats = entryStats(entry);\n  var isParent = hasSignificantChildren(entry);\n  var name = entryName(entry);\n  print((isParent ? leftRightDots : leftRightAlign)\n        (printIndentation(isLastLeafStack) + name, formatMs(stats.time), 70)\n        + (stats.isOther ? \"\" : (\" (\" + stats.count + \")\")));\n\n  if (isParent) {\n    var childrenList = _.filter(children(entry), function(entry) {\n      var stats = entryStats(entry);\n      return stats.time > filter;\n    });\n    _.each(childrenList, function (child, i) {\n      var isLastLeaf = i === childrenList.length - 1;\n      reportOn(child, isLastLeafStack.concat(isLastLeaf));\n    });\n  }\n};\n\nvar reportHierarchy = function () {\n  _.each(topLevelEntries(), function (entry) {\n    reportOn(entry);\n  });\n};\n\nvar allLeafs = function () {\n  return _.union(_.map(_.filter(entries, isLeaf), entryName));\n};\n\nvar leafTotals = function (leafName) {\n  var time = 0;\n  var count = 0;\n  _.each(\n    _.filter(entries, function (entry) {\n      return entryName(entry) === leafName && isLeaf(entry);\n    }),\n    function (leaf) {\n      var stats = entryStats(leaf);\n      time += stats.time;\n      count += stats.count;\n    }\n  );\n  return {time, count};\n};\n\nvar reportHotLeaves = function () {\n  print('Top leaves:');\n  var totals = [];\n  _.each(allLeafs(), function (leaf) {\n    var info = leafTotals(leaf);\n    totals.push({name: leaf, time: info.time, count: info.count});\n  });\n  totals.sort(function (a, b) {\n    return a.time === b.time ? 0 : a.time > b.time ? -1 : 1;\n  });\n  _.each(totals, function (total) {\n    if (total.time < 100) { // hard-coded larger filter to quality as \"hot\" here\n      return;\n    }\n    print(leftRightDots(total.name, formatMs(total.time), 65) +\n          ` (${total.count})`);\n  });\n};\n\nvar getTopLevelTotal = function () {\n  var topTotal = 0;\n  _.each(topLevelEntries(), function (entry) {\n    topTotal += entryTime(entry);\n  });\n  return topTotal;\n};\n\nvar setupReport = function () {\n  entries = _.map(_.keys(bucketStats), decodeEntryKey);\n  _.each(_.filter(entries, hasSignificantChildren), function (parent) {\n    injectOtherTime(parent);\n  });\n};\n\nvar reportNum = 1;\n\nvar report = function () {\n  if (! enabled) {\n    return;\n  }\n  running = false;\n  print('');\n  setupReport();\n  reportHierarchy();\n  print('');\n  reportHotLeaves();\n  print('');\n  print(`(#${reportNum}) Total: ${formatMs(getTopLevelTotal())}` +\n        ` (${runningName})`);\n  print('');\n};\n\nvar run = function (bucketName, f) {\n  if (! enabled) {\n    return f();\n  } else if (running) {\n    // We've kept the calls to Profile.run in the tool disjoint so far,\n    // and should probably keep doing so, but if we mess up, warn and continue.\n    console.log(\"Warning: Nested Profile.run at \" + bucketName);\n    return time(bucketName, f);\n  } else {\n    runningName = bucketName;\n    print(`(#${reportNum}) Profiling: ${runningName}`);\n    start();\n    try {\n      return time(bucketName, f);\n    }\n    finally {\n      report();\n      reportNum++;\n    }\n  }\n};\n\nProfile.time = time;\nProfile.run = run;\n\nexports.Profile = Profile;\n"]}