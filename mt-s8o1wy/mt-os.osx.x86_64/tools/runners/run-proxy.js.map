{"version":3,"sources":["/tools/runners/run-proxy.js"],"names":["_","require","runLog","Proxy","options","self","listenPort","listenHost","proxyToPort","proxyToHost","onFailure","mode","httpQueue","websocketQueue","proxy","server","extend","prototype","start","Error","started","http","net","httpProxy","createProxyServer","agent","Agent","maxSockets","xfwd","createServer","req","res","push","_tryHandleConnections","on","socket","head","allowStart","promise","Promise","resolve","err","code","port","log","syscall","resOrSocket","ServerResponse","headersSent","writeHead","end","Socket","listen","close","await","stop","each","c","statusCode","destroy","attempt","fn","e","length","shift","showErrorPage","web","target","ws","setMode","write","getLog","item","escapeEntities","message","str","escapeMap","escapeChar","replace","exports"],"mappings":"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","file":"tools/runners/run-proxy.js.map","sourcesContent":["var _ = require('underscore');\nvar runLog = require('./run-log.js');\n\n// options: listenPort, proxyToPort, proxyToHost, onFailure\nvar Proxy = function (options) {\n  var self = this;\n\n  self.listenPort = options.listenPort;\n  self.listenHost = options.listenHost;\n  // note: run-all.js updates proxyToPort directly\n  self.proxyToPort = options.proxyToPort;\n  self.proxyToHost = options.proxyToHost || '127.0.0.1';\n  self.onFailure = options.onFailure || function () {};\n\n  self.mode = \"hold\";\n  self.httpQueue = []; // keys: req, res\n  self.websocketQueue = []; // keys: req, socket, head\n\n  self.proxy = null;\n  self.server = null;\n};\n\n_.extend(Proxy.prototype, {\n  // Start the proxy server, block (yield) until it is ready to go\n  // (actively listening on outer and proxying to inner), and then\n  // return.\n  start: function () {\n    var self = this;\n\n    if (self.server) {\n      throw new Error(\"already running?\");\n    }\n\n    self.started = false;\n\n    var http = require('http');\n    var net = require('net');\n    var httpProxy = require('http-proxy');\n\n    self.proxy = httpProxy.createProxyServer({\n      // agent is required to handle keep-alive, and http-proxy 1.0 is a little\n      // buggy without it: https://github.com/nodejitsu/node-http-proxy/pull/488\n      agent: new http.Agent({ maxSockets: 100 }),\n      xfwd: true\n    });\n\n    var server = self.server = http.createServer(function (req, res) {\n      // Normal HTTP request\n      self.httpQueue.push({ req: req, res: res });\n      self._tryHandleConnections();\n    });\n\n    self.server.on('upgrade', function (req, socket, head) {\n      // Websocket connection\n      self.websocketQueue.push({ req: req, socket: socket, head: head });\n      self._tryHandleConnections();\n    });\n\n    var allowStart;\n    var promise = new Promise(function (resolve) {\n      allowStart = resolve;\n    });\n\n    self.server.on('error', function (err) {\n      if (err.code === 'EADDRINUSE') {\n        var port = self.listenPort;\n        runLog.log(\n\"Can't listen on port \" + port + \". Perhaps another Meteor is running?\\n\" +\n\"\\n\" +\n\"Running two copies of Meteor in the same application directory\\n\" +\n\"will not work. If something else is using port \" + port + \", you can\\n\" +\n\"specify an alternative port with --port <port>.\");\n      } else if (self.listenHost &&\n                 (err.code === 'ENOTFOUND' || err.code === 'EADDRNOTAVAIL')) {\n        // This handles the case of \"entered a DNS name that's unknown\"\n        // (ENOTFOUND from getaddrinfo) and \"entered some random IP that we\n        // can't bind to\" (EADDRNOTAVAIL from listen).\n        runLog.log(\n\"Can't listen on host \" + self.listenHost + \" (\" + err.code + \" from \" +\n            err.syscall + \").\");\n\n      } else {\n        runLog.log('' + err);\n      }\n      self.onFailure();\n      allowStart();\n    });\n\n    // Don't crash if the app doesn't respond. instead return an error\n    // immediately. This shouldn't happen much since we try to not\n    // send requests if the app is down.\n    //\n    // Currently, this error is emitted if the proxy->server connection has an\n    // error (whether in HTTP or websocket proxying).  It is not emitted if the\n    // client->proxy connection has an error, though this may change; see\n    // discussion at https://github.com/nodejitsu/node-http-proxy/pull/488\n    self.proxy.on('error', function (err, req, resOrSocket) {\n      if (resOrSocket instanceof http.ServerResponse) {\n        if (!resOrSocket.headersSent) {\n          // Return a 503, but only if we haven't already written headers (or\n          // we'll get an ugly crash about rendering headers twice).  end()\n          // doesn't crash if called twice so we don't have to conditionalize\n          // that call.\n          resOrSocket.writeHead(503, {\n            'Content-Type': 'text/plain'\n          });\n        }\n        resOrSocket.end('Unexpected error.');\n      } else if (resOrSocket instanceof net.Socket) {\n        resOrSocket.end();\n      }\n    });\n\n    self.server.listen(self.listenPort, self.listenHost || '0.0.0.0', function () {\n      if (self.server) {\n        self.started = true;\n      } else {\n        // stop() got called while we were invoking listen! Close the server (we\n        // still have the var server). The rest of the cleanup shouldn't be\n        // necessary.\n        server.close();\n      }\n      allowStart();\n    });\n\n    promise.await();\n  },\n\n  // Idempotent.\n  stop: function () {\n    var self = this;\n\n    if (! self.server) {\n      return;\n    }\n\n    if (! self.started) {\n      // This probably means that we failed to listen. However, there could be a\n      // race condition and we could be in the middle of starting to listen! In\n      // that case, the listen callback will notice that we nulled out server\n      // here.\n      self.server = null;\n      return;\n    }\n\n    // This stops listening but allows existing connections to\n    // complete gracefully.\n    self.server.close();\n    self.server = null;\n\n    // It doesn't seem to be necessary to do anything special to\n    // destroy an httpProxy proxyserver object.\n    self.proxy = null;\n\n    // Drop any held connections.\n    _.each(self.httpQueue, function (c) {\n      c.res.statusCode = 500;\n      c.res.end();\n    });\n    self.httpQueue = [];\n\n    _.each(self.websocketQueue, function (c) {\n      c.socket.destroy();\n    });\n    self.websocketQueue = [];\n\n    self.mode = \"hold\";\n  },\n\n  _tryHandleConnections: function () {\n    var self = this;\n\n    function attempt(resOrSocket, fn) {\n      try {\n        return fn();\n      } catch (e) {\n        if (typeof resOrSocket.writeHead === \"function\") {\n          resOrSocket.writeHead(400, {\n            'Content-Type': 'text/plain'\n          });\n        }\n        resOrSocket.end(\"Bad request\\n\");\n      }\n    }\n\n    while (self.httpQueue.length) {\n      if (self.mode !== \"errorpage\" && self.mode !== \"proxy\") {\n        break;\n      }\n\n      var c = self.httpQueue.shift();\n      if (self.mode === \"errorpage\") {\n        showErrorPage(c.res);\n      } else {\n        attempt(c.res, () => self.proxy.web(c.req, c.res, {\n          target: 'http://' + self.proxyToHost + ':' + self.proxyToPort\n        }));\n      }\n    }\n\n    while (self.websocketQueue.length) {\n      if (self.mode !== \"proxy\") {\n        break;\n      }\n\n      var c = self.websocketQueue.shift();\n      attempt(c.socket, () => self.proxy.ws(c.req, c.socket, c.head, {\n        target: 'http://' + self.proxyToHost + ':' + self.proxyToPort\n      }));\n    }\n  },\n\n  // The proxy can be in one of three modes:\n  // - \"hold\": hold connections until the mode changes\n  // - \"proxy\": connections are proxied to the configured port\n  // - \"errorpage\": an error page is served to HTTP connections, and\n  //   websocket connections are held\n  //\n  // The initial mode is \"hold\".\n  setMode: function (mode) {\n    var self = this;\n    self.mode = mode;\n    self._tryHandleConnections();\n  }\n});\n\nfunction showErrorPage(res) {\n  // XXX serve an app that shows the logs nicely and that also\n  // knows how to reload when the server comes back up\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(`\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>App crashing</title>\n    <style type='text/css'>\n      body { margin: 0; }\n      h3 {\n        margin: 0;\n        font-family: sans-serif;\n        padding: 20px 10px 10px 10px;\n        background: #eee;\n      }\n      pre { margin: 20px; }\n    </style>\n  </head>\n\n  <body>\n    <h3>Your app is crashing. Here's the latest log:</h3>\n\n    <pre>`);\n\n      _.each(runLog.getLog(), function (item) {\n        res.write(escapeEntities(item.message) + \"\\n\");\n      });\n\n      res.write(`</pre>\n  </body>\n</html>`)\n\n  res.end();\n}\n\n// Copied from packages/blaze/preamble.js\nfunction escapeEntities(str) {\n  const escapeMap = {\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#x27;\",\n    \"`\": \"&#x60;\", /* IE allows backtick-delimited attributes?? */\n    \"&\": \"&amp;\"\n  };\n\n  const escapeChar = function(c) {\n    return escapeMap[c];\n  };\n\n  return str.replace(/[&<>\"'`]/g, escapeChar);\n}\n\nexports.Proxy = Proxy;\n"]}