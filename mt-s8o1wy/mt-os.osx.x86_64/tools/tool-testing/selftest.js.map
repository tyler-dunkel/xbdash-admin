{"version":3,"sources":["/tools/tool-testing/selftest.js"],"names":["_","require","util","Future","fiberHelpers","child_process","files","utils","parseStack","Console","archinfo","config","buildmessage","execFileSync","getUrlWithResuming","Builder","catalog","catalogRemote","isopackCacheModule","isopackets","tropohouseModule","packageMapModule","release","projectContextModule","upgraders","checkTestOnlyDependency","name","absPath","resolve","e","Error","join","phantomjs","webdriver","TestFailure","reason","details","self","stack","markStack","f","markTop","fail","expectEqual","actual","expected","Package","load","ejson","EJSON","equals","expectTrue","expectFalse","expectThrows","threw","doOrThrow","ret","messages","capture","hasMessages","formatMessages","builtPackageTropohouseDir","tropohouseLocalCatalog","tropohouseIsopackCache","ROOT_PACKAGES_TO_BUILD_IN_SANDBOX","setUpBuiltPackageTropohouse","mkdtemp","getPackagesDirectoryName","tropohouse","Tropohouse","newSelfTestCatalog","versions","each","getAllNonTestPackageNames","packageName","getLatestVersion","version","packageMap","PackageMap","localCatalog","IsopackCache","includeCordovaUnibuild","enterJob","buildLocalPackages","eachBuiltIsopack","isopack","_saveIsopack","inCheckout","catalogLocal","selfTestCatalog","LocalCatalog","title","packagesDir","pathJoin","getCurrentToolsDir","initialize","localPackageSearchDirs","arrowError","printMessages","Matcher","run","buf","ended","matchPattern","matchPromise","matchStrict","extend","prototype","write","data","_tryMatch","match","pattern","timeout","strict","mp","makeFulfillablePromise","timer","setTimeout","reject","await","clearTimeout","end","matchEmpty","length","info","RegExp","m","index","substr","slice","i","indexOf","failure","OutputLog","lines","buffers","channel","text","has","offset","b","push","keys","bare","forbid","line","get","Sandbox","options","clients","root","warehouse","home","mkdir","cwd","env","fakeMongo","_makeWarehouse","PhantomClient","host","port","browserstack","browsers","browserName","browserVersion","browser","BrowserStackClient","meteorScript","process","platform","execPath","args","Run","sandbox","_makeEnv","testWithAllClients","compact","console","log","client","baseTimeout","createApp","to","template","absoluteTo","cp_r","convertToStandardPath","__dirname","ignore","current","isProperRelease","upgradersFile","FinishedUpgraders","projectDir","isEmpty","readUpgraders","appendUpgraders","allUpgraders","dontPrepareApp","cd","waitSecs","expectExit","createPackage","packageDir","packagePath","templatePackagePath","readdir","file","packageJsFile","writeFile","readFile","replace","relativePath","callback","previous","pathResolve","set","value","unset","filename","contents","append","appendFile","read","exists","cp","from","unlink","dirname","dirPath","rename","oldName","newName","readSessionFile","writeSessionFile","clone","METEOR_SESSION_FILE","convertToOSPath","METEOR_WAREHOUSE_DIR","METEOR_OFFLINE_CATALOG","METEOR_TEST_LATEST_RELEASE","TOOL_NODE_FLAGS","SELF_TEST_TOOL_NODE_FLAGS","releases","serverUrl","METEOR_PACKAGE_SERVER_URL","packagesDirectoryName","builder","outputPath","copyDirectory","symlink","complete","stubCatalog","syncToken","formatVersion","collections","packages","builds","releaseTracks","releaseVersions","packageVersions","toolPackageVersion","packageRec","getPackage","versionRec","buildArchitectures","versionId","_id","randomToken","DEFAULT_TRACK","configuration","releaseName","track","Math","random","toString","orderKey","description","recommended","tool","dataFile","getPackageStorage","warehouseOfficialCatalog","RemoteCatalog","packageStorage","insertData","linkToMeteorScript","Client","url","connect","stop","apply","arguments","_logError","inherits","phantomPath","path","scriptPath","execFile","error","stdout","stderr","kill","browserStackKey","tunnelProcess","driver","_getBrowserStackKey","capabilities","_launchBrowserStackTunnel","usingServer","withCapabilities","build","quit","outputDir","trim","browserStackPath","ensureBrowserStack","on","getDevBundle","browserStackStat","statOrNull","OS","ARCH","arch","tarGz","Promise","browserStackStream","createWriteStream","gunzip","createGunzip","pipe","chmod","SELFTEST","METEOR_NO_WORDWRAP","_args","proc","extraTime","stdoutMatcher","stderrMatcher","outputLog","exitStatus","undefined","exitPromiseResolvers","opts","fakeMongoPort","fakeMongoConnection","randomPort","METEOR_TEST_FAKE_MONGOD_CONTROL_PORT","runningTest","onCleanup","_stopWithoutWaiting","a","key","connectClient","_ensureStarted","_exited","status","spawn","code","signal","err","setEncoding","_strict","timeoutScaleFactor","matchErr","readErr","forbidErr","forbidAll","expectEnd","promise","without","secs","string","stdin","_killProcess","pid","tellMongo","command","net","lastStartTime","attempts","sleepMs","Date","conn","setNoDelay","JSON","stringify","exit","Test","fileHash","tags","func","cleanupHandlers","cleanupHandler","cleanup","allTests","fileBeingLoaded","fileBeingLoadedHash","getAllTests","testdir","filenames","n","pathBasename","fullPath","createHash","update","digest","define","tagsList","sort","tagDescriptions","checkout","slow","galaxy","cordova","windows","unchanged","getFilteredTests","testState","readTestState","map","test","newTags","fileRegexp","testRegexp","onlyChanged","lastPassedHashes","excludeRegexp","concat","tagsToSkip","galaxyOnly","offline","includeSlowTests","tagsToMatch","TestList","skippedTags","skipCounts","tag","fileInfo","filteredTests","filter","hash","hasSkips","hasFailures","matches","any","contains","notifyFailed","saveTestState","writeTestState","generateSkipReport","result","count","noun","nounPhrase","parenthetical","getTestStateFilePath","getHomeDir","testStateFile","parse","listTests","testList","groupBy","tests","rawInfo","runTests","totalRun","failedTests","startTime","markBottom","indent","frames","outsideFiber","relpath","pathRelative","rawError","s","historyLines","durationMs","disclaimers","failureCount","exports"],"mappings":"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","file":"tools/tool-testing/selftest.js.map","sourcesContent":["var _ = require('underscore');\nvar util = require('util');\nvar Future = require('fibers/future');\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar child_process = require('child_process');\n\nvar files = require('../fs/files.js');\nvar utils = require('../utils/utils.js');\nvar parseStack = require('../utils/parse-stack.js');\nvar Console = require('../console/console.js').Console;\nvar archinfo = require('../utils/archinfo.js');\nvar config = require('../meteor-services/config.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar execFileSync = require('../utils/processes.js').execFileSync;\nvar { getUrlWithResuming } = require(\"../utils/http-helpers.js\");\nvar Builder = require('../isobuild/builder.js').default;\n\nvar catalog = require('../packaging/catalog/catalog.js');\nvar catalogRemote = require('../packaging/catalog/catalog-remote.js');\nvar isopackCacheModule = require('../isobuild/isopack-cache.js');\nvar isopackets = require('../tool-env/isopackets.js');\n\nvar tropohouseModule = require('../packaging/tropohouse.js');\nvar packageMapModule = require('../packaging/package-map.js');\nvar release = require('../packaging/release.js');\n\nvar projectContextModule = require('../project-context.js');\nvar upgraders = require('../upgraders.js');\n\nrequire(\"../tool-env/install-runtime.js\");\n\nfunction checkTestOnlyDependency(name) {\n  try {\n    var absPath = require.resolve(name);\n  } catch (e) {\n    throw new Error([\n      \"Please install \" + name + \" by running the following command:\",\n      \"\",\n      \"  /path/to/meteor npm install -g \" + name,\n      \"\",\n      \"Where `/path/to/meteor` is the executable you used to run this self-test.\",\n      \"\"\n    ].join(\"\\n\"));\n  }\n\n  return require(absPath);\n}\n\nvar phantomjs = checkTestOnlyDependency(\"phantomjs-prebuilt\");\nvar webdriver = checkTestOnlyDependency('browserstack-webdriver');\n\n// To allow long stack traces that cross async boundaries\nrequire('longjohn');\n\n// Exception representing a test failure\nvar TestFailure = function (reason, details) {\n  var self = this;\n  self.reason = reason;\n  self.details = details || {};\n  self.stack = (new Error).stack;\n};\n\n// Use this to decorate functions that throw TestFailure. Decorate the\n// first function that should not be included in the call stack shown\n// to the user.\nvar markStack = function (f) {\n  return parseStack.markTop(f);\n};\n\n// Call from a test to throw a TestFailure exception and bail out of the test\nvar fail = markStack(function (reason) {\n  throw new TestFailure(reason);\n});\n\n// Call from a test to assert that 'actual' is equal to 'expected',\n// with 'actual' being the value that the test got and 'expected'\n// being the expected value\nvar expectEqual = markStack(function (actual, expected) {\n  var Package = isopackets.load('ejson');\n  if (! Package.ejson.EJSON.equals(actual, expected)) {\n    throw new TestFailure(\"not-equal\", {\n      expected: expected,\n      actual: actual\n    });\n  }\n});\n\n// Call from a test to assert that 'actual' is truthy.\nvar expectTrue = markStack(function (actual) {\n  if (! actual) {\n    throw new TestFailure('not-true');\n  }\n});\n// Call from a test to assert that 'actual' is falsey.\nvar expectFalse = markStack(function (actual) {\n  if (actual) {\n    throw new TestFailure('not-false');\n  }\n});\n\nvar expectThrows = markStack(function (f) {\n  var threw = false;\n  try {\n    f();\n  } catch (e) {\n    threw = true;\n  }\n\n  if (! threw) {\n    throw new TestFailure(\"expected-exception\");\n  }\n});\n\nvar doOrThrow = function (f) {\n  var ret;\n  var messages = buildmessage.capture(function () {\n    ret = f();\n  });\n  if (messages.hasMessages()) {\n    throw Error(messages.formatMessages());\n  }\n  return ret;\n};\n\n// Our current strategy for running tests that need warehouses is to build all\n// packages from the checkout into this temporary tropohouse directory, and for\n// each test that need a fake warehouse, copy the built packages into the\n// test-specific warehouse directory.  This isn't particularly fast, but it'll\n// do for now. We build the packages during the first test that needs them.\nvar builtPackageTropohouseDir = null;\nvar tropohouseLocalCatalog = null;\nvar tropohouseIsopackCache = null;\n\n// Let's build a minimal set of packages that's enough to get self-test\n// working.  (And that doesn't need us to download any Atmosphere packages.)\nvar ROOT_PACKAGES_TO_BUILD_IN_SANDBOX = [\n  // We need the tool in order to run from the fake warehouse at all.\n  \"meteor-tool\",\n\n  // We need the packages in the skeleton app in order to test 'meteor create'.\n  'meteor-base',\n  'mobile-experience',\n  'mongo',\n  'blaze-html-templates',\n  'session',\n  'jquery',\n  'tracker',\n  \"autopublish\",\n  \"insecure\",\n  \"standard-minifier-css\",\n  \"standard-minifier-js\",\n  \"es5-shim\",\n  \"shell-server\"\n];\n\nvar setUpBuiltPackageTropohouse = function () {\n  if (builtPackageTropohouseDir) {\n    return;\n  }\n  builtPackageTropohouseDir = files.mkdtemp('built-package-tropohouse');\n\n  if (config.getPackagesDirectoryName() !== 'packages') {\n    throw Error(\"running self-test with METEOR_PACKAGE_SERVER_URL set?\");\n  }\n\n  var tropohouse = new tropohouseModule.Tropohouse(builtPackageTropohouseDir);\n  tropohouseLocalCatalog = newSelfTestCatalog();\n  var versions = {};\n  _.each(\n    tropohouseLocalCatalog.getAllNonTestPackageNames(),\n    function (packageName) {\n      versions[packageName] =\n        tropohouseLocalCatalog.getLatestVersion(packageName).version;\n  });\n  var packageMap = new packageMapModule.PackageMap(versions, {\n    localCatalog: tropohouseLocalCatalog\n  });\n  // Make an isopack cache that doesn't automatically save isopacks to disk and\n  // has no access to versioned packages.\n  tropohouseIsopackCache = new isopackCacheModule.IsopackCache({\n    packageMap: packageMap,\n    includeCordovaUnibuild: true\n  });\n  doOrThrow(function () {\n    buildmessage.enterJob(\"building self-test packages\", function () {\n      // Build the packages into the in-memory IsopackCache.\n      tropohouseIsopackCache.buildLocalPackages(\n        ROOT_PACKAGES_TO_BUILD_IN_SANDBOX);\n    });\n  });\n\n  // Save all the isopacks into builtPackageTropohouseDir/packages.  (Note that\n  // we are always putting them into the default 'packages' (assuming\n  // $METEOR_PACKAGE_SERVER_URL is not set in the self-test process itself) even\n  // though some tests will want them to be under\n  // 'packages-for-server/test-packages'; we'll fix this in _makeWarehouse.\n  tropohouseIsopackCache.eachBuiltIsopack(function (name, isopack) {\n    tropohouse._saveIsopack(isopack, name);\n  });\n};\n\nvar newSelfTestCatalog = function () {\n  if (! files.inCheckout()) {\n    throw Error(\"Only can build packages from a checkout\");\n  }\n\n  var catalogLocal = require('../packaging/catalog/catalog-local.js');\n  var selfTestCatalog = new catalogLocal.LocalCatalog;\n  var messages = buildmessage.capture(\n    { title: \"scanning local core packages\" },\n    function () {\n      const packagesDir =\n        files.pathJoin(files.getCurrentToolsDir(), 'packages');\n\n      // When building a fake warehouse from a checkout, we use local packages,\n      // but *ONLY THOSE FROM THE CHECKOUT*: not app packages or $PACKAGE_DIRS\n      // packages.  One side effect of this: we really really expect them to all\n      // build, and we're fine with dying if they don't (there's no worries\n      // about needing to springboard).\n      selfTestCatalog.initialize({\n        localPackageSearchDirs: [\n          packagesDir,\n          files.pathJoin(packagesDir, \"non-core\", \"*\", \"packages\"),\n        ],\n      });\n    });\n  if (messages.hasMessages()) {\n    Console.arrowError(\"Errors while scanning core packages:\");\n    Console.printMessages(messages);\n    throw new Error(\"scan failed?\");\n  }\n  return selfTestCatalog;\n};\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Matcher\n///////////////////////////////////////////////////////////////////////////////\n\n// Handles the job of waiting until text is seen that matches a\n// regular expression.\n\nvar Matcher = function (run) {\n  var self = this;\n  self.buf = \"\";\n  self.ended = false;\n  self.matchPattern = null;\n  self.matchPromise = null;\n  self.matchStrict = null;\n  self.run = run; // used only to set a field on exceptions\n};\n\n_.extend(Matcher.prototype, {\n  write: function (data) {\n    var self = this;\n    self.buf += data;\n    self._tryMatch();\n  },\n\n  match: function (pattern, timeout, strict) {\n    var self = this;\n    if (self.matchPromise) {\n      throw new Error(\"already have a match pending?\");\n    }\n    self.matchPattern = pattern;\n    self.matchStrict = strict;\n    var mp = self.matchPromise = fiberHelpers.makeFulfillablePromise();\n    self._tryMatch(); // could clear self.matchPromise\n\n    var timer = null;\n    if (timeout) {\n      timer = setTimeout(function () {\n        var pattern = self.matchPattern;\n        self.matchPattern = null;\n        self.matchStrict = null;\n        self.matchPromise = null;\n        mp.reject(new TestFailure('match-timeout', {\n          run: self.run,\n          pattern: pattern\n        }));\n      }, timeout * 1000);\n    }\n\n    try {\n      return mp.await();\n    } finally {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    }\n  },\n\n  end: function () {\n    var self = this;\n    self.ended = true;\n    self._tryMatch();\n  },\n\n  matchEmpty: function () {\n    var self = this;\n\n    if (self.buf.length > 0) {\n      Console.info(\"Extra junk is :\", self.buf);\n      throw new TestFailure('junk-at-end', { run: self.run });\n    }\n  },\n\n  _tryMatch: function () {\n    var self = this;\n\n    var mp = self.matchPromise;\n    if (! mp) {\n      return;\n    }\n\n    var ret = null;\n\n    if (self.matchPattern instanceof RegExp) {\n      var m = self.buf.match(self.matchPattern);\n      if (m) {\n        if (self.matchStrict && m.index !== 0) {\n          self.matchPromise = null;\n          self.matchStrict = null;\n          self.matchPattern = null;\n          Console.info(\"Extra junk is: \", self.buf.substr(0, m.index));\n          mp.reject(new TestFailure('junk-before', {\n            run: self.run,\n            pattern: self.matchPattern\n          }));\n          return;\n        }\n        ret = m;\n        self.buf = self.buf.slice(m.index + m[0].length);\n      }\n    } else {\n      var i = self.buf.indexOf(self.matchPattern);\n      if (i !== -1) {\n        if (self.matchStrict && i !== 0) {\n          self.matchPromise = null;\n          self.matchStrict = null;\n          self.matchPattern = null;\n          Console.info(\"Extra junk is: \", self.buf.substr(0, i));\n          mp.reject(new TestFailure('junk-before', {\n            run: self.run,\n            pattern: self.matchPattern\n          }));\n          return;\n        }\n        ret = self.matchPattern;\n        self.buf = self.buf.slice(i + self.matchPattern.length);\n      }\n    }\n\n    if (ret !== null) {\n      self.matchPromise = null;\n      self.matchStrict = null;\n      self.matchPattern = null;\n      mp.resolve(ret);\n      return;\n    }\n\n    if (self.ended) {\n      var failure = new TestFailure('no-match', { run: self.run,\n                                                  pattern: self.matchPattern });\n      self.matchPromise = null;\n      self.matchStrict = null;\n      self.matchPattern = null;\n      mp.reject(failure);\n      return;\n    }\n  }\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// OutputLog\n///////////////////////////////////////////////////////////////////////////////\n\n// Maintains a line-by-line merged log of multiple output channels\n// (eg, stdout and stderr).\n\nvar OutputLog = function (run) {\n  var self = this;\n\n  // each entry is an object with keys 'channel', 'text', and if it is\n  // the last entry and there was no newline terminator, 'bare'\n  self.lines = [];\n\n  // map from a channel name to an object representing a partially\n  // read line of text on that channel. That object has keys 'text'\n  // (text read), 'offset' (cursor position, equal to text.length\n  // unless a '\\r' has been read).\n  self.buffers = {};\n\n  // a Run, exclusively for inclusion in exceptions\n  self.run = run;\n};\n\n_.extend(OutputLog.prototype, {\n  write: function (channel, text) {\n    var self = this;\n\n    if (! _.has(self.buffers, 'channel')) {\n      self.buffers[channel] = { text: '', offset: 0};\n    }\n    var b = self.buffers[channel];\n\n    while (text.length) {\n      var m = text.match(/^[^\\n\\r]+/);\n      if (m) {\n        // A run of non-control characters.\n        b.text = b.text.substr(0, b.offset) +\n          m[0] + b.text.substr(b.offset + m[0].length);\n        b.offset += m[0].length;\n        text = text.substr(m[0].length);\n        continue;\n      }\n\n      if (text[0] === '\\r') {\n        b.offset = 0;\n        text = text.substr(1);\n        continue;\n      }\n\n      if (text[0] === '\\n') {\n        self.lines.push({ channel: channel, text: b.text });\n        b.text = '';\n        b.offset = 0;\n        text = text.substr(1);\n        continue;\n      }\n\n      throw new Error(\"conditions should have been exhaustive?\");\n    }\n  },\n\n  end: function () {\n    var self = this;\n\n    _.each(_.keys(self.buffers), function (channel) {\n      if (self.buffers[channel].text.length) {\n        self.lines.push({ channel: channel,\n                          text: self.buffers[channel].text,\n                          bare: true });\n        self.buffers[channel] = { text: '', offset: 0};\n      }\n    });\n  },\n\n  forbid: function (pattern, channel) {\n    var self = this;\n    _.each(self.lines, function (line) {\n      if (channel && channel !== line.channel) {\n        return;\n      }\n\n      var match = (pattern instanceof RegExp) ?\n        (line.text.match(pattern)) : (line.text.indexOf(pattern) !== -1);\n      if (match) {\n        throw new TestFailure('forbidden-string-present', { run: self.run });\n      }\n    });\n  },\n\n  get: function () {\n    var self = this;\n    return self.lines;\n  }\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Sandbox\n///////////////////////////////////////////////////////////////////////////////\n\n// Represents an install of the tool. Creating this creates a private\n// sandbox with its own state, separate from the state of the current\n// meteor install or checkout, from the user's homedir, and from the\n// state of any other sandbox. It also creates an empty directory\n// which will be, by default, the cwd for runs created inside the\n// sandbox (you can change this with the cd() method).\n//\n// This will throw TestFailure if it has to build packages to set up\n// the sandbox and the build fails. So, only call it from inside\n// tests.\n//\n// options:\n// - warehouse: set to sandbox the warehouse too. If you don't do\n//   this, the tests are run in the same context (checkout or\n//   warehouse) as the actual copy of meteor you're running (the\n//   meteor in 'meteor self-test'. This may only be set when you're\n//   running 'meteor self-test' from a checkout. If it is set, it\n//   should look something like this:\n//   {\n//     version1: { tools: 'tools1', notices: (...) },\n//     version2: { tools: 'tools2', upgraders: [\"a\"],\n//     notices: (...), latest: true }\n//   }\n//   This would set up a simulated warehouse with two releases in it,\n//   one called 'version1' and having a tools version of 'tools1', and\n//   similarly with 'version2'/'tools2', with the latter being marked\n//   as the latest release, and the latter also having a single\n//   upgrader named \"a\". The releases are made by building the\n//   checkout into a release, and are identical except for their\n//   version names. If you pass 'notices' (which is optional), set it\n//   to the verbatim contents of the notices.json file for the\n//   release, as an object.\n// - fakeMongo: if set, set an environment variable that causes our\n//   'fake-mongod' stub process to be started instead of 'mongod'. The\n//   tellMongo method then becomes available on Runs for controlling\n//   the stub.\n// - clients\n//   - browserstack: true if browserstack clients should be used\n//   - port: the port that the clients should run on\n\nvar Sandbox = function (options) {\n  var self = this;\n  // default options\n  options = _.extend({ clients: {} }, options);\n\n  self.root = files.mkdtemp();\n  self.warehouse = null;\n\n  self.home = files.pathJoin(self.root, 'home');\n  files.mkdir(self.home, 0o755);\n  self.cwd = self.home;\n  self.env = {};\n  self.fakeMongo = options.fakeMongo;\n\n  if (_.has(options, 'warehouse')) {\n    if (!files.inCheckout()) {\n      throw Error(\"make only use a fake warehouse in a checkout\");\n    }\n    self.warehouse = files.pathJoin(self.root, 'tropohouse');\n    self._makeWarehouse(options.warehouse);\n  }\n\n  self.clients = [new PhantomClient({\n    host: 'localhost',\n    port: options.clients.port || 3000\n  })];\n\n  if (options.clients && options.clients.browserstack) {\n    var browsers = [\n      { browserName: 'firefox' },\n      { browserName: 'chrome' },\n      { browserName: 'internet explorer',\n        browserVersion: '11' },\n      { browserName: 'internet explorer',\n        browserVersion: '8',\n        timeout: 60 },\n      { browserName: 'safari' },\n      { browserName: 'android' }\n    ];\n\n    _.each(browsers, function (browser) {\n      self.clients.push(new BrowserStackClient({\n        host: 'localhost',\n        port: 3000,\n        browserName: browser.browserName,\n        browserVersion: browser.browserVersion,\n        timeout: browser.timeout\n      }));\n    });\n  }\n\n  var meteorScript = process.platform === \"win32\" ? \"meteor.bat\" : \"meteor\";\n\n  // Figure out the 'meteor' to run\n  if (self.warehouse) {\n    self.execPath = files.pathJoin(self.warehouse, meteorScript);\n  } else {\n    self.execPath = files.pathJoin(files.getCurrentToolsDir(), meteorScript);\n  }\n};\n\n_.extend(Sandbox.prototype, {\n  // Create a new test run of the tool in this sandbox.\n  run: function (...args) {\n    var self = this;\n\n    return new Run(self.execPath, {\n      sandbox: self,\n      args: args,\n      cwd: self.cwd,\n      env: self._makeEnv(),\n      fakeMongo: self.fakeMongo\n    });\n  },\n\n  // Tests a set of clients with the argument function. Each call to f(run)\n  // instantiates a Run with a different client.\n  // Use:\n  // sandbox.testWithAllClients(function (run) {\n  //   // pre-connection checks\n  //   run.connectClient();\n  //   // post-connection checks\n  // });\n  testWithAllClients: function (f, ...args) {\n    var self = this;\n    args = _.compact(args);\n\n    console.log(\"running test with \" + self.clients.length + \" client(s).\");\n\n    _.each(self.clients, function (client) {\n      console.log(\"testing with \" + client.name + \"...\");\n      var run = new Run(self.execPath, {\n        sandbox: self,\n        args: args,\n        cwd: self.cwd,\n        env: self._makeEnv(),\n        fakeMongo: self.fakeMongo,\n        client: client\n      });\n      run.baseTimeout = client.timeout;\n      f(run);\n    });\n  },\n\n  // Copy an app from a template into the current directory in the\n  // sandbox. 'to' is the subdirectory to put the app in, and\n  // 'template' is a subdirectory of tools/tests/apps to copy.\n  //\n  // Note that the arguments are the opposite order from 'cp'. That\n  // seems more intuitive to me -- if you disagree, my apologies.\n  //\n  // For example:\n  //   s.createApp('myapp', 'empty');\n  //   s.cd('myapp');\n  createApp: function (to, template, options) {\n    var self = this;\n    options = options || {};\n    var absoluteTo = files.pathJoin(self.cwd, to);\n    files.cp_r(files.pathJoin(\n      files.convertToStandardPath(__dirname), '..', 'tests', 'apps', template),\n        absoluteTo, { ignore: [/^local$/] });\n    // If the test isn't explicitly managing a mock warehouse, ensure that apps\n    // run with our release by default.\n    if (options.release) {\n      self.write(files.pathJoin(to, '.meteor/release'), options.release);\n    } else if (!self.warehouse && release.current.isProperRelease()) {\n      self.write(files.pathJoin(to, '.meteor/release'), release.current.name);\n    }\n\n    // Make sure the apps don't run any upgraders, unless they intentionally\n    // have a partial upgraders file\n    var upgradersFile =\n      new projectContextModule.FinishedUpgraders({projectDir: absoluteTo});\n    if (_.isEmpty(upgradersFile.readUpgraders())) {\n      upgradersFile.appendUpgraders(upgraders.allUpgraders());\n    }\n\n    if (options.dontPrepareApp) {\n      return;\n    }\n\n    // Prepare the app (ie, build or download packages). We give this a nice\n    // long timeout, which allows the next command to not need a bloated\n    // timeout. (meteor create does this anyway.)\n    self.cd(to, function () {\n      var run = self.run(\"--prepare-app\");\n      // XXX Can we cache the output of running this once somewhere, so that\n      // multiple calls to createApp with the same template get the same cache?\n      // This is a little tricky because isopack-buildinfo.json uses absolute\n      // paths.\n      run.waitSecs(120);\n      run.expectExit(0);\n    });\n  },\n\n  // Same as createApp, but with a package.\n  //\n  // @param packageDir  {String} The directory in which to create the package\n  // @param packageName {String} The package name to create. This string will\n  //                             replace all appearances of ~package-name~\n  //                             in any package*.js files in the template\n  // @param template    {String} The package template to use. Found as a\n  //                             subdirectory in tests/packages/\n  //\n  // For example:\n  //   s.createPackage('me_mypack', me:mypack', 'empty');\n  //   s.cd('me_mypack');\n  createPackage: function (packageDir, packageName, template) {\n    var self = this;\n    var packagePath = files.pathJoin(self.cwd, packageDir);\n    var templatePackagePath = files.pathJoin(\n      files.convertToStandardPath(__dirname), '..', 'tests', 'packages', template);\n    files.cp_r(templatePackagePath, packagePath);\n\n    _.each(files.readdir(packagePath), function (file) {\n      if (file.match(/^package.*\\.js$/)) {\n        var packageJsFile = files.pathJoin(packagePath, file);\n        files.writeFile(\n          packageJsFile,\n          files.readFile(packageJsFile, \"utf8\")\n            .replace(\"~package-name~\", packageName));\n      }\n    });\n  },\n\n  // Change the cwd to be used for subsequent runs. For example:\n  //   s.run('create', 'myapp').expectExit(0);\n  //   s.cd('myapp');\n  //   s.run('add', 'somepackage') ...\n  // If you provide a callback, it will invoke the callback and then\n  // change the cwd back to the previous value.  eg:\n  //   s.cd('app1', function () {\n  //     s.run('add', 'somepackage');\n  //   });\n  //   s.cd('app2', function () {\n  //     s.run('add', 'somepackage');\n  //   });\n  cd: function (relativePath, callback) {\n    var self = this;\n    var previous = self.cwd;\n    self.cwd = files.pathResolve(self.cwd, relativePath);\n    if (callback) {\n      callback();\n      self.cwd = previous;\n    }\n  },\n\n  // Set an environment variable for subsequent runs.\n  set: function (name, value) {\n    var self = this;\n    self.env[name] = value;\n  },\n\n  // Undo set().\n  unset: function (name) {\n    var self = this;\n    delete self.env[name];\n  },\n\n  // Write to a file in the sandbox, overwriting its current contents\n  // if any. 'filename' is a path intepreted relative to the Sandbox's\n  // cwd. 'contents' is a string (utf8 is assumed).\n  write: function (filename, contents) {\n    var self = this;\n    files.writeFile(files.pathJoin(self.cwd, filename), contents, 'utf8');\n  },\n\n  // Like writeFile, but appends rather than writes.\n  append: function (filename, contents) {\n    var self = this;\n    files.appendFile(files.pathJoin(self.cwd, filename), contents, 'utf8');\n  },\n\n  // Reads a file in the sandbox as a utf8 string. 'filename' is a\n  // path intepreted relative to the Sandbox's cwd.  Returns null if\n  // file does not exist.\n  read: function (filename) {\n    var self = this;\n    var file = files.pathJoin(self.cwd, filename);\n    if (!files.exists(file)) {\n      return null;\n    } else {\n      return files.readFile(files.pathJoin(self.cwd, filename), 'utf8');\n    }\n  },\n\n  // Copy the contents of one file to another.  In these series of tests, we often\n  // want to switch contents of package.js files. It is more legible to copy in\n  // the backup file rather than trying to write into it manually.\n  cp: function(from, to) {\n    var self = this;\n    var contents = self.read(from);\n    if (!contents) {\n      throw new Error(\"File \" + from + \" does not exist.\");\n    };\n    self.write(to, contents);\n  },\n\n  // Delete a file in the sandbox. 'filename' is as in write().\n  unlink: function (filename) {\n    var self = this;\n    files.unlink(files.pathJoin(self.cwd, filename));\n  },\n\n  // Make a directory in the sandbox. 'filename' is as in write().\n  mkdir: function (dirname) {\n    var self = this;\n    var dirPath = files.pathJoin(self.cwd, dirname);\n    if (! files.exists(dirPath)) {\n      files.mkdir(dirPath);\n    }\n  },\n\n  // Rename something in the sandbox. 'oldName' and 'newName' are as in write().\n  rename: function (oldName, newName) {\n    var self = this;\n    files.rename(files.pathJoin(self.cwd, oldName),\n                 files.pathJoin(self.cwd, newName));\n  },\n\n  // Return the current contents of .meteorsession in the sandbox.\n  readSessionFile: function () {\n    var self = this;\n    return files.readFile(files.pathJoin(self.root, '.meteorsession'), 'utf8');\n  },\n\n  // Overwrite .meteorsession in the sandbox with 'contents'. You\n  // could use this in conjunction with readSessionFile to save and\n  // restore authentication states.\n  writeSessionFile: function (contents) {\n    var self = this;\n    return files.writeFile(files.pathJoin(self.root, '.meteorsession'),\n                           contents, 'utf8');\n  },\n\n  _makeEnv: function () {\n    var self = this;\n    var env = _.clone(self.env);\n    env.METEOR_SESSION_FILE = files.convertToOSPath(\n      files.pathJoin(self.root, '.meteorsession'));\n\n    if (self.warehouse) {\n      // Tell it where the warehouse lives.\n      env.METEOR_WAREHOUSE_DIR = files.convertToOSPath(self.warehouse);\n\n      // Don't ever try to refresh the stub catalog we made.\n      env.METEOR_OFFLINE_CATALOG = \"t\";\n    }\n\n    // By default (ie, with no mock warehouse and no --release arg) we should be\n    // testing the actual release this is built in, so we pretend that it is the\n    // latest release.\n    if (!self.warehouse && release.current.isProperRelease()) {\n      env.METEOR_TEST_LATEST_RELEASE = release.current.name;\n    }\n\n    // Allow user to set TOOL_NODE_FLAGS for self-test app.\n    if (process.env.TOOL_NODE_FLAGS && ! process.env.SELF_TEST_TOOL_NODE_FLAGS)\n      console.log('Consider setting SELF_TEST_TOOL_NODE_FLAGS to configure ' +\n                  'self-test test applicaion spawns');\n    env.TOOL_NODE_FLAGS = process.env.SELF_TEST_TOOL_NODE_FLAGS || '';\n\n    return env;\n  },\n\n  // Writes a stub warehouse (really a tropohouse) to the directory\n  // self.warehouse. This warehouse only contains a meteor-tool package and some\n  // releases containing that tool only (and no packages).\n  //\n  // packageServerUrl indicates which package server we think we are using. Use\n  // the default, if we do not pass this in; you should pass it in any case that\n  // you will be specifying $METEOR_PACKAGE_SERVER_URL in the environment of a\n  // command you are running in this sandbox.\n  _makeWarehouse: function (releases) {\n    var self = this;\n\n    // Ensure we have a tropohouse to copy stuff out of.\n    setUpBuiltPackageTropohouse();\n\n    var serverUrl = self.env.METEOR_PACKAGE_SERVER_URL;\n    var packagesDirectoryName = config.getPackagesDirectoryName(serverUrl);\n\n    var builder = new Builder({outputPath: self.warehouse});\n    builder.copyDirectory({\n      from: files.pathJoin(builtPackageTropohouseDir, 'packages'),\n      to: packagesDirectoryName,\n      symlink: true\n    });\n    builder.complete();\n\n    var stubCatalog = {\n      syncToken: {},\n      formatVersion: \"1.0\",\n      collections: {\n        packages: [],\n        versions: [],\n        builds: [],\n        releaseTracks: [],\n        releaseVersions: []\n      }\n    };\n\n    var packageVersions = {};\n    var toolPackageVersion = null;\n\n    tropohouseIsopackCache.eachBuiltIsopack(function (packageName, isopack) {\n      var packageRec = tropohouseLocalCatalog.getPackage(packageName);\n      if (! packageRec) {\n        throw Error(\"no package record for \" + packageName);\n      }\n      stubCatalog.collections.packages.push(packageRec);\n\n      var versionRec = tropohouseLocalCatalog.getLatestVersion(packageName);\n      if (! versionRec) {\n        throw Error(\"no version record for \" + packageName);\n      }\n      stubCatalog.collections.versions.push(versionRec);\n\n      stubCatalog.collections.builds.push({\n        buildArchitectures: isopack.buildArchitectures(),\n        versionId: versionRec._id,\n        _id: utils.randomToken()\n      });\n\n      if (packageName === \"meteor-tool\") {\n        toolPackageVersion = versionRec.version;\n      } else {\n        packageVersions[packageName] = versionRec.version;\n      }\n    });\n\n    if (! toolPackageVersion) {\n      throw Error(\"no meteor-tool?\");\n    }\n\n    stubCatalog.collections.releaseTracks.push({\n      name: catalog.DEFAULT_TRACK,\n      _id: utils.randomToken()\n    });\n\n    // Now create each requested release.\n    _.each(releases, function (configuration, releaseName) {\n      // Release info\n      stubCatalog.collections.releaseVersions.push({\n        track: catalog.DEFAULT_TRACK,\n        _id: Math.random().toString(),\n        version: releaseName,\n        orderKey: releaseName,\n        description: \"test release \" + releaseName,\n        recommended: !!configuration.recommended,\n        tool: configuration.tool || \"meteor-tool@\" + toolPackageVersion,\n        packages: packageVersions\n      });\n    });\n\n    var dataFile = config.getPackageStorage({\n      root: self.warehouse,\n      serverUrl: serverUrl\n    });\n    self.warehouseOfficialCatalog = new catalogRemote.RemoteCatalog();\n    self.warehouseOfficialCatalog.initialize({\n      packageStorage: dataFile\n    });\n    self.warehouseOfficialCatalog.insertData(stubCatalog);\n\n    // And a cherry on top\n    // XXX this is hacky\n    files.linkToMeteorScript(\n      files.pathJoin(self.warehouse, packagesDirectoryName, \"meteor-tool\", toolPackageVersion,\n        'mt-' + archinfo.host(), 'meteor'),\n      files.pathJoin(self.warehouse, 'meteor'));\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// Client\n///////////////////////////////////////////////////////////////////////////////\n\nvar Client = function (options) {\n  var self = this;\n\n  self.host = options.host;\n  self.port = options.port;\n  self.url = \"http://\" + self.host + \":\" + self.port + '/' +\n    (Math.random() * 0x100000000 + 1).toString(36);\n  self.timeout = options.timeout || 40;\n\n  if (! self.connect || ! self.stop) {\n    console.log(\"Missing methods in subclass of Client.\");\n  }\n};\n\n// PhantomClient\nvar PhantomClient = function (options) {\n  var self = this;\n  Client.apply(this, arguments);\n\n  self.name = \"phantomjs\";\n  self.process = null;\n\n  self._logError = true;\n};\n\nutil.inherits(PhantomClient, Client);\n\n_.extend(PhantomClient.prototype, {\n  connect: function () {\n    var self = this;\n\n    var phantomPath = phantomjs.path;\n\n    var scriptPath = files.pathJoin(files.getCurrentToolsDir(), \"tools\",\n      \"tool-testing\", \"phantom\", \"open-url.js\");\n    self.process = child_process.execFile(phantomPath, [\"--load-images=no\",\n      files.convertToOSPath(scriptPath), self.url],\n      {}, function (error, stdout, stderr) {\n        if (self._logError && error) {\n          console.log(\"PhantomJS exited with error \", error, \"\\nstdout:\\n\", stdout, \"\\nstderr:\\n\", stderr);\n        }\n      });\n  },\n\n  stop: function() {\n    var self = this;\n    // Suppress the expected SIGTERM exit 'failure'\n    self._logError = false;\n    self.process && self.process.kill();\n    self.process = null;\n  }\n});\n\n// BrowserStackClient\nvar browserStackKey = null;\n\nvar BrowserStackClient = function (options) {\n  var self = this;\n  Client.apply(this, arguments);\n\n  self.tunnelProcess = null;\n  self.driver = null;\n\n  self.browserName = options.browserName;\n  self.browserVersion = options.browserVersion;\n\n  self.name = \"BrowserStack - \" + self.browserName;\n  if (self.browserVersion) {\n    self.name += \" \" + self.browserVersion;\n  }\n};\n\nutil.inherits(BrowserStackClient, Client);\n\n_.extend(BrowserStackClient.prototype, {\n  connect: function () {\n    var self = this;\n\n    // memoize the key\n    if (browserStackKey === null) {\n      browserStackKey = self._getBrowserStackKey();\n    }\n    if (! browserStackKey) {\n      throw new Error(\"BrowserStack key not found. Ensure that you \" +\n        \"have installed your S3 credentials.\");\n    }\n\n    var capabilities = {\n      'browserName' : self.browserName,\n      'browserstack.user' : 'meteor',\n      'browserstack.local' : 'true',\n      'browserstack.key' : browserStackKey\n    };\n\n    if (self.browserVersion) {\n      capabilities.browserVersion = self.browserVersion;\n    }\n\n    self._launchBrowserStackTunnel(function (error) {\n      if (error) {\n        throw error;\n      }\n\n      self.driver = new webdriver.Builder().\n        usingServer('http://hub.browserstack.com/wd/hub').\n        withCapabilities(capabilities).\n        build();\n      self.driver.get(self.url);\n    });\n  },\n\n  stop: function() {\n    var self = this;\n    self.tunnelProcess && self.tunnelProcess.kill();\n    self.tunnelProcess = null;\n\n    self.driver && self.driver.quit();\n    self.driver = null;\n  },\n\n  _getBrowserStackKey: function () {\n    var outputDir = files.pathJoin(files.mkdtemp(), \"key\");\n\n    try {\n      execFileSync(\"s3cmd\", [\"get\",\n        \"s3://meteor-browserstack-keys/browserstack-key\",\n        outputDir\n      ]);\n\n      return files.readFile(outputDir, \"utf8\").trim();\n    } catch (e) {\n      return null;\n    }\n  },\n\n  _launchBrowserStackTunnel: function (callback) {\n    const self = this;\n    const browserStackPath = ensureBrowserStack();\n\n    var args = [\n      browserStackPath,\n      browserStackKey,\n      [self.host, self.port, 0].join(','),\n      // Disable Live Testing and Screenshots, just test with Automate.\n      '-onlyAutomate',\n      // Do not wait for the server to be ready to spawn the process.\n      '-skipCheck'\n    ];\n    self.tunnelProcess = child_process.execFile(\n      '/usr/bin/env',\n      ['bash', '-c', args.join(' ')]\n    );\n\n    // Called when the SSH tunnel is established.\n    self.tunnelProcess.stdout.on('data', function(data) {\n      if (data.toString().match(/You can now access your local server/)) {\n        callback();\n      }\n    });\n  }\n});\n\nfunction ensureBrowserStack() {\n  const browserStackPath = files.pathJoin(\n    files.getDevBundle(),\n    'bin',\n    'BrowserStackLocal'\n  );\n\n  const browserStackStat = files.statOrNull(browserStackPath);\n  if (! browserStackStat) {\n    const host = \"browserstack-binaries.s3.amazonaws.com\";\n    const OS = process.platform === \"darwin\" ? \"osx\" : \"linux\";\n    const ARCH = process.arch === \"x64\" ? \"x86_64\" : \"i686\";\n    const tarGz = `BrowserStackLocal-07-03-14-${OS}-${ARCH}.gz`;\n    const url = `https:\\/\\/${host}/${tarGz}`;\n\n    buildmessage.enterJob(\"downloading BrowserStack binaries\", () => {\n      return new Promise((resolve, reject) => {\n        const browserStackStream =\n          files.createWriteStream(browserStackPath);\n\n        browserStackStream.on(\"error\", reject);\n        browserStackStream.on(\"end\", resolve);\n\n        const gunzip = require(\"zlib\").createGunzip();\n        gunzip.pipe(browserStackStream);\n        gunzip.write(getUrlWithResuming(url));\n        gunzip.end();\n      }).await();\n    });\n  }\n\n  files.chmod(browserStackPath, 0o755);\n\n  return browserStackPath;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Run\n///////////////////////////////////////////////////////////////////////////////\n\n// Represents a test run of the tool (except we also use it in\n// tests/old.js to run Node scripts). Typically created through the\n// run() method on Sandbox, but can also be created directly, say if\n// you want to do something other than invoke the 'meteor' command in\n// a nice sandbox.\n//\n// Options: args, cwd, env\n//\n// The 'execPath' argument and the 'cwd' option are assumed to be standard\n// paths.\n//\n// Arguments in the 'args' option are not assumed to be standard paths, so\n// calling any of the 'files.*' methods on them is not safe.\nvar Run = function (execPath, options) {\n  var self = this;\n\n  self.execPath = execPath;\n  self.cwd = options.cwd || files.convertToStandardPath(process.cwd());\n  // default env variables\n  self.env = _.extend({ SELFTEST: \"t\", METEOR_NO_WORDWRAP: \"t\" }, options.env);\n  self._args = [];\n  self.proc = null;\n  self.baseTimeout = 20;\n  self.extraTime = 0;\n  self.client = options.client;\n\n  self.stdoutMatcher = new Matcher(self);\n  self.stderrMatcher = new Matcher(self);\n  self.outputLog = new OutputLog(self);\n\n  self.exitStatus = undefined; // 'null' means failed rather than exited\n  self.exitPromiseResolvers = [];\n  var opts = options.args || [];\n  self.args.apply(self, opts || []);\n\n  self.fakeMongoPort = null;\n  self.fakeMongoConnection = null;\n  if (options.fakeMongo) {\n    self.fakeMongoPort = require('../utils/utils.js').randomPort();\n    self.env.METEOR_TEST_FAKE_MONGOD_CONTROL_PORT = self.fakeMongoPort;\n  }\n\n  runningTest.onCleanup(function () {\n    self._stopWithoutWaiting();\n  });\n};\n\n_.extend(Run.prototype, {\n  // Set command-line arguments. This may be called multiple times as\n  // long as the run has not yet started (the run starts after the\n  // first call to a function that requires it, like match()).\n  //\n  // Pass as many arguments as you want. Non-object values will be\n  // cast to string, and object values will be treated as maps from\n  // option names to values.\n  args: function (...args) {\n    var self = this;\n\n    if (self.proc) {\n      throw new Error(\"already started?\");\n    }\n\n    _.each(args, function (a) {\n      if (typeof a !== \"object\") {\n        self._args.push('' + a);\n      } else {\n        _.each(a, function (value, key) {\n          self._args.push(\"--\" + key);\n          self._args.push('' + value);\n        });\n      }\n    });\n\n  },\n\n  connectClient: function () {\n    var self = this;\n    if (! self.client) {\n      throw new Error(\"Must create Run with a client to use connectClient().\");\n    }\n\n    self._ensureStarted();\n    self.client.connect();\n  },\n\n  _exited: function (status) {\n    var self = this;\n\n    if (self.exitStatus !== undefined) {\n      throw new Error(\"already exited?\");\n    }\n\n    self.client && self.client.stop();\n\n    self.exitStatus = status;\n    var exitPromiseResolvers = self.exitPromiseResolvers;\n    self.exitPromiseResolvers = null;\n    _.each(exitPromiseResolvers, function (resolve) {\n      resolve();\n    });\n\n    self.stdoutMatcher.end();\n    self.stderrMatcher.end();\n  },\n\n  _ensureStarted: function () {\n    var self = this;\n\n    if (self.proc) {\n      return;\n    }\n\n    var env = _.clone(process.env);\n    _.extend(env, self.env);\n\n    self.proc = child_process.spawn(files.convertToOSPath(self.execPath),\n      self._args, {\n        cwd: files.convertToOSPath(self.cwd),\n        env: env\n      });\n\n    self.proc.on('close', function (code, signal) {\n      if (self.exitStatus === undefined) {\n        self._exited({ code: code, signal: signal });\n      }\n    });\n\n    self.proc.on('exit', function (code, signal) {\n      if (self.exitStatus === undefined) {\n        self._exited({ code: code, signal: signal });\n      }\n    });\n\n    self.proc.on('error', function (err) {\n      if (self.exitStatus === undefined) {\n        self._exited(null);\n      }\n    });\n\n    self.proc.stdout.setEncoding('utf8');\n    self.proc.stdout.on('data', function (data) {\n      self.outputLog.write('stdout', data);\n      self.stdoutMatcher.write(data);\n    });\n\n    self.proc.stderr.setEncoding('utf8');\n    self.proc.stderr.on('data', function (data) {\n      self.outputLog.write('stderr', data);\n      self.stderrMatcher.write(data);\n    });\n  },\n\n  // Wait until we get text on stdout that matches 'pattern', which\n  // may be a regular expression or a string. Consume stdout up to\n  // that point. If this pattern does not appear after a timeout (or\n  // the program exits before emitting the pattern), fail.\n  match: markStack(function (pattern, _strict) {\n    var self = this;\n    self._ensureStarted();\n\n    var timeout = self.baseTimeout + self.extraTime;\n    timeout *= utils.timeoutScaleFactor;\n    self.extraTime = 0;\n    return self.stdoutMatcher.match(pattern, timeout, _strict);\n  }),\n\n  // As expect(), but for stderr instead of stdout.\n  matchErr: markStack(function (pattern, _strict) {\n    var self = this;\n    self._ensureStarted();\n\n    var timeout = self.baseTimeout + self.extraTime;\n    timeout *= utils.timeoutScaleFactor;\n    self.extraTime = 0;\n    return self.stderrMatcher.match(pattern, timeout, _strict);\n  }),\n\n  // Like match(), but won't skip ahead looking for a match. It must\n  // follow immediately after the last thing we matched or read.\n  read: markStack(function (pattern) {\n    return this.match(pattern, true);\n  }),\n\n  // As read(), but for stderr instead of stdout.\n  readErr: markStack(function (pattern) {\n    return this.matchErr(pattern, true);\n  }),\n\n  // Assert that 'pattern' (again, a regexp or string) has not\n  // occurred on stdout at any point so far in this run. Currently\n  // this works on complete lines, so unlike match() and read(),\n  // 'pattern' cannot span multiple lines, and furthermore if it is\n  // called before the end of the program, it may not see text on a\n  // partially read line. We could lift these restrictions easily, but\n  // there may not be any benefit since the usual way to use this is\n  // to call it after expectExit or expectEnd.\n  //\n  // Example:\n  // run = s.run(\"--help\");\n  // run.expectExit(1);  // <<-- improtant to actually run the command\n  // run.forbidErr(\"unwanted string\"); // <<-- important to run **after** the\n  //                                   // command ran the process.\n  forbid: markStack(function (pattern) {\n    this._ensureStarted();\n    this.outputLog.forbid(pattern, 'stdout');\n  }),\n\n  // As forbid(), but for stderr instead of stdout.\n  forbidErr: markStack(function (pattern) {\n    this._ensureStarted();\n    this.outputLog.forbid(pattern, 'stderr');\n  }),\n\n  // Combination of forbid() and forbidErr(). Forbids the pattern on\n  // both stdout and stderr.\n  forbidAll: markStack(function (pattern) {\n    this._ensureStarted();\n    this.outputLog.forbid(pattern);\n  }),\n\n  // Expect the program to exit without anything further being\n  // printed on either stdout or stderr.\n  expectEnd: markStack(function () {\n    var self = this;\n    self._ensureStarted();\n\n    var timeout = self.baseTimeout + self.extraTime;\n    timeout *= utils.timeoutScaleFactor;\n    self.extraTime = 0;\n    self.expectExit();\n\n    self.stdoutMatcher.matchEmpty();\n    self.stderrMatcher.matchEmpty();\n  }),\n\n  // Expect the program to exit with the given (numeric) exit\n  // status. Fail if the process exits with a different code, or if\n  // the process does not exit after a timeout. You can also omit the\n  // argument to simply wait for the program to exit.\n  expectExit: markStack(function (code) {\n    var self = this;\n    self._ensureStarted();\n\n    if (self.exitStatus === undefined) {\n      var timeout = self.baseTimeout + self.extraTime;\n      timeout *= utils.timeoutScaleFactor;\n      self.extraTime = 0;\n\n      var timer;\n      var promise = new Promise(function (resolve, reject) {\n        self.exitPromiseResolvers.push(resolve);\n        timer = setTimeout(function () {\n          self.exitPromiseResolvers = _.without(self.exitPromiseResolvers, resolve);\n          reject(new TestFailure('exit-timeout', { run: self }));\n        }, timeout * 1000);\n      });\n\n      try {\n        promise.await();\n      } finally {\n        clearTimeout(timer);\n      }\n    }\n\n    if (! self.exitStatus) {\n      throw new TestFailure('spawn-failure', { run: self });\n    }\n    if (code !== undefined && self.exitStatus.code !== code) {\n      throw new TestFailure('wrong-exit-code', {\n        expected: { code: code },\n        actual: self.exitStatus,\n        run: self\n      });\n    }\n  }),\n\n  // Extend the timeout for the next operation by 'secs' seconds.\n  waitSecs: function (secs) {\n    var self = this;\n    self.extraTime += secs;\n  },\n\n  // Send 'string' to the program on its stdin.\n  write: function (string) {\n    var self = this;\n    self._ensureStarted();\n    self.proc.stdin.write(string);\n  },\n\n  // Kill the program and then wait for it to actually exit.\n  stop: markStack(function () {\n    var self = this;\n    if (self.exitStatus === undefined) {\n      self._ensureStarted();\n      self.client && self.client.stop();\n      self._killProcess();\n      self.expectExit();\n    }\n  }),\n\n  // Like stop, but doesn't wait for it to exit.\n  _stopWithoutWaiting: function () {\n    var self = this;\n    if (self.exitStatus === undefined && self.proc) {\n      self.client && self.client.stop();\n      self._killProcess();\n    }\n  },\n\n  // Kills the running process and it's child processes\n  _killProcess: function () {\n    if (!this.proc) {\n      throw new Error(\"Unexpected: `this.proc` undefined when calling _killProcess\");\n    }\n\n    if (process.platform === \"win32\") {\n      // looks like in Windows `self.proc.kill()` doesn't kill child\n      // processes.\n      utils.execFileSync(\"taskkill\", [\"/pid\", this.proc.pid, '/f', '/t']);\n    } else {\n      this.proc.kill();\n    }\n  },\n\n  // If the fakeMongo option was set, sent a command to the stub\n  // mongod. Available commands currently are:\n  //\n  // - { stdout: \"xyz\" } to make fake-mongod write \"xyz\" to stdout\n  // - { stderr: \"xyz\" } likewise for stderr\n  // - { exit: 123 } to make fake-mongod exit with code 123\n  //\n  // Blocks until a connection to fake-mongod can be\n  // established. Throws a TestFailure if it cannot be established.\n  tellMongo: markStack(function (command) {\n    var self = this;\n\n    if (! self.fakeMongoPort) {\n      throw new Error(\"fakeMongo option on sandbox must be set\");\n    }\n\n    self._ensureStarted();\n\n    // If it's the first time we've called tellMongo on this sandbox,\n    // open a connection to fake-mongod. Wait up to 60 seconds for it\n    // to accept the connection, retrying every 100ms.\n    //\n    // XXX we never clean up this connection. Hopefully once\n    // fake-mongod has dropped its end of the connection, and we hold\n    // no reference to our end, it will get gc'd. If not, that's not\n    // great, but it probably doesn't actually create any practical\n    // problems since this is only for testing.\n    if (! self.fakeMongoConnection) {\n      var net = require('net');\n\n      var lastStartTime = 0;\n      for (var attempts = 0; ! self.fakeMongoConnection && attempts < 600;\n           attempts ++) {\n        // Throttle attempts to one every 100ms\n        utils.sleepMs((lastStartTime + 100) - (+ new Date));\n        lastStartTime = +(new Date);\n\n        new Promise(function (resolve) {\n          // This is all arranged so that if a previous attempt\n          // belatedly succeeds, somehow, we ignore it.\n          var conn = net.connect(self.fakeMongoPort, function () {\n            if (resolve) {\n              self.fakeMongoConnection = conn;\n              resolve(true);\n              resolve = null;\n            }\n          });\n          conn.setNoDelay();\n          function fail() {\n            if (resolve) {\n              resolve(false);\n              resolve = null;\n            }\n          }\n          conn.on('error', fail);\n          setTimeout(fail, 100); // 100ms connection timeout\n        }).await();\n      }\n\n      if (! self.fakeMongoConnection) {\n        throw new TestFailure(\"mongo-not-running\", { run: self });\n      }\n    }\n\n    self.fakeMongoConnection.write(JSON.stringify(command) + \"\\n\");\n    // If we told it to exit, then we should close our end and connect again if\n    // asked to send more.\n    if (command.exit) {\n      self.fakeMongoConnection.end();\n      self.fakeMongoConnection = null;\n    }\n  })\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Defining tests\n///////////////////////////////////////////////////////////////////////////////\n\nvar Test = function (options) {\n  var self = this;\n  self.name = options.name;\n  self.file = options.file;\n  self.fileHash = options.fileHash;\n  self.tags = options.tags || [];\n  self.f = options.func;\n  self.cleanupHandlers = [];\n};\n\n_.extend(Test.prototype, {\n  onCleanup: function (cleanupHandler) {\n    this.cleanupHandlers.push(cleanupHandler);\n  },\n  cleanup: function () {\n    var self = this;\n    _.each(self.cleanupHandlers, function (cleanupHandler) {\n      cleanupHandler();\n    });\n    self.cleanupHandlers = [];\n  }\n});\n\nvar allTests = null;\nvar fileBeingLoaded = null;\nvar fileBeingLoadedHash = null;\nvar runningTest = null;\nvar getAllTests = function () {\n  if (allTests) {\n    return allTests;\n  }\n  allTests = [];\n\n  // Load all files in the 'tests' directory that end in .js. They\n  // are supposed to then call define() to register their tests.\n  var testdir = files.pathJoin(__dirname, '..', 'tests');\n  var filenames = files.readdir(testdir);\n  _.each(filenames, function (n) {\n    if (! n.match(/^[^.].*\\.js$/)) {\n      // ends in '.js', doesn't start with '.'\n      return;\n    }\n    try {\n      if (fileBeingLoaded) {\n        throw new Error(\"called recursively?\");\n      }\n      fileBeingLoaded = files.pathBasename(n, '.js');\n\n      var fullPath = files.pathJoin(testdir, n);\n      var contents = files.readFile(fullPath, 'utf8');\n      fileBeingLoadedHash =\n        require('crypto').createHash('sha1').update(contents).digest('hex');\n\n      require(files.pathJoin(testdir, n));\n    } finally {\n      fileBeingLoaded = null;\n      fileBeingLoadedHash = null;\n    }\n  });\n\n  return allTests;\n};\n\nvar define = function (name, tagsList, f) {\n  if (typeof tagsList === \"function\") {\n    // tagsList is optional\n    f = tagsList;\n    tagsList = [];\n  }\n\n  var tags = tagsList.slice();\n  tags.sort();\n\n  allTests.push(new Test({\n    name: name,\n    tags: tags,\n    file: fileBeingLoaded,\n    fileHash: fileBeingLoadedHash,\n    func: f\n  }));\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Choosing tests\n///////////////////////////////////////////////////////////////////////////////\n\nvar tagDescriptions = {\n  checkout: 'can only run from checkouts',\n  net: 'require an internet connection',\n  slow: 'take quite a long time; use --slow to include',\n  galaxy: 'galaxy-specific test testing galaxy integration',\n  cordova: 'requires Cordova support in tool (eg not on Windows)',\n  windows: 'runs only on Windows',\n  // these are pseudo-tags, assigned to tests when you specify\n  // --changed, --file, or a pattern argument\n  unchanged: 'unchanged since last pass',\n  'non-matching': \"don't match specified pattern\",\n  'in other files': \"\",\n  // These tests require a setup step which can be amortized across multiple\n  // similar tests, so it makes sense to segregate them\n  'custom-warehouse': \"requires a custom warehouse\"\n};\n\n// Returns a TestList object representing a filtered list of tests,\n// according to the options given (which are based closely on the\n// command-line arguments).  Used as the first step of both listTests\n// and runTests.\n//\n// Options: testRegexp, fileRegexp, onlyChanged, offline, includeSlowTests, galaxyOnly\nvar getFilteredTests = function (options) {\n  options = options || {};\n  var allTests = getAllTests();\n\n  if (allTests.length) {\n    var testState = readTestState();\n\n    // Add pseudo-tags 'non-matching', 'unchanged', 'non-galaxy' and 'in other\n    // files' (but only so that we can then skip tests with those tags)\n    allTests = allTests.map(function (test) {\n      var newTags = [];\n\n      if (options.fileRegexp && ! options.fileRegexp.test(test.file)) {\n        newTags.push('in other files');\n      } else if (options.testRegexp && ! options.testRegexp.test(test.name)) {\n        newTags.push('non-matching');\n      } else if (options.onlyChanged &&\n                 test.fileHash === testState.lastPassedHashes[test.file]) {\n        newTags.push('unchanged');\n      } else if (options.excludeRegexp &&\n                 options.excludeRegexp.test(test.name)) {\n        newTags.push('excluded');\n      }\n\n      // We make sure to not run galaxy tests unless the user explicitly asks us\n      // to. Someday, this might not be the case.\n      if ( _.indexOf(test.tags, \"galaxy\") === -1) {\n        newTags.push('non-galaxy');\n      }\n\n      if (! newTags.length) {\n        return test;\n      }\n\n      return _.extend({}, test, { tags: test.tags.concat(newTags) });\n    });\n  }\n\n  // (order of tags is significant to the \"skip counts\" that are displayed)\n  var tagsToSkip = [];\n  if (options.fileRegexp) {\n    tagsToSkip.push('in other files');\n  }\n  if (options.testRegexp) {\n    tagsToSkip.push('non-matching');\n  }\n  if (options.excludeRegexp) {\n    tagsToSkip.push('excluded');\n  }\n  if (options.onlyChanged) {\n    tagsToSkip.push('unchanged');\n  }\n  if (! files.inCheckout()) {\n    tagsToSkip.push('checkout');\n  }\n  if (options.galaxyOnly) {\n    // We consider `galaxy` to imply `slow` and `net` since almost all galaxy\n    // tests involve deploying an app to a (probably) remote server.\n    tagsToSkip.push('non-galaxy');\n  } else {\n    tagsToSkip.push('galaxy');\n    if (options.offline) {\n      tagsToSkip.push('net');\n    }\n    if (! options.includeSlowTests) {\n      tagsToSkip.push('slow');\n    }\n  }\n\n  if (options['without-tag']) {\n    tagsToSkip.push(options['without-tag']);\n  }\n\n  if (process.platform === \"win32\") {\n    tagsToSkip.push(\"cordova\");\n    tagsToSkip.push(\"yet-unsolved-windows-failure\");\n  } else {\n    tagsToSkip.push(\"windows\");\n  }\n\n  var tagsToMatch = options['with-tag'] ? [options['with-tag']] : [];\n  return new TestList(allTests, tagsToSkip, tagsToMatch, testState);\n};\n\n// A TestList is the result of getFilteredTests.  It holds the original\n// list of all tests, the filtered list, and stats on how many tests\n// were skipped (see generateSkipReport).\n//\n// TestList also has code to save the hashes of files where all tests\n// ran and passed (for the `--changed` option).  If a testState is\n// provided, the notifyFailed and saveTestState can be used to modify\n// the testState appropriately and write it out.\nvar TestList = function (allTests, tagsToSkip, tagsToMatch, testState) {\n  tagsToSkip = (tagsToSkip || []);\n  testState = (testState || null); // optional\n\n  var self = this;\n  self.allTests = allTests;\n  self.skippedTags = tagsToSkip;\n  self.skipCounts = {};\n  self.testState = testState;\n\n  _.each(tagsToSkip, function (tag) {\n    self.skipCounts[tag] = 0;\n  });\n\n  self.fileInfo = {}; // path -> {hash, hasSkips, hasFailures}\n\n  self.filteredTests = _.filter(allTests, function (test) {\n\n    if (! self.fileInfo[test.file]) {\n      self.fileInfo[test.file] = {\n        hash: test.fileHash,\n        hasSkips: false,\n        hasFailures: false\n      };\n    }\n    var fileInfo = self.fileInfo[test.file];\n\n    if (tagsToMatch.length) {\n      var matches = _.any(tagsToMatch, function(tag) {\n        return _.contains(test.tags, tag);\n      })\n      if (!matches) {\n        return false;\n      }\n    }\n\n    // We look for tagsToSkip *in order*, and when we decide to\n    // skip a test, we don't keep looking at more tags, and we don't\n    // add the test to any further \"skip counts\".\n    return !_.any(tagsToSkip, function (tag) {\n      if (_.contains(test.tags, tag)) {\n        self.skipCounts[tag]++;\n        fileInfo.hasSkips = true;\n        return true;\n      } else {\n        return false;\n      }\n    });\n  });\n};\n\n// Mark a test's file as having failures.  This prevents\n// saveTestState from saving its hash as a potentially\n// \"unchanged\" file to be skipped in a future run.\nTestList.prototype.notifyFailed = function (test) {\n  this.fileInfo[test.file].hasFailures = true;\n};\n\n// If this TestList was constructed with a testState,\n// modify it and write it out based on which tests\n// were skipped and which tests had failures.\nTestList.prototype.saveTestState = function () {\n  var self = this;\n  var testState = self.testState;\n  if (! (testState && self.filteredTests.length)) {\n    return;\n  }\n\n  _.each(self.fileInfo, function (info, f) {\n    if (info.hasFailures) {\n      delete testState.lastPassedHashes[f];\n    } else if (! info.hasSkips) {\n      testState.lastPassedHashes[f] = info.hash;\n    }\n  });\n\n  writeTestState(testState);\n};\n\n// Return a string like \"Skipped 1 foo test\\nSkipped 5 bar tests\\n\"\nTestList.prototype.generateSkipReport = function () {\n  var self = this;\n  var result = '';\n\n  _.each(self.skippedTags, function (tag) {\n    var count = self.skipCounts[tag];\n    if (count) {\n      var noun = \"test\" + (count > 1 ? \"s\" : \"\"); // \"test\" or \"tests\"\n      // \"non-matching tests\" or \"tests in other files\"\n      var nounPhrase = (/ /.test(tag) ?\n                        (noun + \" \" + tag) : (tag + \" \" + noun));\n      // \" (foo)\" or \"\"\n      var parenthetical = (tagDescriptions[tag] ? \" (\" +\n                           tagDescriptions[tag] + \")\" : '');\n      result += (\"Skipped \" + count + \" \" + nounPhrase + parenthetical + '\\n');\n    }\n  });\n\n  return result;\n};\n\nvar getTestStateFilePath = function () {\n  return files.pathJoin(files.getHomeDir(), '.meteortest');\n};\n\nvar readTestState = function () {\n  var testStateFile = getTestStateFilePath();\n  var testState;\n  if (files.exists(testStateFile)) {\n    testState = JSON.parse(files.readFile(testStateFile, 'utf8'));\n  }\n  if (! testState || testState.version !== 1) {\n    testState = { version: 1, lastPassedHashes: {} };\n  }\n  return testState;\n};\n\nvar writeTestState = function (testState) {\n  var testStateFile = getTestStateFilePath();\n  files.writeFile(testStateFile, JSON.stringify(testState), 'utf8');\n};\n\n// Same options as getFilteredTests.  Writes to stdout and stderr.\nvar listTests = function (options) {\n  var testList = getFilteredTests(options);\n\n  if (! testList.allTests.length) {\n    Console.error(\"No tests defined.\\n\");\n    return;\n  }\n\n  _.each(_.groupBy(testList.filteredTests, 'file'), function (tests, file) {\n    Console.rawInfo(file + ':\\n');\n    _.each(tests, function (test) {\n      Console.rawInfo('  - ' + test.name +\n                      (test.tags.length ? ' [' + test.tags.join(' ') + ']'\n                      : '') + '\\n');\n    });\n  });\n\n  Console.error();\n  Console.error(testList.filteredTests.length + \" tests listed.\");\n  Console.error(testList.generateSkipReport());\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Running tests\n///////////////////////////////////////////////////////////////////////////////\n\n// options: onlyChanged, offline, includeSlowTests, historyLines, testRegexp,\n//          fileRegexp,\n//          clients:\n//             - browserstack (need s3cmd credentials)\nvar runTests = function (options) {\n  var testList = getFilteredTests(options);\n\n  if (! testList.allTests.length) {\n    Console.error(\"No tests defined.\");\n    return 0;\n  }\n\n  var totalRun = 0;\n  var failedTests = [];\n\n  _.each(testList.filteredTests, function (test) {\n    totalRun++;\n    Console.error(test.file + \": \" + test.name + \" ... \");\n\n    var failure = null;\n    try {\n      runningTest = test;\n      var startTime = +(new Date);\n      // ensure we mark the bottom of the stack each time we start a new test\n      parseStack.markBottom(() => {\n        test.f(options);\n      })();\n    } catch (e) {\n      failure = e;\n    } finally {\n      runningTest = null;\n      test.cleanup();\n    }\n\n    if (failure) {\n      Console.error(\"... fail!\", Console.options({ indent: 2 }));\n      failedTests.push(test);\n      testList.notifyFailed(test);\n\n      if (failure instanceof TestFailure) {\n        var frames = parseStack.parse(failure).outsideFiber;\n        var relpath = files.pathRelative(files.getCurrentToolsDir(),\n                                         frames[0].file);\n        Console.rawError(\"  => \" + failure.reason + \" at \" +\n                         relpath + \":\" + frames[0].line + \"\\n\");\n        if (failure.reason === 'no-match' || failure.reason === 'junk-before' ||\n            failure.reason === 'match-timeout') {\n          Console.arrowError(\"Pattern: \" + failure.details.pattern, 2);\n        }\n        if (failure.reason === \"wrong-exit-code\") {\n          var s = function (status) {\n            return status.signal || ('' + status.code) || \"???\";\n          };\n\n          Console.rawError(\n            \"  => \" + \"Expected: \" + s(failure.details.expected) +\n              \"; actual: \" + s(failure.details.actual) + \"\\n\");\n        }\n        if (failure.reason === 'expected-exception') {\n        }\n        if (failure.reason === 'not-equal') {\n          Console.rawError(\n            \"  => \" + \"Expected: \" + JSON.stringify(failure.details.expected) +\n              \"; actual: \" + JSON.stringify(failure.details.actual) + \"\\n\");\n        }\n\n        if (failure.details.run) {\n          failure.details.run.outputLog.end();\n          var lines = failure.details.run.outputLog.get();\n          if (! lines.length) {\n            Console.arrowError(\"No output\", 2);\n          } else {\n            var historyLines = options.historyLines || 100;\n\n            Console.arrowError(\"Last \" + historyLines + \" lines:\", 2);\n            _.each(lines.slice(-historyLines), function (line) {\n              Console.rawError(\"  \" +\n                               (line.channel === \"stderr\" ? \"2| \" : \"1| \") +\n                               line.text +\n                               (line.bare ? \"%\" : \"\") + \"\\n\");\n            });\n          }\n        }\n\n        if (failure.details.messages) {\n          Console.arrowError(\"Errors while building:\", 2);\n          Console.rawError(failure.details.messages.formatMessages() + \"\\n\");\n        }\n      } else {\n        Console.rawError(\"  => Test threw exception: \" + failure.stack + \"\\n\");\n      }\n    } else {\n      var durationMs = +(new Date) - startTime;\n      Console.error(\n        \"... ok (\" + durationMs + \" ms)\",\n        Console.options({ indent: 2 }));\n    }\n  });\n\n  testList.saveTestState();\n\n  if (totalRun > 0) {\n    Console.error();\n  }\n\n  Console.error(testList.generateSkipReport());\n\n  if (testList.filteredTests.length === 0) {\n    Console.error(\"No tests run.\");\n    return 0;\n  } else if (failedTests.length === 0) {\n    var disclaimers = '';\n    if (testList.filteredTests.length < testList.allTests.length) {\n      disclaimers += \" other\";\n    }\n    Console.error(\"All\" + disclaimers + \" tests passed.\");\n    return 0;\n  } else {\n    var failureCount = failedTests.length;\n    Console.error(failureCount + \" failure\" +\n                  (failureCount > 1 ? \"s\" : \"\") + \":\");\n    _.each(failedTests, function (test) {\n      Console.rawError(\"  - \" + test.file + \": \" + test.name + \"\\n\");\n    });\n    return 1;\n  }\n};\n\n// To create self-tests:\n//\n// Create a new .js file in the tests directory. It will be picked\n// up automatically.\n//\n// Start your file with something like:\n//   var selftest = require('./selftest.js');\n//   var Sandbox = selftest.Sandbox;\n//\n// Define tests with:\n//   selftest.define(\"test-name\", ['tag1', 'tag2'], function () {\n//     ...\n//   });\n//\n// The tags are used to group tests. Currently used tags:\n//   - 'checkout': should only be run when we're running from a\n//     checkout as opposed to a released copy.\n//   - 'net': test requires an internet connection. Not going to work\n//     if you're on a plane; will be skipped if we appear to be\n//     offline unless run with 'self-test --force-online'.\n//   - 'slow': test is slow enough that you don't want to run it\n//     except on purpose. Won't run unless you say 'self-test --slow'.\n//\n// If you don't want to set any tags, you can omit that parameter\n// entirely.\n//\n// Inside your test function, first create a Sandbox object, then call\n// the run() method on the sandbox to set up a new run of meteor with\n// arguments of your choice, and then use functions like match(),\n// write(), and expectExit() to script that run.\n\n_.extend(exports, {\n  runTests: runTests,\n  listTests: listTests,\n  markStack: markStack,\n  define: define,\n  Sandbox: Sandbox,\n  Run: Run,\n  fail: fail,\n  expectEqual: expectEqual,\n  expectThrows: expectThrows,\n  expectTrue: expectTrue,\n  expectFalse: expectFalse,\n  execFileSync: execFileSync,\n  doOrThrow: doOrThrow\n});\n"]}