{"version":3,"sources":["/tools/utils/fiber-helpers.js"],"names":["_","require","Fiber","exports","parallelEach","collection","callback","context","errors","results","Promise","all","map","args","run","apply","push","error","await","length","disallowedYield","Error","disallowed","noYieldsAllowed","f","savedYield","call","nodeCodeMustBeInFiber","current","nextSlot","EnvironmentVariable","defaultValue","self","slot","extend","prototype","get","_meteorDynamics","has","withValue","value","func","currentValues","saved","bindEnvironment","boundValues","clone","runWithEnvironment","savedValues","makeFulfillablePromise","resolve","reject","promise","res","rej"],"mappings":"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","file":"tools/utils/fiber-helpers.js.map","sourcesContent":["var _ = require(\"underscore\");\nvar Fiber = require(\"fibers\");\n\nexports.parallelEach = function (collection, callback, context) {\n  const errors = [];\n  context = context || null;\n\n  const results = Promise.all(_.map(collection, (...args) => {\n    async function run() {\n      return callback.apply(context, args);\n    }\n\n    return run().catch(error => {\n      // Collect the errors but do not propagate them so that we can\n      // re-throw the first error after all iterations have completed.\n      errors.push(error);\n    });\n  })).await();\n\n  if (errors.length > 0) {\n    throw errors[0];\n  }\n\n  return results;\n};\n\nfunction disallowedYield() {\n  throw new Error(\"Can't call yield in a noYieldsAllowed block!\");\n}\n// Allow testing Fiber.yield.disallowed.\ndisallowedYield.disallowed = true;\n\nexports.noYieldsAllowed = function (f, context) {\n  var savedYield = Fiber.yield;\n  Fiber.yield = disallowedYield;\n  try {\n    return f.call(context || null);\n  } finally {\n    Fiber.yield = savedYield;\n  }\n};\n\n// Borrowed from packages/meteor/dynamics_nodejs.js\n// Used by buildmessage\n\nexports.nodeCodeMustBeInFiber = function () {\n  if (!Fiber.current) {\n    throw new Error(\"Meteor code must always run within a Fiber. \" +\n                    \"Try wrapping callbacks that you pass to non-Meteor \" +\n                    \"libraries with Meteor.bindEnvironment.\");\n  }\n};\n\nvar nextSlot = 0;\nexports.EnvironmentVariable = function (defaultValue) {\n  var self = this;\n  self.slot = 'slot' + nextSlot++;\n  self.defaultValue = defaultValue;\n};\n\n_.extend(exports.EnvironmentVariable.prototype, {\n  get: function () {\n    var self = this;\n    exports.nodeCodeMustBeInFiber();\n\n    if (!Fiber.current._meteorDynamics) {\n      return self.defaultValue;\n    }\n    if (!_.has(Fiber.current._meteorDynamics, self.slot)) {\n      return self.defaultValue;\n    }\n    return Fiber.current._meteorDynamics[self.slot];\n  },\n\n  withValue: function (value, func) {\n    var self = this;\n    exports.nodeCodeMustBeInFiber();\n\n    if (!Fiber.current._meteorDynamics) {\n      Fiber.current._meteorDynamics = {};\n    }\n    var currentValues = Fiber.current._meteorDynamics;\n\n    var saved = _.has(currentValues, self.slot)\n          ? currentValues[self.slot] : self.defaultValue;\n    currentValues[self.slot] = value;\n\n    try {\n      return func();\n    } finally {\n      currentValues[self.slot] = saved;\n    }\n  }\n});\n\n// This is like Meteor.bindEnvironment.\n// Experimentally, we are NOT including onException or _this in this version.\nexports.bindEnvironment = function (func) {\n  exports.nodeCodeMustBeInFiber();\n\n  var boundValues = _.clone(Fiber.current._meteorDynamics || {});\n\n  return function (...args) {\n    var self = this;\n\n    var runWithEnvironment = function () {\n      var savedValues = Fiber.current._meteorDynamics;\n      try {\n        // Need to clone boundValues in case two fibers invoke this\n        // function at the same time\n        Fiber.current._meteorDynamics = _.clone(boundValues);\n        return func.apply(self, args);\n      } finally {\n        Fiber.current._meteorDynamics = savedValues;\n      }\n    };\n\n    if (Fiber.current) {\n      return runWithEnvironment();\n    }\n    Fiber(runWithEnvironment).run();\n  };\n};\n\n// Returns a Promise that supports .resolve(result) and .reject(error).\nexports.makeFulfillablePromise = function () {\n  var resolve, reject;\n  var promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n};\n"]}