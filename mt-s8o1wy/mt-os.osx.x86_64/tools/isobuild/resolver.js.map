{"version":3,"sources":["/tools/isobuild/resolver.js"],"names":["isString","isFunction","each","has","sha1","matches","archMatches","pathJoin","pathRelative","pathNormalize","pathDirname","convertToOSPath","convertToPosixPath","LRU","wrap","optimisticStatOrNull","optimisticReadJsonOrNull","nativeModulesMap","Object","create","nativeNames","keys","process","binding","push","forEach","id","startsWith","resolverCache","max","Math","pow","Resolver","getOrCreate","options","key","JSON","stringify","resolver","get","set","sourceRoot","targetArch","extensions","nodeModulesPaths","statOrNull","resolve","absParentPath","_resolve","makeCacheKey","isTopLevel","indexOf","charAt","isNative","getNativeStubId","_seenDirPaths","resolved","_resolveAbsolute","_resolveRelative","_resolveNodeModule","packageJsonMap","stat","isDirectory","dirPath","path","Set","add","_resolvePkgJsonMain","assign","_joinAndStat","joined","exactStat","exactResult","result","isFile","some","pathWithExt","ext","slice","relParentPath","dir","info","parentDir","pkgJsonPath","pkg","main","browser","pkgSubset","name","version","Profile","prototype","value"],"mappings":"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","file":"tools/isobuild/resolver.js.map","sourcesContent":["import {\n  isString,\n  isFunction,\n  each,\n  has,\n} from \"underscore\";\n\nimport { sha1 } from \"../fs/watch.js\";\nimport { matches as archMatches } from \"../utils/archinfo.js\";\nimport {\n  pathJoin,\n  pathRelative,\n  pathNormalize,\n  pathDirname,\n  convertToOSPath,\n  convertToPosixPath,\n} from \"../fs/files.js\";\n\nimport LRU from \"lru-cache\";\n\nimport { wrap } from \"optimism\";\nimport {\n  optimisticStatOrNull,\n  optimisticReadJsonOrNull,\n} from \"../fs/optimistic.js\";\n\nconst nativeModulesMap = Object.create(null);\nconst nativeNames = Object.keys(process.binding(\"natives\"));\n\n// Node 0.10 does not include process as a built-in module, but later\n// versions of Node do, and we provide a stub for it on the client.\nnativeNames.push(\"process\");\n\nnativeNames.forEach(id => {\n  if (id === \"freelist\" ||\n      id.startsWith(\"internal/\")) {\n    return;\n  }\n\n  // When a native Node module is imported, we register a dependency on a\n  // meteor-node-stubs/deps/* module of the same name, so that the\n  // necessary stub modules will be included in the bundle. This alternate\n  // identifier will not be imported at runtime, but the modules it\n  // depends on are necessary for the original import to succeed.\n  nativeModulesMap[id] =  \"meteor-node-stubs/deps/\" + id;\n});\n\nconst resolverCache = new LRU({\n  max: Math.pow(2, 12)\n});\n\nexport default class Resolver {\n  static getOrCreate(options) {\n    const key = JSON.stringify(options);\n    let resolver = resolverCache.get(key);\n    if (! resolver) {\n      resolverCache.set(key, resolver = new Resolver(options));\n    }\n    return resolver;\n  }\n\n  constructor({\n    sourceRoot,\n    targetArch,\n    extensions = [\".js\", \".json\"],\n    nodeModulesPaths = [],\n    statOrNull = optimisticStatOrNull,\n  }) {\n    this.sourceRoot = sourceRoot;\n    this.extensions = extensions;\n    this.targetArch = targetArch;\n    this.nodeModulesPaths = nodeModulesPaths;\n    this.statOrNull = statOrNull;\n\n    this.resolve = wrap((id, absParentPath) => {\n      return this._resolve(id, absParentPath);\n    }, {\n      makeCacheKey(id, absParentPath) {\n        // Only the directory of the absParentPath matters for caching.\n        return JSON.stringify([id, pathDirname(absParentPath)]);\n      }\n    });\n  }\n\n  static isTopLevel(id) {\n    return \"./\".indexOf(id.charAt(0)) < 0;\n  }\n\n  static isNative(id) {\n    return has(nativeModulesMap, id);\n  }\n\n  static getNativeStubId(id) {\n    return nativeModulesMap[id] || null;\n  }\n\n  // Resolve the given module identifier to an object { path, stat } or\n  // null, relative to an absolute parent path. The _seenDirPaths\n  // parameter is for internal use only and should be ommitted.\n  _resolve(id, absParentPath, _seenDirPaths) {\n    let resolved =\n      this._resolveAbsolute(id, absParentPath) ||\n      this._resolveRelative(id, absParentPath) ||\n      this._resolveNodeModule(id, absParentPath);\n\n    if (typeof resolved === \"string\") {\n      // The _resolveNodeModule method can return \"missing\" to indicate\n      // that the ImportScanner should look elsewhere for this module,\n      // such as in the app node_modules directory.\n      return resolved;\n    }\n\n    let packageJsonMap = null;\n\n    while (resolved && resolved.stat.isDirectory()) {\n      let dirPath = resolved.path;\n      _seenDirPaths = _seenDirPaths || new Set;\n\n      // If the \"main\" field of a package.json file resolves to a\n      // directory we've already considered, then we should not attempt to\n      // read the same package.json file again.\n      if (! _seenDirPaths.has(dirPath)) {\n        _seenDirPaths.add(dirPath);\n        resolved = this._resolvePkgJsonMain(dirPath, _seenDirPaths);\n        if (resolved) {\n          // The _resolvePkgJsonMain call above may have returned a\n          // directory, so first merge resolved.packageJsonMap into\n          // packageJsonMap so that we don't forget the package.json we\n          // just resolved, then continue the loop to make sure we fully\n          // resolve the \"main\" module identifier to a non-directory.\n          // Technically this could involve even more package.json files,\n          // but in practice the \"main\" property will almost always name a\n          // directory containing an index.js file.\n          Object.assign(\n            packageJsonMap || (packageJsonMap = Object.create(null)),\n            resolved.packageJsonMap,\n          );\n          continue;\n        }\n      }\n\n      // If we didn't find a `package.json` file, or it didn't have a\n      // resolvable `.main` property, the only possibility left to\n      // consider is that this directory contains an `index.js` module.\n      // This assignment almost always terminates the while loop, because\n      // there's very little chance an `index.js` file will be a\n      // directory. However, in principle it is remotely possible that a\n      // file called `index.js` could be a directory instead of a file.\n      resolved = this._joinAndStat(dirPath, \"index.js\");\n    }\n\n    if (resolved) {\n      if (packageJsonMap) {\n        resolved.packageJsonMap = packageJsonMap;\n      }\n\n      resolved.id = convertToPosixPath(\n        convertToOSPath(resolved.path),\n        true\n      );\n    }\n\n    return resolved;\n  }\n\n  _joinAndStat(...joinArgs) {\n    const joined = pathJoin(...joinArgs);\n    const path = pathNormalize(joined);\n    const exactStat = this.statOrNull(path);\n    const exactResult = exactStat && { path, stat: exactStat };\n    let result = null;\n    if (exactResult && exactStat.isFile()) {\n      result = exactResult;\n    }\n\n    if (! result) {\n      this.extensions.some(ext => {\n        const pathWithExt = path + ext;\n        const stat = this.statOrNull(pathWithExt);\n        if (stat) {\n          return result = { path: pathWithExt, stat };\n        }\n      });\n    }\n\n    if (! result && exactResult && exactStat.isDirectory()) {\n      // After trying all available file extensions, fall back to the\n      // original result if it was a directory.\n      result = exactResult;\n    }\n\n    return result;\n  }\n\n  _resolveAbsolute(id, absParentPath) {\n    return id.charAt(0) === \"/\" &&\n      this._joinAndStat(this.sourceRoot, id.slice(1));\n  }\n\n  _resolveRelative(id, absParentPath) {\n    if (id.charAt(0) === \".\") {\n      return this._joinAndStat(absParentPath, \"..\", id);\n    }\n  }\n\n  _resolveNodeModule(id, absParentPath) {\n    if (! Resolver.isTopLevel(id)) {\n      return null;\n    }\n\n    if (Resolver.isNative(id) &&\n        archMatches(this.targetArch, \"os\")) {\n      // Forbid installing any server module with the same name as a\n      // native Node module.\n      return null;\n    }\n\n    let sourceRoot;\n    const relParentPath = pathRelative(this.sourceRoot, absParentPath);\n    if (! relParentPath.startsWith(\"..\")) {\n      // If the file is contained by this.sourceRoot, then it's safe to\n      // use this.sourceRoot as the limiting ancestor directory in the\n      // while loop below, but we're still going to check whether the file\n      // resides in an external node_modules directory, since \"external\"\n      // .npm/package/node_modules directories are technically contained\n      // within the root directory of their packages.\n      sourceRoot = this.sourceRoot;\n    }\n\n    this.nodeModulesPaths.some(path => {\n      if (! pathRelative(path, absParentPath).startsWith(\"..\")) {\n        // If the file is inside an external node_modules directory,\n        // consider the rootDir to be the parent directory of that\n        // node_modules directory, rather than this.sourceRoot.\n        return sourceRoot = pathDirname(path);\n      }\n    });\n\n    let resolved = null;\n\n    if (sourceRoot) {\n      let dir = absParentPath; // It's ok for absParentPath to be a directory!\n      let info = this._joinAndStat(dir);\n      if (! info || ! info.stat.isDirectory()) {\n        dir = pathDirname(dir);\n      }\n\n      while (! (resolved = this._joinAndStat(dir, \"node_modules\", id))) {\n        if (dir === sourceRoot) {\n          break;\n        }\n\n        const parentDir = pathDirname(dir);\n        if (dir === parentDir) {\n          // We've reached the root of the file system??\n          break;\n        }\n\n        dir = parentDir;\n      }\n    }\n\n    if (! resolved) {\n      // After checking any local node_modules directories, fall back to\n      // the package NPM directory, if one was specified.\n      this.nodeModulesPaths.some(path => {\n        return resolved = this._joinAndStat(path, id);\n      });\n    }\n\n    // If the dependency is still not resolved, it might be handled by the\n    // fallback function defined in meteor/packages/modules/modules.js, or\n    // it might be imported in code that will never run on this platform,\n    // so there is always the possibility that its absence is not actually\n    // a problem. As much as we might like to issue warnings about missing\n    // dependencies here, we just don't have enough information to make\n    // that determination until the code actually runs.\n\n    return resolved || \"missing\";\n  }\n\n  _resolvePkgJsonMain(dirPath, _seenDirPaths) {\n    const pkgJsonPath = pathJoin(dirPath, \"package.json\");\n    const pkg = optimisticReadJsonOrNull(pkgJsonPath);\n    if (! pkg) {\n      return null;\n    }\n\n    let main = pkg.main;\n\n    if (archMatches(this.targetArch, \"web\") &&\n        isString(pkg.browser)) {\n      main = pkg.browser;\n    }\n\n    // Output a JS module that exports just the \"name\", \"version\", and\n    // \"main\" properties defined in the package.json file.\n    const pkgSubset = {\n      name: pkg.name,\n    };\n\n    if (has(pkg, \"version\")) {\n      pkgSubset.version = pkg.version;\n    }\n\n    if (isString(main)) {\n      pkgSubset.main = main;\n\n      // The \"main\" field of package.json does not have to begin with ./\n      // to be considered relative, so first we try simply appending it to\n      // the directory path before falling back to a full resolve, which\n      // might return a package from a node_modules directory.\n      const resolved = this._joinAndStat(dirPath, main) ||\n        this._resolve(main, pkgJsonPath, _seenDirPaths);\n\n      if (resolved) {\n        if (! resolved.packageJsonMap) {\n          resolved.packageJsonMap = Object.create(null);\n        }\n\n        resolved.packageJsonMap[pkgJsonPath] = pkgSubset;\n\n        return resolved;\n      }\n    }\n\n    return null;\n  }\n};\n\nimport { Profile } from \"../tool-env/profile.js\";\neach(Resolver.prototype, (value, key) => {\n  if (key === \"constructor\") return;\n  Resolver.prototype[key] = Profile(\n    `Resolver#${key}`,\n    Resolver.prototype[key]\n  );\n});\n"]}