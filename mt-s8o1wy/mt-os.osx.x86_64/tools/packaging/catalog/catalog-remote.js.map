{"version":3,"sources":["/tools/packaging/catalog/catalog-remote.js"],"names":["_","require","sqlite3","files","utils","buildmessage","config","archinfo","Console","tropohouse","packageClient","VersionParser","Profile","DEBUG_SQL","process","env","METEOR_DEBUG_SQL","SYNCTOKEN_ID","METADATA_LAST_SYNC","BUSY_RETRY_ATTEMPTS","BUSY_RETRY_INTERVAL","Mutex","self","_locked","_resolvers","extend","prototype","lock","Promise","resolve","push","await","unlock","Error","shift","Txn","db","closed","committed","started","query","sql","params","_query","execute","_execute","begin","mode","close","commit","Db","dbFile","options","_dbFile","_autoPrepare","_prepared","_transactionMutex","_db","_retry","open","f","maxAttempts","delay","attempt","err","warn","sleepMs","_serialize","closePermanently","_closePreparedStatements","reject","runInTransaction","action","runOnce","txn","t1","Date","now","rollback","result","resultError","e","t2","info","retry","message","t","Math","random","exists","pathDirname","debug","folder","mkdir_p","Database","convertToOSPath","prepared","prepare","isEmpty","_prepareWithCache","rows","callback","all","ret","lastID","changes","run","each","statement","finalize","Table","name","jsonFields","noContentColumn","_buildStatements","queryParams","_generateQuestionMarks","length","_selectQuery","_insertQuery","_deleteQuery","n","times","join","find","id","undefined","upsert","objects","o","_id","deleteResults","row","jsonField","JSON","stringify","createTable","i","sqlColumn","RemoteCatalog","offline","toString","getVersion","version","_contentQuery","getLatestVersion","versions","getSortedVersions","last","match","_columnsQuery","pvParse","memoize","parse","pluck","sort","a","b","compare","getSortedVersionRecords","versionRecords","getLatestMainlineVersion","reverse","latest","test","getPackage","getAllBuilds","getBuildsForArches","arches","solution","allBuilds","generateSubsetsOfIncreasingSize","buildSubset","satisfied","neededArch","any","build","buildArches","buildArchitectures","split","mostSpecificMatch","getReleaseTrack","getReleaseVersion","track","forceRecommendRelease","releaseVersionData","recommended","_insertReleaseVersions","getAllReleaseTracks","getAllPackageNames","initialize","packageStorage","getPackageStorage","tableVersions","tableBuilds","tableReleaseTracks","tableReleaseVersions","tablePackages","tableSyncToken","tableMetadata","tableBannersShown","allTables","table","reset","refresh","METEOR_TEST_FAIL_RELEASE_DOWNLOAD","errorType","maxAge","lastSync","getMetadata","timestamp","updateResult","enterJob","title","updateServerPackageData","resetData","wipeAllPackages","getSortedRecommendedReleaseVersions","laterThanOrderKey","getSortedRecommendedReleaseRecords","filter","v","orderKey","recSort","sortBy","rec","getReleaseVersionRecords","getNumReleaseVersions","getDefaultReleaseVersion","versionRecord","getDefaultReleaseVersionRecord","pick","exports","DEFAULT_TRACK","getBuildWithPreciseBuildArchitectures","matchingBuilds","findWhere","map","entity","content","releaseVersions","insertData","serverData","syncComplete","collections","packages","builds","releaseTracks","syncToken","_setMetadata","getSyncToken","key","setMetadata","value","shouldShowBanner","releaseName","bannerDate","lastShown","setBannerShownDate","bannerShownDate","official"],"mappings":"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","file":"tools/packaging/catalog/catalog-remote.js.map","sourcesContent":["var _ = require('underscore');\nvar sqlite3 = require('sqlite3');\n\nvar files = require('../../fs/files.js');\nvar utils = require('../../utils/utils.js');\nvar buildmessage = require('../../utils/buildmessage.js');\nvar config = require('../../meteor-services/config.js');\nvar archinfo = require('../../utils/archinfo.js');\nvar Console = require('../../console/console.js').Console;\n\nvar tropohouse = require('../tropohouse.js');\nvar packageClient = require('../package-client.js');\nvar VersionParser = require('../package-version-parser.js');\nvar Profile = require('../../tool-env/profile.js').Profile;\n\n// XXX: Rationalize these flags.  Maybe use the logger?\nvar DEBUG_SQL = !!process.env.METEOR_DEBUG_SQL;\n\nvar SYNCTOKEN_ID = \"1\";\n\nvar METADATA_LAST_SYNC = \"lastsync\";\n\nvar BUSY_RETRY_ATTEMPTS = 10;\nvar BUSY_RETRY_INTERVAL = 1000;\n\nvar Mutex = function () {\n  var self = this;\n\n  self._locked = false;\n\n  self._resolvers = [];\n};\n\n_.extend(Mutex.prototype, {\n  lock: function () {\n    var self = this;\n\n    while (true) {\n      if (!self._locked) {\n        self._locked = true;\n        return;\n      }\n\n      new Promise(function (resolve) {\n        self._resolvers.push(resolve);\n      }).await();\n    }\n  },\n\n  unlock: function () {\n    var self = this;\n\n    if (!self._locked) {\n      throw new Error(\"unlock called on unlocked mutex\");\n    }\n\n    self._locked = false;\n    var resolve = self._resolvers.shift();\n    if (resolve) {\n      resolve();\n    }\n  }\n});\n\nvar Txn = function (db) {\n  var self = this;\n  self.db = db;\n  self.closed = false;\n  self.committed = false;\n  self.started = false;\n};\n\n_.extend(Txn.prototype, {\n  // Runs a SQL query and returns the rows\n  query: function (sql, params) {\n    var self = this;\n    return self.db._query(sql, params);\n  },\n\n  // Runs a SQL statement, returning no rows\n  execute: function (sql, params) {\n    var self = this;\n    return self.db._execute(sql, params);\n  },\n\n  // Start a transaction\n  begin: function (mode) {\n    var self = this;\n\n    // XXX: Use DEFERRED mode?\n    mode = mode || \"IMMEDIATE\";\n\n    if (self.started) {\n      throw new Error(\"Transaction already started\");\n    }\n\n    self.db._execute(\"BEGIN \" + mode + \" TRANSACTION\");\n    self.started = true;\n  },\n\n  // Releases resources from the transaction; Rollback if commit not already called.\n  close: function () {\n    var self = this;\n\n    if (self.closed) {\n      return;\n    }\n\n    if (!self.started) {\n      return;\n    }\n\n    self.db._execute(\"ROLLBACK TRANSACTION\");\n    self.committed = false;\n    self.closed = true;\n  },\n\n  // Commits the transaction.  close() will then be a no-op\n  commit: function () {\n    var self = this;\n\n    self.db._execute(\"END TRANSACTION\");\n    self.committed = true;\n    self.closed = true;\n  }\n});\n\nvar Db = function (dbFile, options) {\n  var self = this;\n\n  self._dbFile = dbFile;\n\n  self._autoPrepare = true;\n  self._prepared = {};\n\n  self._transactionMutex = new Mutex();\n\n  self._db = self._retry(function () {\n    return self.open(dbFile);\n  });\n\n  // WAL mode copes much better with (multi-process) concurrency\n  self._retry(function () {\n    self._execute('PRAGMA journal_mode=WAL');\n  });\n};\n\n_.extend(Db.prototype, {\n\n  // TODO: Move to utils?\n  _retry: function (f, options) {\n    options = _.extend({ maxAttempts: 3, delay: 500}, options || {});\n\n    for (var attempt = 1; attempt <= options.maxAttempts; attempt++) {\n      try {\n        return f();\n      } catch (err) {\n        if (attempt < options.maxAttempts) {\n          Console.warn(\"Retrying after error\", err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (options.delay) {\n        utils.sleepMs(options.delay);\n      }\n    }\n  },\n\n  // Runs functions serially, in a mutex\n  _serialize: function (f) {\n    var self = this;\n\n    try {\n      self._transactionMutex.lock();\n      return f();\n    } finally {\n      self._transactionMutex.unlock();\n    }\n  },\n\n  // Do not call any other methods on this object after calling this one.\n  // This yields.\n  closePermanently: function () {\n    var self = this;\n    self._closePreparedStatements();\n    var db = self._db;\n    self._db = null;\n    new Promise((resolve, reject) => {\n      db.close(err => err ? reject(err) : resolve());\n    }).await();\n  },\n\n  // Runs the function inside a transaction block\n  runInTransaction: function (action) {\n    var self = this;\n\n    var runOnce = Profile(\"sqlite query\", function () {\n      var txn = new Txn(self);\n\n      var t1 = Date.now();\n\n      var rollback = true;\n      var result = null;\n      var resultError = null;\n\n      txn.begin();\n      try {\n        result = action(txn);\n        txn.commit();\n      } catch (err) {\n        resultError = err;\n      } finally {\n        try {\n          txn.close();\n        } catch (e) {\n          // We don't have a lot of options here...\n          Console.warn(\"Error closing transaction\", e);\n        }\n      }\n\n      //self._closePreparedStatements();\n\n      if (DEBUG_SQL) {\n        var t2 = Date.now();\n        // XXX: Hack around not having loggers\n        Console.info(\"Transaction took: \", (t2 - t1));\n      }\n\n      if (resultError) {\n        throw resultError;\n      }\n\n      return result;\n    });\n\n    for (var attempt = 0; ; attempt++) {\n      try {\n        return self._serialize(runOnce);\n      } catch (err) {\n        var retry = false;\n        // Grr... doesn't expose error code; must string-match\n        if (err.message\n            && (   err.message == \"SQLITE_BUSY: database is locked\"\n                || err.message == \"SQLITE_BUSY: cannot commit transaction - SQL statements in progress\")) {\n          if (attempt < BUSY_RETRY_ATTEMPTS) {\n            retry = true;\n          }\n        }\n        if (!retry) {\n          throw err;\n        }\n      }\n\n      // Wait on average BUSY_RETRY_INTERVAL, but randomize to avoid thundering herd\n      var t = (Math.random() + 0.5) * BUSY_RETRY_INTERVAL;\n      utils.sleepMs(t);\n    }\n  },\n\n  open: function (dbFile) {\n    var self = this;\n\n    if ( !files.exists(files.pathDirname(dbFile)) ) {\n      Console.debug(\"Creating database directory\", dbFile);\n\n      var folder = files.pathDirname(dbFile);\n      if ( !files.mkdir_p(folder) )\n        throw new Error(\"Could not create folder at \" + folder);\n    }\n\n    Console.debug(\"Opening db file\", dbFile);\n    return new sqlite3.Database(files.convertToOSPath(dbFile));\n  },\n\n  // Runs a query synchronously, returning all rows\n  // Hidden to enforce transaction usage\n  _query: function (sql, params) {\n    var self = this;\n\n    var prepared = null;\n    var prepare = self._autoPrepare && !_.isEmpty(params);\n    if (prepare) {\n      prepared = self._prepareWithCache(sql);\n    }\n\n    if (DEBUG_SQL) {\n      var t1 = Date.now();\n    }\n\n    //Console.debug(\"Executing SQL \", sql, params);\n\n    var rows = new Promise((resolve, reject) => {\n      function callback(err, rows) {\n        err ? reject(err) : resolve(rows);\n      }\n\n      if (prepared) {\n        prepared.all(params, callback);\n      } else {\n        self._db.all(sql, params, callback);\n      }\n    }).await();\n\n    if (DEBUG_SQL) {\n      var t2 = Date.now();\n      if ((t2 - t1) > 10) {\n        // XXX: Hack around not having log levels\n        Console.info(\"SQL statement \", sql, \" took \", (t2 - t1));\n      }\n    }\n\n    return rows;\n  },\n\n  // Runs a query synchronously, returning no rows\n  // Hidden to enforce transaction usage\n  _execute: function (sql, params) {\n    var self = this;\n\n    var prepared = null;\n    // We don't prepare non-parametrized statements, because (a) there's not\n    // that much of a win from doing so, since we don't tend to run them in bulk\n    // and (b) doing so can trigger\n    // https://github.com/mapbox/node-sqlite3/pull/355 .  (We can avoid that bug\n    // by being careful to pass in an empty array or no argument for params to\n    // prepared.run instead of undefined, but we can also just avoid the issue\n    // entirely.)\n    var prepare = self._autoPrepare && !_.isEmpty(params);\n    if (prepare) {\n      prepared = self._prepareWithCache(sql);\n    }\n\n    if (DEBUG_SQL) {\n      var t1 = Date.now();\n    }\n\n    //Console.debug(\"Executing SQL \", sql, params);\n\n    var ret = new Promise(function (resolve, reject) {\n      function callback(err) {\n        err ? reject(err) : resolve({\n          // Yes, lastID & changes are on this(!)\n          lastID: this.lastID,\n          changes: this.changes\n        });\n      }\n\n      if (prepared) {\n        prepared.run(params, callback);\n      } else {\n        self._db.run(sql, params, callback);\n      }\n    }).await();\n\n    if (DEBUG_SQL) {\n      var t2 = Date.now();\n      if ((t2 - t1) > 10) {\n        Console.info(\"SQL statement \", sql, \" took \", (t2 - t1));\n      }\n    }\n\n    return ret;\n  },\n\n  // Prepares the statement, caching the result\n  _prepareWithCache: function (sql) {\n    var self = this;\n\n    var prepared = self._prepared[sql];\n    if (!prepared) {\n      //Console.debug(\"Preparing statement: \", sql);\n      new Promise(function (resolve, reject) {\n        prepared = self._db.prepare(sql, function (err) {\n          err ? reject(err) : resolve();\n        });\n      }).await();\n\n      self._prepared[sql] = prepared;\n    }\n\n    return prepared;\n  },\n\n\n  // Close any cached prepared statements\n  _closePreparedStatements: function () {\n    var self = this;\n\n    var prepared = self._prepared;\n    self._prepared = {};\n\n    _.each(prepared, function (statement) {\n      var err = new Promise(function (resolve) {\n        // We resolve the promise with an error instead of rejecting it,\n        // because we don't want to throw.\n        statement.finalize(resolve);\n      }).await();\n\n      if (err) {\n        Console.warn(\"Error finalizing statement \", err);\n      }\n    });\n  }\n\n});\n\n\nvar Table = function (name, jsonFields, options) {\n  var self = this;\n  options = options || {};\n\n  self.name = name;\n  self.jsonFields = jsonFields;\n  self.noContentColumn = options.noContentColumn;\n\n  self._buildStatements();\n};\n\n_.extend(Table.prototype, {\n  _buildStatements: function () {\n    var self = this;\n\n    var queryParams = self._generateQuestionMarks(\n      self.jsonFields.length + (self.noContentColumn ? 0 : 1));\n    self._selectQuery = \"SELECT * FROM \" + self.name + \" WHERE _id=?\";\n    self._insertQuery = \"INSERT INTO \" + self.name + \" VALUES \" + queryParams;\n    self._deleteQuery = \"DELETE FROM \" + self.name + \" WHERE _id=?\";\n  },\n\n  // Generate a string of the form (?, ?) where the n is the number of question\n  // mark.\n  _generateQuestionMarks: function (n) {\n    return \"(\" + _.times(n, function () { return \"?\" }).join(\",\") + \")\";\n  },\n\n  find: function (txn, id) {\n    var self = this;\n    var rows = txn.query(self._selectQuery, [ id ]);\n    if (rows.length !== 0) {\n      if (rows.length !== 1) {\n        throw new Error(\"Corrupt database (PK violation)\");\n      }\n      return rows[0];\n    }\n    return undefined;\n  },\n\n  upsert: function (txn, objects) {\n    var self = this;\n\n    // XXX: Use sqlite upsert\n    // XXX: Speculative insert\n    // XXX: Fix transaction logic so we always roll back\n    _.each(objects, function (o) {\n      var id = o._id;\n      var rows = txn.query(self._selectQuery, [ id ]);\n      if (rows.length !== 0) {\n        var deleteResults = txn.execute(self._deleteQuery, [ id ]);\n        if (deleteResults.changes !== 1) {\n          throw new Error(\"Unable to delete row: \" + id);\n        }\n      }\n      var row = [];\n      _.each(self.jsonFields, function (jsonField) {\n        row.push(o[jsonField]);\n      });\n      if (! self.noContentColumn) {\n        row.push(JSON.stringify(o));\n      }\n      txn.execute(self._insertQuery, row);\n    });\n  },\n\n  createTable: function (txn) {\n    var self = this;\n\n    var sql = 'CREATE TABLE IF NOT EXISTS ' + self.name + '(';\n    for (var i = 0; i < self.jsonFields.length; i++) {\n      var jsonField = self.jsonFields[i];\n      var sqlColumn = jsonField;\n      if (i != 0) sql += \", \";\n      sql += sqlColumn + \" STRING\";\n      if (sqlColumn === '_id') {\n        sql += \" PRIMARY KEY\";\n      }\n    }\n    if (! self.noContentColumn) {\n      sql += \", content STRING\";\n    }\n    sql += \")\";\n    txn.execute(sql);\n\n    //sql = \"CREATE INDEX IF NOT EXISTS idx_\" + self.name + \"_id ON \" + self.name + \"(_id)\";\n    //txn.execute(sql);\n  }\n});\n\n\n// A RemoteCatalog is a local cache of the content of troposphere.\n// A default instance of this catalog is registered by the layered catalog and is available\n// under the variable \"official\" from the catalog.js\n//\n// The remote catalog is backed by a db to make things easier on the memory and for faster queries\nvar RemoteCatalog = function () {\n  var self = this;\n\n  // Set this to true if we are not going to connect to the remote package\n  // server, and will only use the cached data for our package information\n  // This means that the catalog might be out of date on the latest developments.\n  self.offline = null;\n\n  self.db = null;\n};\n\n_.extend(RemoteCatalog.prototype, {\n  toString: function () {\n    var self = this;\n    return \"RemoteCatalog\";\n  },\n\n  // Used for special cases that want to ensure that all connections to the DB\n  // are closed (eg to ensure that all writes have been flushed from the '-wal'\n  // file to the main DB file). Most methods on this class will stop working\n  // after you call this method. Note that this yields.\n  closePermanently: function () {\n    var self = this;\n    self.db.closePermanently();\n    self.db = null;\n  },\n\n  getVersion: function (name, version) {\n    var result = this._contentQuery(\n      \"SELECT content FROM versions WHERE packageName=? AND version=?\",\n      [name, version]);\n    if(!result || result.length === 0) {\n      return null;\n    }\n    return result[0];\n  },\n\n  // As getVersion, but returns info on the latest version of the\n  // package, or null if the package doesn't exist or has no versions.\n  getLatestVersion: function (name) {\n    var self = this;\n\n    var versions = self.getSortedVersions(name);\n    return self.getVersion(name, _.last(versions));\n  },\n\n  getSortedVersions: function (name) {\n    var self = this;\n    var match = this._columnsQuery(\n      \"SELECT version FROM versions WHERE packageName=?\", name);\n    if (match === null)\n      return [];\n    var pvParse = _.memoize(VersionParser.parse);\n    return _.pluck(match, 'version').sort(function (a, b) {\n      return VersionParser.compare(pvParse(a), pvParse(b));\n    });\n  },\n\n  // Just getVersion mapped over getSortedVersions, but only makes one round\n  // trip to sqlite.\n  getSortedVersionRecords: function (name) {\n    var self = this;\n    var versionRecords = this._contentQuery(\n      \"SELECT content FROM versions WHERE packageName=?\", [name]);\n    if (! versionRecords)\n      return [];\n\n    var pvParse = _.memoize(VersionParser.parse);\n    versionRecords.sort(function (a, b) {\n      return VersionParser.compare(pvParse(a.version),\n                                   pvParse(b.version));\n    });\n    return versionRecords;\n  },\n\n  getLatestMainlineVersion: function (name) {\n    var self = this;\n    var versions = self.getSortedVersions(name);\n    versions.reverse();\n    var latest = _.find(versions, function (version) {\n      return !/-/.test(version);\n    });\n    if (!latest)\n      return null;\n    return self.getVersion(name, latest);\n  },\n\n  getPackage: function (name, options) {\n    var result = this._contentQuery(\n      \"SELECT content FROM packages WHERE name=?\", name);\n    if (!result || result.length === 0)\n      return null;\n    if (result.length !== 1) {\n      throw new Error(\"Found multiple packages matching name: \" + name);\n    }\n    return result[0];\n  },\n\n  getAllBuilds: function (name, version) {\n    var result = this._contentQuery(\n      \"SELECT content FROM builds WHERE builds.versionId = \" +\n        \"(SELECT _id FROM versions WHERE versions.packageName=? AND \" +\n        \"versions.version=?)\",\n      [name, version]);\n    if (!result || result.length === 0)\n      return null;\n    return result;\n  },\n\n  // If this package has any builds at this version, return an array of builds\n  // which cover all of the required arches, or null if it is impossible to\n  // cover them all (or if the version does not exist).\n  // Note that this method is specific to RemoteCatalog.\n  getBuildsForArches: function (name, version, arches) {\n    var self = this;\n\n    var solution = null;\n    var allBuilds = self.getAllBuilds(name, version) || [];\n\n    utils.generateSubsetsOfIncreasingSize(allBuilds, function (buildSubset) {\n      // This build subset works if for all the arches we need, at least one\n      // build in the subset satisfies it. It is guaranteed to be minimal,\n      // because we look at subsets in increasing order of size.\n      var satisfied = _.all(arches, function (neededArch) {\n        return _.any(buildSubset, function (build) {\n          var buildArches = build.buildArchitectures.split('+');\n          return !!archinfo.mostSpecificMatch(neededArch, buildArches);\n        });\n      });\n      if (satisfied) {\n        solution = buildSubset;\n        return true;  // stop the iteration\n      }\n    });\n    return solution;  // might be null!\n  },\n\n  // Returns general (non-version-specific) information about a\n  // release track, or null if there is no such release track.\n  getReleaseTrack: function (name) {\n    var self = this;\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseTracks WHERE name=?\", name);\n    if (!result || result.length === 0)\n      return null;\n    return result[0];\n  },\n\n  getReleaseVersion: function (track, version) {\n    var self = this;\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseVersions WHERE track=? AND version=?\",\n      [track, version]);\n    if (!result || result.length === 0)\n      return null;\n    return result[0];\n  },\n\n  // Used by make-bootstrap-tarballs. Only should be used on catalogs that are\n  // specially constructed for bootstrap tarballs.\n  forceRecommendRelease: function (track, version) {\n    var self = this;\n    var releaseVersionData = self.getReleaseVersion(track, version);\n    if (!releaseVersionData) {\n      throw Error(\"Can't force-recommend unknown release \" + track + \"@\"\n                  + version);\n    }\n    releaseVersionData.recommended = true;\n    self._insertReleaseVersions([releaseVersionData]);\n  },\n\n  getAllReleaseTracks: function () {\n    return _.pluck(this._columnsQuery(\"SELECT name FROM releaseTracks\"),\n                   'name');\n  },\n\n  getAllPackageNames: function () {\n    return _.pluck(this._columnsQuery(\"SELECT name FROM packages\"), 'name');\n  },\n\n  initialize: function (options) {\n    var self = this;\n\n    options = options || {};\n    // We should to figure out if we are intending to connect to the package server.\n    self.offline = options.offline ? options.offline : false;\n\n    var dbFile = options.packageStorage || config.getPackageStorage();\n    self.db = new Db(dbFile);\n\n    self.tableVersions = new Table('versions', ['packageName', 'version', '_id']);\n    self.tableBuilds = new Table('builds', ['versionId', '_id']);\n    self.tableReleaseTracks = new Table('releaseTracks', ['name', '_id']);\n    self.tableReleaseVersions = new Table('releaseVersions', ['track', 'version', '_id']);\n    self.tablePackages = new Table('packages', ['name', '_id']);\n    self.tableSyncToken = new Table('syncToken', ['_id']);\n    self.tableMetadata = new Table('metadata', ['_id']);\n    self.tableBannersShown = new Table(\n      'bannersShown', ['_id', 'lastShown'], { noContentColumn: true });\n\n    self.allTables = [\n      self.tableVersions,\n      self.tableBuilds,\n      self.tableReleaseTracks,\n      self.tableReleaseVersions,\n      self.tablePackages,\n      self.tableSyncToken,\n      self.tableMetadata,\n      self.tableBannersShown\n    ];\n    return self.db.runInTransaction(function(txn) {\n      _.each(self.allTables, function (table) {\n        table.createTable(txn);\n      });\n\n      // Extra indexes for the most expensive queries\n      // These are non-unique indexes\n      // XXX We used to have a versionsNamesIdx here on versions(packageName);\n      //     we no longer create it but we don't waste time dropping it either.\n      txn.execute(\"CREATE INDEX IF NOT EXISTS versionsIdx ON \" +\n                  \"versions(packageName, version)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS buildsVersionsIdx ON \" +\n                  \"builds(versionId)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS packagesIdx ON \" +\n                  \"packages(name)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS releaseTracksIdx ON \" +\n                  \"releaseTracks(name)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS releaseVersionsIdx ON \" +\n                  \"releaseVersions(track, version)\");\n    });\n  },\n\n  // This function empties the DB. This is called from the package-client.\n  reset: function () {\n    var self = this;\n    return self.db.runInTransaction(function (txn) {\n      _.each(self.allTables, function (table) {\n        txn.execute(\"DELETE FROM \" + table.name);\n      });\n    });\n  },\n\n  refresh: function (options) {\n    var self = this;\n    options = options || {};\n\n    Console.debug(\"In remote catalog refresh\");\n\n    if (process.env.METEOR_TEST_FAIL_RELEASE_DOWNLOAD === 'offline') {\n      var e = new Error;\n      e.errorType = 'DDP.ConnectionError';\n      throw e;\n    }\n\n    if (self.offline)\n      return false;\n\n    if (options.maxAge) {\n      var lastSync = self.getMetadata(METADATA_LAST_SYNC);\n      Console.debug(\"lastSync = \", lastSync);\n      if (lastSync && lastSync.timestamp) {\n        if ((Date.now() - lastSync.timestamp) < options.maxAge) {\n          Console.debug(\"Package catalog is sufficiently up-to-date; not updating\\n\");\n          return false;\n        }\n      }\n    }\n\n    var updateResult = {};\n    // XXX This buildmessage.enterJob only exists for showing progress.\n    buildmessage.enterJob({ title: 'updating package catalog' }, function () {\n      updateResult = packageClient.updateServerPackageData(self);\n    });\n\n    if (updateResult.resetData) {\n      tropohouse.default.wipeAllPackages();\n    }\n\n    return true;\n  },\n\n  // Given a release track, returns all recommended versions for this track,\n  // sorted by their orderKey. Returns the empty array if the release track does\n  // not exist or does not have any recommended versions.\n  getSortedRecommendedReleaseVersions: function (track, laterThanOrderKey) {\n    var self = this;\n    var versions =\n          self.getSortedRecommendedReleaseRecords(track, laterThanOrderKey);\n    return _.pluck(versions, \"version\");\n  },\n\n  // Given a release track, returns all recommended version *records* for this\n  // track, sorted by their orderKey. Returns the empty array if the release\n  // track does not exist or does not have any recommended versions.\n  getSortedRecommendedReleaseRecords: function (track, laterThanOrderKey) {\n    var self = this;\n    // XXX releaseVersions content objects are kinda big; if we put\n    // 'recommended' and 'orderKey' in their own columns this could be faster\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseVersions WHERE track=?\", track);\n\n    var recommended = _.filter(result, function (v) {\n      if (!v.recommended)\n        return false;\n      return !laterThanOrderKey || v.orderKey > laterThanOrderKey;\n    });\n\n    var recSort = _.sortBy(recommended, function (rec) {\n      return rec.orderKey;\n    });\n    recSort.reverse();\n    return recSort;\n  },\n\n  // Given a release track, returns all version records for this track.\n  getReleaseVersionRecords: function (track) {\n    var self = this;\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseVersions WHERE track=?\", track);\n    return result;\n  },\n\n  // For a given track, returns the total number of release versions on that\n  // track.\n  getNumReleaseVersions: function (track) {\n    var self = this;\n    var result = self._columnsQuery(\n      \"SELECT count(*) FROM releaseVersions WHERE track=?\", track);\n    return result[0][\"count(*)\"];\n  },\n\n  // Returns the default release version on the DEFAULT_TRACK, or for a\n  // given release track.\n  getDefaultReleaseVersion: function (track) {\n    var self = this;\n    var versionRecord = self.getDefaultReleaseVersionRecord(track);\n    if (! versionRecord)\n      throw new Error(\"Can't get default release version for track \" + track);\n    return _.pick(versionRecord, [\"track\", \"version\" ]);\n  },\n\n  // Returns the default release version record for the DEFAULT_TRACK, or for a\n  // given release track.\n  getDefaultReleaseVersionRecord: function (track) {\n    var self = this;\n\n    if (!track)\n      track = exports.DEFAULT_TRACK;\n\n    var versions = self.getSortedRecommendedReleaseRecords(track);\n    if (!versions.length)\n      return null;\n    return  versions[0];\n  },\n\n  getBuildWithPreciseBuildArchitectures: function (versionRecord, buildArchitectures) {\n    var self = this;\n    var matchingBuilds = this._contentQuery(\n      \"SELECT content FROM builds WHERE versionId=?\", versionRecord._id);\n    return _.findWhere(matchingBuilds, { buildArchitectures: buildArchitectures });\n  },\n\n  // Executes a query, returning an array of each content column parsed as JSON\n  _contentQuery: function (query, params) {\n    var self = this;\n    var rows = self._columnsQuery(query, params);\n    return _.map(rows, function(entity) {\n      return JSON.parse(entity.content);\n    });\n  },\n\n  // Executes a query, returning an array of maps from column name to data.\n  // No JSON parsing is performed.\n  _columnsQuery: function (query, params) {\n    var self = this;\n    var rows = self.db.runInTransaction(function (txn) {\n      return txn.query(query, params);\n    });\n    return rows;\n  },\n\n  _insertReleaseVersions: function(releaseVersions) {\n    var self = this;\n    return self.db.runInTransaction(function (txn) {\n      self.tableReleaseVersions.upsert(txn, releaseVersions);\n    });\n  },\n\n  //Given data from troposphere, add it into the local store\n  insertData: function(serverData, syncComplete) {\n    var self = this;\n    return self.db.runInTransaction(function (txn) {\n      self.tablePackages.upsert(txn, serverData.collections.packages);\n      self.tableBuilds.upsert(txn, serverData.collections.builds);\n      self.tableVersions.upsert(txn, serverData.collections.versions);\n      self.tableReleaseTracks.upsert(txn, serverData.collections.releaseTracks);\n      self.tableReleaseVersions.upsert(txn, serverData.collections.releaseVersions);\n\n      var syncToken = serverData.syncToken;\n      Console.debug(\"Adding syncToken: \", JSON.stringify(syncToken));\n      syncToken._id = SYNCTOKEN_ID; //Add fake _id so it fits the pattern\n      self.tableSyncToken.upsert(txn, [syncToken]);\n\n      if (syncComplete) {\n        var lastSync = {timestamp: Date.now()};\n        self._setMetadata(txn, METADATA_LAST_SYNC, lastSync);\n      }\n    });\n  },\n\n  getSyncToken: function() {\n    var self = this;\n    var result = self._contentQuery(\"SELECT content FROM syncToken WHERE _id=?\",\n                                    [ SYNCTOKEN_ID ]);\n    if (!result || result.length === 0) {\n      Console.debug(\"No sync token found\");\n      return null;\n    }\n    if (result.length !== 1) {\n      throw new Error(\"Unexpected number of sync tokens found\");\n    }\n    delete result[0]._id;\n    Console.debug(\"Returning sync token: \" + JSON.stringify(result[0]));\n    return result[0];\n  },\n\n  getMetadata: function(key) {\n    var self = this;\n    var row = self.db.runInTransaction(function (txn) {\n      return self.tableMetadata.find(txn, key);\n    });\n    if (row) {\n      return JSON.parse(row['content']);\n    }\n    return undefined;\n  },\n\n  setMetadata: function(key, value) {\n    var self = this;\n    self.db.runInTransaction(function (txn) {\n      self._setMetadata(txn, key, value);\n    });\n  },\n\n  _setMetadata: function(txn, key, value) {\n    var self = this;\n    value._id = key;\n    self.tableMetadata.upsert(txn, [value]);\n  },\n\n  shouldShowBanner: function (releaseName, bannerDate) {\n    var self = this;\n    var row = self.db.runInTransaction(function (txn) {\n      return self.tableBannersShown.find(txn, releaseName);\n    });\n    // We've never printed a banner for this release.\n    if (! row)\n      return true;\n    try {\n      var lastShown = new Date(JSON.parse(row.lastShown));\n      return lastShown < bannerDate;\n    } catch (e) {\n      // Probably an error in JSON.parse or something. Just show the banner.\n      return true;\n    }\n  },\n\n  setBannerShownDate: function (releaseName, bannerShownDate) {\n    var self = this;\n    self.db.runInTransaction(function (txn) {\n      self.tableBannersShown.upsert(txn, [{\n        _id: releaseName,\n        // XXX For now, there's no way to tell this file to make a non-string\n        // column in a sqlite table, but this should probably change to a\n        // 'timestamp with time zone' or whatever.\n        lastShown: JSON.stringify(bannerShownDate)\n      }]);\n    });\n  }\n});\n\nexports.RemoteCatalog = RemoteCatalog;\n\n// We put this constant here because we don't have any better place that would otherwise cause a cycle\nexports.DEFAULT_TRACK = 'METEOR';\n\n// The catalog as provided by troposhere (aka atomospherejs.com)\nexports.official = new RemoteCatalog();\n"]}