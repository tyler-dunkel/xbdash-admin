{"version":3,"sources":["/tools/packaging/package-map.js"],"names":["_","require","packageVersionParser","utils","isIsobuildFeaturePackage","exports","PackageMap","versions","options","self","_map","_localCatalog","localCatalog","each","version","packageName","packageSource","getPackageSource","kind","extend","prototype","eachPackage","iterator","info","infoClone","clone","getInfo","has","makeSubsetMap","packageNames","subsetVersions","Error","toJSON","ret","sourceRoot","toVersionMap","isSupersetOfJSON","mapJSON","all","jsonInfo","thisInfo","fromReleaseVersion","releaseVersion","toolPackageVersion","tool","parsePackageAndVersion","toolPackage","toolVersion","versionMap","packages","PackageMapDelta","_changedPackages","packageMap","oldVersion","cachedVersions","_storeAddOrChange","anticipatedPrereleases","neededToUseUnanticipatedPrereleases","_storeRemove","newInfo","backwardsIncompatible","majorVersion","isPrerelease","test","isAnticipatedPrerelease","newVersion","isBackwardsIncompatible","isUnanticipatedPrerelease","eachChangedPackage","hasChanges","isEmpty","displayOnConsole","title","displayItems","anyBackwardsIncompatible","anyUnanticipatedPrerelease","push","name","description","lessThan","Console","printPackageList"],"mappings":"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","file":"tools/packaging/package-map.js.map","sourcesContent":["var _ = require('underscore');\nvar packageVersionParser = require('./package-version-parser.js');\nvar utils = require('../utils/utils.js');\nimport { isIsobuildFeaturePackage } from '../isobuild/compiler.js';\n\n// PackageMap: Represents the choices of package versions being used for a\n// project. It knows all the packages that are used (direct and indirect\n// dependencies), their versions, whether they are local or versioned packages,\n// and the PackageSource object for any local packages.  Prefer using this\n// function over arbitrary JSON representations when possible.  (A related class\n// is projectContextModule.PackageMapFile which specifically represents the\n// .meteor/packages file on disk.)\n//\n// It has a corresponding JSON format (used, eg, inside buildinfo files).\n//\n// If you specify the localCatalog option to the constructor, any package in\n// that localCatalog will be considered to be local, and all others will be\n// considered to be prebuilt versioned packages from troposphere.  If you do not\n// specify the localCatalog option, all packages will be considered to prebuilt\n// versioned packages.\nexports.PackageMap = function (versions, options) {\n  var self = this;\n  options = options || {};\n  self._map = {};\n  self._localCatalog = options.localCatalog || null;\n\n  _.each(versions, function (version, packageName) {\n    // If the constraint solver told us that we needed an isobuild feature,\n    // that's fine, but it's not a real package.\n    if (isIsobuildFeaturePackage(packageName)) {\n      return;\n    }\n\n    var packageSource = self._localCatalog &&\n          self._localCatalog.getPackageSource(packageName);\n    if (packageSource) {\n      self._map[packageName] =\n        { kind: 'local', version: version, packageSource: packageSource };\n    } else {\n      self._map[packageName] =\n        { kind: 'versioned', version: version, packageSource: null };\n    }\n  });\n};\n\n_.extend(exports.PackageMap.prototype, {\n  eachPackage: function (iterator) {\n    var self = this;\n    _.each(self._map, function (info, packageName) {\n      // For reasons that are super unclear, if this `_.clone` is inlined into\n      // the `iterator` call, the value produced can mysteriously turn into\n      // undefined on the way into `iterator`. Presumably some sort of memory\n      // corruption, maybe Fiber-related?  Trying to minimize has been an\n      // exercise in nondeterminism. But this does seem to be a sure-fire way to\n      // fix it, for now. Who knows why, and who knows when it will recur again.\n      var infoClone = _.clone(info);\n      iterator(packageName, infoClone);\n    });\n  },\n  getInfo: function (packageName) {\n    var self = this;\n    if (_.has(self._map, packageName)) {\n      return self._map[packageName];\n    }\n    return null;\n  },\n  makeSubsetMap: function (packageNames) {\n    var self = this;\n    var subsetVersions = {};\n    _.each(packageNames, function (packageName) {\n      var info = self.getInfo(packageName);\n      if (!info) {\n        throw Error(\"not a subset: \" + packageName);\n      }\n      subsetVersions[packageName] = info.version;\n    });\n    return new exports.PackageMap(subsetVersions, {\n      localCatalog: self._localCatalog\n    });\n  },\n\n  toJSON: function () {\n    var self = this;\n    var ret = {};\n    _.each(self._map, function (info, packageName) {\n      if (info.kind === 'local') {\n        ret[packageName] = {\n          kind: 'local',\n          sourceRoot: info.packageSource.sourceRoot\n        };\n      } else {\n        ret[packageName] = {\n          kind: 'versioned',\n          version: info.version\n        };\n      }\n    });\n    return ret;\n  },\n  // Returns a map from package name to version. In most cases, this is a far\n  // worse representation than PackageMap... avoid using it!\n  toVersionMap: function () {\n    var self = this;\n    var ret = {};\n    _.each(self._map, function (info, packageName) {\n      ret[packageName] = info.version;\n    });\n    return ret;\n  },\n\n  // Given some JSON as returned from toJSON, returns true if every package in\n  // the JSON has the same mapping as in this map.\n  isSupersetOfJSON: function (mapJSON) {\n    var self = this;\n    return _.all(mapJSON, function (jsonInfo, packageName) {\n      var thisInfo = self.getInfo(packageName);\n      if (! thisInfo) {\n        return false;\n      }\n      if (jsonInfo.kind !== thisInfo.kind) {\n        return false;\n      }\n      if (thisInfo.kind === 'local') {\n        return thisInfo.packageSource.sourceRoot === jsonInfo.sourceRoot;\n      } else {\n        return thisInfo.version === jsonInfo.version;\n      }\n    });\n  }\n});\n\n// Static method: returns a PackageMap that represents a (catalog)\n// ReleaseVersion entry (including its tool).  Note that this function assumes\n// that all packages will be prebuilt versioned, not local. This is mostly used\n// to create PackageMaps to pass to tropohouse.downloadPackagesMissingFromMap;\n// it should not be used as part of a ProjectContext because it does not allow\n// you to override release packages with local packages.\nexports.PackageMap.fromReleaseVersion = function (releaseVersion) {\n  var toolPackageVersion = releaseVersion.tool &&\n        utils.parsePackageAndVersion(releaseVersion.tool);\n  if (!toolPackageVersion) {\n    throw new Error(\"bad tool in release: \" + releaseVersion.tool);\n  }\n  var toolPackage = toolPackageVersion.package;\n  var toolVersion = toolPackageVersion.version;\n\n  var versionMap = _.clone(releaseVersion.packages || {});\n  versionMap[toolPackage] = toolVersion;\n\n  // As described in this function's description, all packages in this map are\n  // versioned, so we do not specify a localCatalog.\n  return new exports.PackageMap(versionMap);\n};\n\n\n\n// PackageMapDelta: represents the change in a PackageMap between two constraint\n// solver runs.\nexports.PackageMapDelta = function (options) {\n  var self = this;\n  self._changedPackages = {};\n\n  options.packageMap.eachPackage(function (packageName, info) {\n    var oldVersion = _.has(options.cachedVersions, packageName)\n          ? options.cachedVersions[packageName] : null;\n    self._storeAddOrChange(\n      packageName, info, oldVersion, options.anticipatedPrereleases,\n      options.neededToUseUnanticipatedPrereleases);\n  });\n\n  _.each(options.cachedVersions, function (oldVersion, packageName) {\n    if (! options.packageMap.getInfo(packageName)) {\n      self._storeRemove(packageName, oldVersion);\n    }\n  });\n};\n\n_.extend(exports.PackageMapDelta.prototype, {\n  _storeAddOrChange: function (packageName, newInfo, oldVersion,\n                               anticipatedPrereleases,\n                               neededToUseUnanticipatedPrereleases) {\n    var self = this;\n\n    // Store nothing if nothing has changed.\n    if (newInfo.version === oldVersion) {\n      return;\n    }\n\n    var backwardsIncompatible =\n          oldVersion !== null &&\n          (packageVersionParser.majorVersion(newInfo.version) !==\n           packageVersionParser.majorVersion(oldVersion));\n\n    var isPrerelease = /-/.test(newInfo.version);\n    var isAnticipatedPrerelease = _.has(anticipatedPrereleases, packageName) &&\n          _.has(anticipatedPrereleases[packageName], newInfo.version);\n    self._changedPackages[packageName] = {\n      oldVersion: oldVersion,\n      newVersion: newInfo.version,\n      isBackwardsIncompatible: backwardsIncompatible,\n      isUnanticipatedPrerelease: (neededToUseUnanticipatedPrereleases &&\n                                  isPrerelease && !isAnticipatedPrerelease)\n    };\n  },\n\n  _storeRemove: function (packageName, oldVersion) {\n    var self = this;\n    self._changedPackages[packageName] = {\n      oldVersion: oldVersion,\n      newVersion: null\n    };\n  },\n\n  eachChangedPackage: function (iterator) {\n    var self = this;\n    _.each(self._changedPackages, function (info, packageName) {\n      iterator(packageName, _.clone(info));\n    });\n  },\n\n  hasChanges: function () {\n    var self = this;\n    return ! _.isEmpty(self._changedPackages);\n  },\n\n  displayOnConsole: function (options) {\n    var self = this;\n    options = _.extend({\n      title: \"Changes to your project's package version selections:\"\n    }, options);\n\n    // Print nothing at all if nothing changed.\n    if (! self.hasChanges()) {\n      return;\n    }\n\n    var displayItems = [];\n    var anyBackwardsIncompatible = false;\n    var anyUnanticipatedPrerelease = false;\n    self.eachChangedPackage(function (packageName, info) {\n      if (info.newVersion === null) {\n        displayItems.push({\n          name: packageName,\n          description: \"removed from your project\"\n        });\n        return;\n      }\n\n      var name = packageName;\n      if (info.isBackwardsIncompatible) {\n        name += '*';\n        anyBackwardsIncompatible = true;\n      }\n      if (info.isUnanticipatedPrerelease) {\n        name += '+';\n        anyUnanticipatedPrerelease = true;\n      }\n\n      var description;\n      if (info.oldVersion === null) {\n        description = \"added, version \" + info.newVersion;\n      } else if (packageVersionParser.lessThan(info.oldVersion,\n                                               info.newVersion)) {\n        description =\n          \"upgraded from \" + info.oldVersion + \" to \" + info.newVersion;\n      } else {\n        description =\n          \"downgraded from \" + info.oldVersion + \" to \" + info.newVersion;\n      }\n      displayItems.push({ name: name, description: description });\n    });\n\n    var Console = require('../console/console.js').Console;\n\n    Console.info();\n    Console.info(options.title);\n    Console.info();\n    utils.printPackageList(displayItems);\n    if (anyBackwardsIncompatible) {\n      Console.info(\"\\n\" +\n\"* These packages have been updated to new versions that are not backwards\\n\" +\n\"  compatible.\");\n    }\n    if (anyUnanticipatedPrerelease) {\n      Console.info(\"\\n\" +\n\"+ In order to resolve constraints, we had to use experimental versions of these\\n\" +\n\"  packages.\");\n    }\n  }\n});\n"]}