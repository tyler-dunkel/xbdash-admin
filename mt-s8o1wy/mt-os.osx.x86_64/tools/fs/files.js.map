{"version":3,"sources":["/tools/fs/files.js"],"names":["assert","require","fs","path","os","util","_","Fiber","crypto","spawn","rimraf","sourcemap","sourceMapRetrieverStack","utils","cleanup","buildmessage","fiberHelpers","colonConverter","miniFiles","Profile","files","exports","extend","parsedSourceMaps","nextStackFilenameCounter","useParsedSourceMap","pathForSourceMap","has","map","push","findUpwards","predicate","startPath","testDir","cwd","newDir","pathDirname","convertToStandardPath","process","findAppDir","filepath","isAppDir","stat","pathJoin","isFile","e","findPackageDir","isPackageDir","addToGitignore","dirPath","entry","exists","data","readFile","lines","split","any","x","substr","writeFile","inCheckout","once","getCurrentToolsDir","console","log","usesWarehouse","env","METEOR_WAREHOUSE_DIR","getToolsVersion","isopackJsonPath","parsed","isopackJson","JSON","parse","name","version","unipackageJsonPath","unipackageJson","Error","getDevBundle","getCurrentNodeBinDir","dirname","__dirname","getSettings","filename","watchSet","assertInCapture","absPath","pathResolve","buffer","readAndWatchFile","error","file","length","str","toString","match","prettyPath","p","realpath","home","getHomeDir","relativeToHome","pathRelative","pathSep","statOrNull","preserveSymlinks","lstat","code","rm_recursive","convertToOSPath","sync","current","disallowed","Promise","resolve","reject","err","await","makeTreeReadOnly","isDirectory","each","readdir","permissions","mode","readOnlyPermissions","chmod","fileHash","hash","createHash","setEncoding","rs","createReadStream","on","close","digest","pipe","end","blankHash","treeHash","root","options","ignore","relativePath","hashLog","TREE_HASH_DEBUG","updateHash","text","update","traverse","stringify","size","isSymbolicLink","readlink","appendFile","join","mkdir_p","dir","ps","pathNormalize","parentPath","slice","success","pathIsDirectory","mkdir","cp_r","from","to","forEach","f","pattern","transformFilename","symlink","transformContents","pathBasename","copyFileHelper","getPathsInDir","noYieldsAllowed","absoluteDir","output","newPath","newAbsPath","findPathsWithRegex","regex","allPaths","filter","copyFile","origMode","stats","readStream","writeStream","createWriteStream","tempDirs","mkdtemp","prefix","make","tmpDir","first","t","identity","platform","tries","Math","random","freeTempDir","tempDir","contains","METEOR_SAVE_TMPDIRS","setImmediate","without","onExit","sig","extractTarGz","destPath","parentDir","randomToken","verbose","Console","startTime","Date","promise","tryExtractWithNative7z","tryExtractWithNativeTar","tryExtractWithNpmTar","topLevelOfArchive","startsWith","extractDir","rename","ensureDirectoryEmpty","forceConvert","flags","tarProc","stdio","stdout","stderr","stdin","write","exeOSPath","tarGzBasename","spawnOptions","then","strictEqual","tarBasename","foundTar","some","ok","cleanUp","unlink","tar","zlib","gunzip","createGunzip","extractor","Extract","convert","createTarGzStream","fstream","fileStream","Reader","type","props","tarStream","Pack","noProprietary","createGzip","createTarball","tarball","out","renameDirAlmostAtomically","fromDir","toDir","garbageDir","movedOldDir","writeFileAtomically","contents","tmpFile","symlinkOverSync","linkText","tmpSymlink","runJavaScript","time","keys","values","symbols","value","stackFilename","sourceMap","chunks","header","consumer","SourceMapConsumer","SourceNode","fromStringWithSourceMap","wrapped","parsedSourceMap","node","results","toStringWithSourceMap","toJSON","sourceMapRoot","sourceRoot","sourcesContent","script","createScript","nodeParseError","SyntaxError","strictMode","parseError","loc","FancySyntaxError","message","consumer2","original","originalPositionFor","source","line","column","func","runInThisContext","markBoundary","apply","OfflineError","prototype","readdirNoDots","entries","getLines","splitBufferToLines","pop","getLinesOrEmpty","readJSONOrNull","raw","trimSpaceAndComments","trimSpace","replace","KeyValueFile","self","set","k","v","_readAll","found","i","trimmed","trim","indexOf","newdata","METEOR_INSTALLATION","HOME","currentEnvWithPathsAdded","pathPropertyName","find","Object","key","toUpperCase","paths","convertedPaths","pathDecomposed","pathOsDelimiter","unshift","ensureBatExtension","_generateScriptLinkToMeteorScript","scriptLocation","scriptLocationIsAbsolutePath","scriptLocationConverted","convertToWindowsPath","newScript","EOL","_getLocationFromScriptLinkToMeteorScript","compact","last","isAbsolute","convertToPosixPath","linkToMeteorScript","linkLocation","encoding","readLinkToMeteorScript","YIELD_ALLOWED","METEOR_DISABLE_FS_FIBERS","fsFixPath","wrapFsFunc","fsFuncName","pathArgIndices","fsFunc","fsFuncSync","makeWrapper","alwaysSync","wrapper","args","j","canYield","shouldBeSync","isQuickie","noErr","result","modifyReturnValue","cb","res","displayName","fileData","isString","convertToStandardLineEndings","withCacheCache","withCache","fn","oldCache","create","enableCache","method","makeCacheKey","parts","arg","cacheKey","existsSync","callback","maxTries","watchFile","unwatchFile","readBufferWithLengthAndOffset","offset","Buffer","fd","open","count","read"],"mappings":"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","file":"tools/fs/files.js.map","sourcesContent":["///\n/// utility functions for files and directories. includes both generic\n/// helper functions (such as rm_recursive), and meteor-specific ones\n/// (such as testing whether an directory is a meteor app)\n///\n\nvar assert = require(\"assert\");\nvar fs = require(\"fs\");\nvar path = require('path');\nvar os = require('os');\nvar util = require('util');\nvar _ = require('underscore');\nvar Fiber = require('fibers');\nvar crypto = require('crypto');\nvar spawn = require(\"child_process\").spawn;\n\nvar rimraf = require('rimraf');\nvar sourcemap = require('source-map');\nvar sourceMapRetrieverStack = require('../tool-env/source-map-retriever-stack.js');\n\nvar utils = require('../utils/utils.js');\nvar cleanup = require('../tool-env/cleanup.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar colonConverter = require('../utils/colon-converter.js');\n\nvar miniFiles = require('./mini-files.js');\n\nvar Profile = require('../tool-env/profile.js').Profile;\n\n// Attach all exports of miniFiles here to avoid code duplication\nvar files = exports;\n_.extend(files, miniFiles);\n\nvar parsedSourceMaps = {};\nvar nextStackFilenameCounter = 1;\n\n// Use the source maps specified to runJavaScript\nvar useParsedSourceMap = function (pathForSourceMap) {\n  // Check our fancy source map data structure, used for isopacks\n  if (_.has(parsedSourceMaps, pathForSourceMap)) {\n    return {map: parsedSourceMaps[pathForSourceMap]};\n  }\n\n  return null;\n};\n\n// Try this source map first\nsourceMapRetrieverStack.push(useParsedSourceMap);\n\n// given a predicate function and a starting path, traverse upwards\n// from the path until we find a path that satisfies the predicate.\n//\n// returns either the path to the lowest level directory that passed\n// the test or null for none found. if starting path isn't given, use\n// cwd.\nvar findUpwards = function (predicate, startPath) {\n  var testDir = startPath || files.cwd();\n  while (testDir) {\n    if (predicate(testDir)) {\n      break;\n    }\n    var newDir = files.pathDirname(testDir);\n    if (newDir === testDir) {\n      testDir = null;\n    } else {\n      testDir = newDir;\n    }\n  }\n  if (!testDir) {\n    return null;\n  }\n\n  return testDir;\n};\n\nfiles.cwd = function () {\n  return files.convertToStandardPath(process.cwd());\n};\n\n// Determine if 'filepath' (a path, or omit for cwd) is within an app\n// directory. If so, return the top-level app directory.\nfiles.findAppDir = function (filepath) {\n  var isAppDir = function (filepath) {\n    // XXX once we are done with the transition to engine, this should\n    // change to: `return files.exists(path.join(filepath, '.meteor',\n    // 'release'))`\n\n    // .meteor/packages can be a directory, if .meteor is a warehouse\n    // directory.  since installing meteor initializes a warehouse at\n    // $HOME/.meteor, we want to make sure your home directory (and all\n    // subdirectories therein) don't count as being within a meteor app.\n    try { // use try/catch to avoid the additional syscall to files.exists\n      return files.stat(\n        files.pathJoin(filepath, '.meteor', 'packages')).isFile();\n    } catch (e) {\n      return false;\n    }\n  };\n\n  return findUpwards(isAppDir, filepath);\n};\n\nfiles.findPackageDir = function (filepath) {\n  var isPackageDir = function (filepath) {\n    try {\n      return files.stat(files.pathJoin(filepath, 'package.js')).isFile();\n    } catch (e) {\n      return false;\n    }\n  };\n\n  return findUpwards(isPackageDir, filepath);\n};\n\n// create a .gitignore file in dirPath if one doesn't exist. add\n// 'entry' to the .gitignore on its own line at the bottom of the\n// file, if the exact line does not already exist in the file.\nfiles.addToGitignore = function (dirPath, entry) {\n  var filepath = files.pathJoin(dirPath, \".gitignore\");\n  if (files.exists(filepath)) {\n    var data = files.readFile(filepath, 'utf8');\n    var lines = data.split(/\\n/);\n    if (_.any(lines, function (x) { return x === entry; })) {\n      // already there do nothing\n    } else {\n      // rewrite file w/ new entry.\n      if (data.substr(-1) !== \"\\n\") {\n        data = data + \"\\n\";\n      }\n      data = data + entry + \"\\n\";\n      files.writeFile(filepath, data, 'utf8');\n    }\n  } else {\n    // doesn't exist, just write it.\n    files.writeFile(filepath, entry + \"\\n\", 'utf8');\n  }\n};\n\n// Are we running Meteor from a git checkout?\nfiles.inCheckout = _.once(function () {\n  try {\n    if (files.exists(files.pathJoin(files.getCurrentToolsDir(), '.git'))) {\n      return true;\n    }\n  } catch (e) { console.log(e); }\n\n  return false;\n});\n\n// True if we are using a warehouse: either installed Meteor, or if\n// $METEOR_WAREHOUSE_DIR is set. Otherwise false (we're in a git checkout and\n// just using packages from the checkout).\nfiles.usesWarehouse = function () {\n  // Test hook: act like we're \"installed\" using a non-homedir warehouse\n  // directory.\n  if (process.env.METEOR_WAREHOUSE_DIR) {\n    return true;\n  } else {\n    return ! files.inCheckout();\n  }\n};\n\n// Read the '.tools_version.txt' file. If in a checkout, throw an error.\nfiles.getToolsVersion = function () {\n  if (! files.inCheckout()) {\n    var isopackJsonPath = files.pathJoin(files.getCurrentToolsDir(),\n      '..',  // get out of tool, back to package\n      'isopack.json');\n\n    var parsed;\n\n    if (files.exists(isopackJsonPath)) {\n      var isopackJson = files.readFile(isopackJsonPath);\n      parsed = JSON.parse(isopackJson);\n\n      // XXX \"isopack-1\" is duplicate of isopack.currentFormat\n      parsed = parsed[\"isopack-1\"]; // get the right format from the JSON\n      return parsed.name + '@' + parsed.version;\n    }\n\n    // XXX COMPAT WITH 0.9.3\n    var unipackageJsonPath = files.pathJoin(files.getCurrentToolsDir(),\n      '..',  // get out of tool, back to package\n      'unipackage.json');\n    var unipackageJson = files.readFile(unipackageJsonPath);\n    parsed = JSON.parse(unipackageJson);\n    return parsed.name + '@' + parsed.version;\n\n  } else {\n    throw new Error(\"Unexpected. Git checkouts don't have tools versions.\");\n  }\n};\n\n// Return the root of dev_bundle (probably /usr/local/meteor in an\n// install, or (checkout root)/dev_bundle in a checkout.).\nfiles.getDevBundle = function () {\n  return files.pathJoin(files.getCurrentToolsDir(), 'dev_bundle');\n};\n\nfiles.getCurrentNodeBinDir = function () {\n  return files.pathJoin(files.getDevBundle(), \"bin\");\n}\n\n// Return the top-level directory for this meteor install or checkout\nfiles.getCurrentToolsDir = function () {\n  var dirname = files.convertToStandardPath(__dirname);\n  return files.pathJoin(dirname, '..', '..');\n};\n\n// Read a settings file and sanity-check it. Returns a string on\n// success or null on failure (in which case buildmessages will be\n// emitted).\nfiles.getSettings = function (filename, watchSet) {\n  buildmessage.assertInCapture();\n  var absPath = files.pathResolve(filename);\n  var buffer = require(\"./watch.js\").readAndWatchFile(watchSet, absPath);\n  if (buffer === null) {\n    buildmessage.error(\"file not found (settings file)\",\n                       { file: filename });\n    return null;\n  }\n\n  if (buffer.length > 0x10000) {\n    buildmessage.error(\"settings file is too large (must be less than 64k)\",\n                       { file: filename });\n    return null;\n  }\n\n  var str = buffer.toString('utf8');\n\n  // Ensure that the string is parseable in JSON, but there's no reason to use\n  // the object value of it yet.\n  if (str.match(/\\S/)) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      buildmessage.error(\"parse error reading settings file\",\n                         { file: filename });\n    }\n  }\n\n  return str;\n};\n\n// Try to find the prettiest way to present a path to the\n// user. Presently, the main thing it does is replace $HOME with ~.\nfiles.prettyPath = function (p) {\n  p = files.realpath(p);\n  var home = files.getHomeDir();\n  if (! home) {\n    return p;\n  }\n  var relativeToHome = files.pathRelative(home, p);\n  if (relativeToHome.substr(0, 3) === ('..' + files.pathSep)) {\n    return p;\n  }\n  return files.pathJoin('~', relativeToHome);\n};\n\n// Like statSync, but null if file not found\nfiles.statOrNull = function (path) {\n  return statOrNull(path);\n};\n\nfunction statOrNull(path, preserveSymlinks) {\n  try {\n    return preserveSymlinks\n      ? files.lstat(path)\n      : files.stat(path);\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      return null;\n    }\n    throw e;\n  }\n}\n\n// Like rm -r.\nfiles.rm_recursive = Profile(\"files.rm_recursive\", function (p) {\n  const path = files.convertToOSPath(p);\n  try {\n    rimraf.sync(path);\n  } catch (e) {\n    if (e.code === \"ENOTEMPTY\" &&\n        Fiber.current &&\n        Fiber.yield &&\n        ! Fiber.yield.disallowed) {\n      new Promise((resolve, reject) => {\n        rimraf(path, err => {\n          err ? reject(err) : resolve();\n        });\n      }).await();\n      return;\n    }\n    throw e;\n  }\n});\n\n// Makes all files in a tree read-only.\nvar makeTreeReadOnly = function (p) {\n  try {\n    // the l in lstat is critical -- we want to ignore symbolic links\n    var stat = files.lstat(p);\n  } catch (e) {\n    if (e.code == \"ENOENT\") {\n      return;\n    }\n    throw e;\n  }\n\n  if (stat.isDirectory()) {\n    _.each(files.readdir(p), function (file) {\n      makeTreeReadOnly(files.pathJoin(p, file));\n    });\n  }\n  if (stat.isFile()) {\n    var permissions = stat.mode & 0o777;\n    var readOnlyPermissions = permissions & 0o555;\n    if (permissions !== readOnlyPermissions) {\n      files.chmod(p, readOnlyPermissions);\n    }\n  }\n};\n\n// Returns the base64 SHA256 of the given file.\nfiles.fileHash = function (filename) {\n  var crypto = require('crypto');\n  var hash = crypto.createHash('sha256');\n  hash.setEncoding('base64');\n  var rs = files.createReadStream(filename);\n  return new Promise(function (resolve) {\n    rs.on('end', function () {\n      rs.close();\n      resolve(hash.digest('base64'));\n    });\n    rs.pipe(hash, { end: false });\n  }).await();\n};\n\n// This is the result of running fileHash on a blank file.\nfiles.blankHash = \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\";\n\n// Returns a base64 SHA256 hash representing a tree on disk. It is not sensitive\n// to modtime, uid/gid, or any permissions bits other than the current-user-exec\n// bit on normal files.\nfiles.treeHash = function (root, options) {\n  options = _.extend({\n    ignore: function (relativePath) {\n      return false;\n    }\n  }, options);\n\n  var crypto = require('crypto');\n  var hash = crypto.createHash('sha256');\n\n  var hashLog = process.env.TREE_HASH_DEBUG ?\n        ['\\n\\nTREE HASH for ' + root + '\\n'] : null;\n\n  var updateHash = function (text) {\n    hashLog && hashLog.push(text);\n    hash.update(text);\n  };\n\n  var traverse = function (relativePath) {\n    if (options.ignore(relativePath)) {\n      hashLog && hashLog.push('SKIP ' + JSON.stringify(relativePath) + '\\n');\n      return;\n    }\n\n    var absPath = files.pathJoin(root, relativePath);\n    var stat = files.lstat(absPath);\n\n    if (stat.isDirectory()) {\n      if (relativePath) {\n        updateHash('dir ' + JSON.stringify(relativePath) + '\\n');\n      }\n      _.each(files.readdir(absPath), function (entry) {\n        traverse(files.pathJoin(relativePath, entry));\n      });\n    } else if (stat.isFile()) {\n      if (!relativePath) {\n        throw Error(\"must call files.treeHash on a directory\");\n      }\n      updateHash('file ' + JSON.stringify(relativePath) + ' ' +\n                  stat.size + ' ' + files.fileHash(absPath) + '\\n');\n      if (stat.mode & 0o100) {\n        updateHash('exec\\n');\n      }\n    } else if (stat.isSymbolicLink()) {\n      if (!relativePath) {\n        throw Error(\"must call files.treeHash on a directory\");\n      }\n      updateHash('symlink ' + JSON.stringify(relativePath) + ' ' +\n                 JSON.stringify(files.readlink(absPath)) + '\\n');\n    }\n    // ignore anything weirder\n  };\n\n  traverse('');\n  hashLog && files.appendFile(process.env.TREE_HASH_DEBUG, hashLog.join(''));\n  return hash.digest('base64');\n};\n\n// like mkdir -p. if it returns true, the item is a directory (even if\n// it was already created). if it returns false, the item is not a\n// directory and we couldn't make it one.\nfiles.mkdir_p = function (dir, mode) {\n  var p = files.pathResolve(dir);\n  var ps = files.pathNormalize(p).split(files.pathSep);\n\n  var stat = files.statOrNull(p);\n  if (stat) {\n    return stat.isDirectory();\n  }\n\n  // doesn't exist. recurse to build parent.\n  // Don't use files.pathJoin here because it can strip off the leading slash\n  // accidentally.\n  var parentPath = ps.slice(0, -1).join(files.pathSep);\n  var success = files.mkdir_p(parentPath, mode);\n  // parent is not a directory.\n  if (! success) { return false; }\n\n  var pathIsDirectory = function (path) {\n    var stat = files.statOrNull(path);\n    return stat && stat.isDirectory();\n  };\n\n  try {\n    files.mkdir(p, mode);\n  } catch (err) {\n    if (err.code === \"EEXIST\") {\n      if (pathIsDirectory(p)) {\n        // all good, someone else created this directory for us while we were\n        // yielding\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      throw err;\n    }\n  }\n\n  // double check we exist now\n  return pathIsDirectory(p);\n};\n\n// Roughly like cp -R.\n//\n// The output files will be readable and writable by everyone that the umask\n// allows, and executable by everyone (modulo umask) if the original file was\n// owner-executable. Symlinks are treated transparently (ie the contents behind\n// them are copied, and it's an error if that points nowhere).\n//\n// If options.transform{Filename, Contents} is present, it should\n// be a function, and the contents (as a buffer) or filename will be\n// passed through the function. Use this to, eg, fill templates.\n//\n// If options.ignore is present, it should be a list of regexps. Any\n// file whose basename matches one of the regexps, before\n// transformation, will be skipped.\nfiles.cp_r = function(from, to, options = {}) {\n  from = files.pathResolve(from);\n\n  const stat = statOrNull(from, options.preserveSymlinks);\n  if (! stat) {\n    return;\n  }\n\n  if (stat.isDirectory()) {\n    files.mkdir_p(to, 0o755);\n\n    files.readdir(from).forEach(f => {\n      if (options.ignore &&\n          _.any(options.ignore,\n                pattern => f.match(pattern))) {\n        return;\n      }\n\n      if (options.transformFilename) {\n        f = options.transformFilename(f);\n      }\n\n      files.cp_r(\n        files.pathJoin(from, f),\n        files.pathJoin(to, f),\n        options\n      );\n    })\n\n    return;\n  }\n\n  files.mkdir_p(files.pathDirname(to));\n\n  if (stat.isSymbolicLink()) {\n    files.symlink(files.readlink(from), to);\n\n  } else {\n    // Create the file as readable and writable by everyone, and\n    // executable by everyone if the original file is executable by\n    // owner. (This mode will be modified by umask.) We don't copy the\n    // mode *directly* because this function is used by 'meteor create'\n    // which is copying from the read-only tools tree into a writable app.\n    const mode = (stat.mode & 0o100) ? 0o777 : 0o666;\n\n    if (options.transformContents) {\n      files.writeFile(to, options.transformContents(\n        files.readFile(from),\n        files.pathBasename(from)\n      ), { mode });\n\n    } else {\n      copyFileHelper(from, to, mode);\n    }\n  }\n};\n\n/**\n * Get every path in a directory recursively, treating symlinks as files\n * @param  {String} dir     The directory to walk, either relative to options.cwd or completely absolute\n * @param  {Object} options Some options\n * @param {String} options.cwd The directory that paths should be relative to\n * @param {String[]} options.output An array to push results to\n * @return {String[]}         All of the paths in the directory recursively\n */\nfiles.getPathsInDir = function (dir, options) {\n  // Don't let this function yield so that the file system doesn't get changed\n  // underneath us\n  return fiberHelpers.noYieldsAllowed(function () {\n    var cwd = options.cwd || files.convertToStandardPath(process.cwd());\n\n    if (! files.exists(cwd)) {\n      throw new Error(\"Specified current working directory doesn't exist: \" +\n        cwd);\n    }\n\n    var absoluteDir = files.pathResolve(cwd, dir);\n\n    if (! files.exists(absoluteDir)) {\n      // There are no paths in this dir, so don't do anything\n      return;\n    }\n\n    var output = options.output || [];\n\n    var pathIsDirectory = function (path) {\n      var stat = files.lstat(path);\n      return stat.isDirectory();\n    };\n\n    _.each(files.readdir(absoluteDir), function (entry) {\n      var newPath = files.pathJoin(dir, entry);\n      var newAbsPath = files.pathJoin(absoluteDir, entry);\n\n      output.push(newPath);\n\n      if (pathIsDirectory(newAbsPath)) {\n        files.getPathsInDir(newPath, {\n          cwd: cwd,\n          output: output\n        });\n      }\n    });\n\n    return output;\n  });\n};\n\nfiles.findPathsWithRegex = function (dir, regex, options) {\n  var allPaths = files.getPathsInDir(dir, {\n    cwd: options.cwd\n  });\n\n  return _.filter(allPaths, function (path) {\n    return path.match(regex);\n  });\n};\n\n// Copies a file, which is expected to exist. Parent directories of \"to\" do not\n// have to exist. Treats symbolic links transparently (copies the contents, not\n// the link itself, and it's an error if the link doesn't point to a file).\nfiles.copyFile = function (from, to, origMode=null) {\n  files.mkdir_p(files.pathDirname(files.pathResolve(to)), 0o755);\n\n  if (origMode === null) {\n    var stats = files.stat(from);\n    if (!stats.isFile()) {\n      throw Error(\"cannot copy non-files\");\n    }\n    origMode = stats.mode;\n  }\n\n  // Create the file as readable and writable by everyone, and executable by\n  // everyone if the original file is executably by owner. (This mode will be\n  // modified by umask.) We don't copy the mode *directly* because this function\n  // is used by 'meteor create' which is copying from the read-only tools tree\n  // into a writable app.\n  var mode = (origMode & 0o100) ? 0o777 : 0o666;\n\n  copyFileHelper(from, to, mode);\n};\nfiles.copyFile = Profile(\"files.copyFile\", files.copyFile);\n\nvar copyFileHelper = function (from, to, mode) {\n  var readStream = files.createReadStream(from);\n  var writeStream = files.createWriteStream(to, { mode: mode });\n  new Promise(function (resolve, reject) {\n    readStream.on('error', reject);\n    writeStream.on('error', reject);\n    writeStream.on('open', function () {\n      readStream.pipe(writeStream);\n    });\n    writeStream.once('finish', resolve);\n  }).await();\n};\n\n// Make a temporary directory. Returns the path to the newly created\n// directory. Only the current user is allowed to read or write the\n// files in the directory (or add files to it). The directory will\n// be cleaned up on exit.\nvar tempDirs = [];\nfiles.mkdtemp = function (prefix) {\n  var make = function () {\n    prefix = prefix || 'mt-';\n    // find /tmp\n    var tmpDir = _.first(_.map(['TMPDIR', 'TMP', 'TEMP'], function (t) {\n      return process.env[t];\n    }).filter(_.identity));\n\n    if (! tmpDir && process.platform !== 'win32') {\n      tmpDir = '/tmp';\n    }\n\n    if (! tmpDir) {\n      throw new Error(\"Couldn't create a temporary directory.\");\n    }\n\n    tmpDir = files.realpath(tmpDir);\n\n    // make the directory. give it 3 tries in case of collisions from\n    // crappy random.\n    var tries = 3;\n    while (tries > 0) {\n      var dirPath = files.pathJoin(\n        tmpDir, prefix + (Math.random() * 0x100000000 + 1).toString(36));\n      try {\n        files.mkdir(dirPath, 0o700);\n        return dirPath;\n      } catch (err) {\n        tries--;\n      }\n    }\n    throw new Error(\"failed to make temporary directory in \" + tmpDir);\n  };\n  var dir = make();\n  tempDirs.push(dir);\n  return dir;\n};\n\n// Call this if you're done using a temporary directory. It will asynchronously\n// be deleted.\nfiles.freeTempDir = function (tempDir) {\n  if (! _.contains(tempDirs, tempDir)) {\n    throw Error(\"not a tracked temp dir: \" + tempDir);\n  }\n  if (process.env.METEOR_SAVE_TMPDIRS) {\n    return;\n  }\n  setImmediate(function () {\n    // note: rm_recursive can yield, so it's possible that during this\n    // rm_recursive call, the onExit rm_recursive fires too.  (Or it could even\n    // start firing before the setImmediate handler is called.) But it should be\n    // OK for there to be overlapping rm_recursive calls, since rm_recursive\n    // ignores all ENOENT calls. And we don't remove tempDir from tempDirs until\n    // it's done, so that if mid-way through this rm_recursive the onExit one\n    // fires, it still gets removed.\n\n    try {\n      files.rm_recursive(tempDir);\n    } catch (err) {\n      // Don't crash and print a stack trace because we failed to delete a temp\n      // directory. This happens sometimes on Windows and seems to be\n      // unavoidable.\n      console.log(err);\n    }\n\n    tempDirs = _.without(tempDirs, tempDir);\n  });\n};\n\nif (! process.env.METEOR_SAVE_TMPDIRS) {\n  cleanup.onExit(function (sig) {\n    _.each(tempDirs, function (tempDir) {\n      try {\n        files.rm_recursive(tempDir);\n      } catch (err) {\n        // Don't crash and print a stack trace because we failed to delete a temp\n        // directory. This happens sometimes on Windows and seems to be\n        // unavoidable.\n        console.log(err);\n      }\n    });\n\n    tempDirs = [];\n  });\n}\n\n// Takes a buffer containing `.tar.gz` data and extracts the archive\n// into a destination directory. destPath should not exist yet, and\n// the archive should contain a single top-level directory, which will\n// be renamed atomically to destPath. The entire tree will be made\n// readonly.\nfiles.extractTarGz = function (buffer, destPath, options) {\n  var options = options || {};\n  var parentDir = files.pathDirname(destPath);\n  var tempDir = files.pathJoin(parentDir, '.tmp' + utils.randomToken());\n  files.mkdir_p(tempDir);\n\n  if (! _.has(options, \"verbose\")) {\n    options.verbose = require(\"../console/console.js\").Console.verbose;\n  }\n\n  const startTime = +new Date;\n\n  let promise = process.platform === \"win32\"\n    ? tryExtractWithNative7z(buffer, tempDir, options)\n    : tryExtractWithNativeTar(buffer, tempDir, options)\n\n  promise = promise.catch(\n    error => tryExtractWithNpmTar(buffer, tempDir, options)\n  );\n\n  promise.await();\n\n  // succeed!\n  var topLevelOfArchive = files.readdir(tempDir)\n    // On Windows, the 7z.exe tool sometimes creates an auxiliary\n    // PaxHeader directory.\n    .filter(file => ! file.startsWith(\"PaxHeader\"));\n\n  if (topLevelOfArchive.length !== 1) {\n    throw new Error(\n      \"Extracted archive '\" + tempDir + \"' should only contain one entry\");\n  }\n\n  var extractDir = files.pathJoin(tempDir, topLevelOfArchive[0]);\n  makeTreeReadOnly(extractDir);\n  files.rename(extractDir, destPath);\n  files.rm_recursive(tempDir);\n\n  if (options.verbose) {\n    console.log(\"Finished extracting in\", new Date - startTime, \"ms\");\n  }\n};\n\nfunction ensureDirectoryEmpty(dir) {\n  files.readdir(dir).forEach(file => {\n    files.rm_recursive(files.pathJoin(dir, file));\n  });\n}\n\nfunction tryExtractWithNativeTar(buffer, tempDir, options) {\n  ensureDirectoryEmpty(tempDir);\n\n  if (options.forceConvert) {\n    return Promise.reject(new Error(\n      \"Native tar cannot convert colons in package names\"));\n  }\n\n  return new Promise((resolve, reject) => {\n    const flags = options.verbose ? \"-xzvf\" : \"-xzf\";\n    const tarProc = spawn(\"tar\", [flags, \"-\"], {\n      cwd: files.convertToOSPath(tempDir),\n      stdio: options.verbose ? [\n        \"pipe\", // Always need to write to tarProc.stdin.\n        process.stdout,\n        process.stderr\n      ] : \"pipe\",\n    });\n\n    tarProc.on(\"error\", reject);\n    tarProc.on(\"exit\", resolve);\n\n    tarProc.stdin.write(buffer);\n    tarProc.stdin.end();\n  });\n}\n\nfunction tryExtractWithNative7z(buffer, tempDir, options) {\n  ensureDirectoryEmpty(tempDir);\n\n  if (options.forceConvert) {\n    return Promise.reject(new Error(\n      \"Native 7z.exe cannot convert colons in package names\"));\n  }\n\n  const exeOSPath = files.convertToOSPath(\n    files.pathJoin(files.getCurrentNodeBinDir(), \"7z.exe\"));\n  const tarGzBasename = \"out.tar.gz\";\n  const spawnOptions = {\n    cwd: files.convertToOSPath(tempDir),\n    stdio: options.verbose ? \"inherit\" : \"pipe\",\n  };\n\n  files.writeFile(files.pathJoin(tempDir, tarGzBasename), buffer);\n\n  return new Promise((resolve, reject) => {\n    spawn(exeOSPath, [\n      \"x\", \"-y\", tarGzBasename\n    ], spawnOptions)\n      .on(\"error\", reject)\n      .on(\"exit\", resolve);\n\n  }).then(code => {\n    assert.strictEqual(code, 0);\n\n    let tarBasename;\n    const foundTar = files.readdir(tempDir).some(file => {\n      if (file !== tarGzBasename) {\n        tarBasename = file;\n        return true;\n      }\n    });\n\n    assert.ok(foundTar, \"failed to find .tar file\");\n\n    function cleanUp() {\n      files.unlink(files.pathJoin(tempDir, tarGzBasename));\n      files.unlink(files.pathJoin(tempDir, tarBasename));\n    }\n\n    return new Promise((resolve, reject) => {\n      spawn(exeOSPath, [\n        \"x\", \"-y\", tarBasename\n      ], spawnOptions)\n        .on(\"error\", reject)\n        .on(\"exit\", resolve);\n\n    }).then(code => {\n      cleanUp();\n      return code;\n    }, error => {\n      cleanUp();\n      throw error;\n    });\n  });\n}\n\nfunction tryExtractWithNpmTar(buffer, tempDir, options) {\n  ensureDirectoryEmpty(tempDir);\n\n  var tar = require(\"tar\");\n  var zlib = require(\"zlib\");\n\n  return new Promise((resolve, reject) => {\n    var gunzip = zlib.createGunzip().on('error', reject);\n    var extractor = new tar.Extract({\n      path: files.convertToOSPath(tempDir)\n    }).on('entry', function (e) {\n      if (process.platform === \"win32\" || options.forceConvert) {\n        // On Windows, try to convert old packages that have colons in\n        // paths by blindly replacing all of the paths. Otherwise, we\n        // can't even extract the tarball\n        e.path = colonConverter.convert(e.path);\n      }\n    }).on('error', reject)\n      .on('end', resolve);\n\n    // write the buffer to the (gunzip|untar) pipeline; these calls\n    // cause the tar to be extracted to disk.\n    gunzip.pipe(extractor);\n    gunzip.write(buffer);\n    gunzip.end();\n  });\n}\n\n// Tar-gzips a directory, returning a stream that can then be piped as\n// needed.  The tar archive will contain a top-level directory named\n// after dirPath.\nfiles.createTarGzStream = function (dirPath, options) {\n  var tar = require(\"tar\");\n  var fstream = require('fstream');\n  var zlib = require(\"zlib\");\n\n  // Don't use `{ path: dirPath, type: 'Directory' }` as an argument to\n  // fstream.Reader. This triggers a collection of odd behaviors in fstream\n  // (which might be bugs or might just be weirdnesses).\n  //\n  // First, if we pass an object with `type: 'Directory'` as an argument, then\n  // the resulting tarball has no entry for the top-level directory, because\n  // the reader emits an entry (with just the path, no permissions or other\n  // properties) before the pipe to gzip is even set up, so that entry gets\n  // lost. Even if we pause the streams until all the pipes are set up, we'll\n  // get the entry in the tarball for the top-level directory without\n  // permissions or other properties, which is problematic. Just passing\n  // `dirPath` appears to cause `fstream` to stat the directory before emitting\n  // an entry for it, so the pipes are set up by the time the entry is emitted,\n  // and the entry has all the right permissions, etc. from statting it.\n  //\n  // The second weird behavior is that we need an entry for the top-level\n  // directory in the tarball to untar it with npm `tar`. (GNU tar, in\n  // contrast, appears to have no problems untarring tarballs without entries\n  // for the top-level directory inside them.) The problem is that, without an\n  // entry for the top-level directory, `fstream` will create the directory\n  // with the same permissions as the first file inside it. This manifests as\n  // an EACCESS when untarring if the first file inside the top-level directory\n  // is not writeable.\n  var fileStream = fstream.Reader({\n    path: files.convertToOSPath(dirPath),\n    filter: function (entry) {\n      if (process.platform !== \"win32\") {\n        return true;\n      }\n\n      // Refuse to create a directory that isn't listable. Tarballs\n      // created on Windows will have non-executable directories (since\n      // executable isn't a thing in Windows directory permissions), and\n      // so the resulting extracted directories will not be listable on\n      // Linux/Mac unless we explicitly make them executable. We think\n      // this should really be an option that you pass to node tar, but\n      // setting it in an 'entry' handler is the same strategy that npm\n      // does, so we do that here too.\n      if (entry.type === \"Directory\") {\n        entry.mode = (entry.mode || entry.props.mode) | 0o500;\n        entry.props.mode = entry.mode;\n      }\n\n      return true;\n    }\n  });\n  var tarStream = fileStream.pipe(tar.Pack({ noProprietary: true }));\n\n  return tarStream.pipe(zlib.createGzip());\n};\n\n// Tar-gzips a directory into a tarball on disk, synchronously.\n// The tar archive will contain a top-level directory named after dirPath.\nfiles.createTarball = function (dirPath, tarball, options) {\n  var out = files.createWriteStream(tarball);\n  new Promise(function (resolve, reject) {\n    out.on('error', reject);\n    out.on('close', resolve);\n    files.createTarGzStream(dirPath, options).pipe(out);\n  }).await();\n};\n\n// Use this if you'd like to replace a directory with another\n// directory as close to atomically as possible. It's better than\n// recursively deleting the target directory first and then\n// renaming. (Failure modes here include \"there's a brief moment where\n// toDir does not exist\" and \"you can end up with garbage directories\n// sitting around\", but not \"there's any time where toDir exists but\n// is in a state other than initial or final\".)\nfiles.renameDirAlmostAtomically = function (fromDir, toDir) {\n  var garbageDir = toDir + '-garbage-' + utils.randomToken();\n\n  // Get old dir out of the way, if it exists.\n  var movedOldDir = true;\n  try {\n    files.rename(toDir, garbageDir);\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      throw e;\n    }\n    movedOldDir = false;\n  }\n\n  // Now rename the directory.\n  files.rename(fromDir, toDir);\n\n  // ... and delete the old one.\n  if (movedOldDir) {\n    files.rm_recursive(garbageDir);\n  }\n};\nfiles.renameDirAlmostAtomically = Profile(\"files.renameDirAlmostAtomically\",\n                                          files.renameDirAlmostAtomically);\n\nfiles.writeFileAtomically = function (filename, contents) {\n  const parentDir = files.pathDirname(filename);\n  files.mkdir_p(parentDir);\n\n  const tmpFile = files.pathJoin(\n    parentDir,\n    '.' + files.pathBasename(filename) + '.' + utils.randomToken()\n  );\n\n  files.writeFile(tmpFile, contents);\n  files.rename(tmpFile, filename);\n};\nfiles.writeFileAtomically = Profile(\"files.writeFileAtomically\",\n                                    files.writeFileAtomically);\n\n// Like fs.symlinkSync, but creates a temporay link and renames it over the\n// file; this means it works even if the file already exists.\n// Do not use this function on Windows, it won't work.\nfiles.symlinkOverSync = function (linkText, file) {\n  fiberHelpers.noYieldsAllowed(function () {\n    file = files.pathResolve(file);\n    var tmpSymlink = files.pathJoin(\n      files.pathDirname(file),\n      \".\" + files.pathBasename(file) + \".tmp\" + utils.randomToken());\n    files.symlink(linkText, tmpSymlink);\n    files.rename(tmpSymlink, file);\n  });\n};\n\n// Return the result of evaluating `code` using\n// `runInThisContext`. `code` will be wrapped in a closure. You can\n// pass additional values to bind in the closure in `options.symbols`,\n// the keys being the symbols to bind and the values being their\n// values. `options.filename` is the filename to use in exceptions\n// that come from inside this code. `options.sourceMap` is an optional\n// source map that represents the file.\n//\n// The really special thing about this function is that if a parse\n// error occurs, we will raise an exception of type\n// files.FancySyntaxError, from which you may read 'message', 'file',\n// 'line', and 'column' attributes ... v8 is normally reluctant to\n// reveal this information but will write it to stderr if you pass it\n// an undocumented flag. Unforunately though node doesn't have dup2 so\n// we can't intercept the write. So instead we use a completely\n// different parser with a better error handling API. Ah well.  The\n// underlying V8 issue is:\n//   https://code.google.com/p/v8/issues/detail?id=1281\nfiles.runJavaScript = function (code, options) {\n  if (typeof code !== 'string') {\n    throw new Error(\"code must be a string\");\n  }\n\n  options = options || {};\n  var filename = options.filename || \"<anonymous>\";\n\n  return Profile.time('runJavaScript ' + filename, () => {\n\n    var keys = [], values = [];\n    // don't assume that _.keys and _.values are guaranteed to\n    // enumerate in the same order\n    _.each(options.symbols, function (value, name) {\n      keys.push(name);\n      values.push(value);\n    });\n\n    var stackFilename = filename;\n    if (options.sourceMap) {\n      // We want to generate an arbitrary filename that we use to associate the\n      // file with its source map.\n      stackFilename = \"<runJavaScript-\" + nextStackFilenameCounter++ + \">\";\n    }\n\n    var chunks = [];\n    var header = \"(function(\" + keys.join(',') + \"){\";\n    chunks.push(header);\n    if (options.sourceMap) {\n      var consumer = new sourcemap.SourceMapConsumer(options.sourceMap);\n      chunks.push(sourcemap.SourceNode.fromStringWithSourceMap(\n        code, consumer));\n    } else {\n      chunks.push(code);\n    }\n    // \\n is necessary in case final line is a //-comment\n    chunks.push(\"\\n})\");\n\n    var wrapped;\n    var parsedSourceMap = null;\n    if (options.sourceMap) {\n      var node = new sourcemap.SourceNode(null, null, null, chunks);\n      var results = node.toStringWithSourceMap({\n        file: stackFilename\n      });\n      wrapped = results.code;\n      parsedSourceMap = results.map.toJSON();\n      if (options.sourceMapRoot) {\n        // Add the specified root to any root that may be in the file.\n        parsedSourceMap.sourceRoot = files.pathJoin(\n          options.sourceMapRoot, parsedSourceMap.sourceRoot || '');\n      }\n      // source-map-support doesn't ever look at the sourcesContent field, so\n      // there's no point in keeping it in memory.\n      delete parsedSourceMap.sourcesContent;\n      parsedSourceMaps[stackFilename] = parsedSourceMap;\n    } else {\n      wrapped = chunks.join('');\n    };\n\n    try {\n      // See #runInThisContext\n      //\n      // XXX it'd be nice to runInNewContext so that the code can't mess\n      // with our globals, but objects that come out of runInNewContext\n      // have bizarro antimatter prototype chains and break 'instanceof\n      // Array'. for now, steer clear\n      //\n      // Pass 'true' as third argument if we want the parse error on\n      // stderr (which we don't).\n      var script = require('vm').createScript(wrapped, stackFilename);\n    } catch (nodeParseError) {\n      if (!(nodeParseError instanceof SyntaxError)) {\n        throw nodeParseError;\n      }\n      // Got a parse error. Unfortunately, we can't actually get the\n      // location of the parse error from the SyntaxError; Node has some\n      // hacky support for displaying it over stderr if you pass an\n      // undocumented third argument to stackFilename, but that's not\n      // what we want. See\n      //    https://github.com/joyent/node/issues/3452\n      // for more information. One thing to try (and in fact, what an\n      // early version of this function did) is to actually fork a new\n      // node to run the code and parse its output. We instead run an\n      // entirely different JS parser, from the Babel project, but\n      // which at least has a nice API for reporting errors.\n      var parse = require('meteor-babel').parse;\n      try {\n        parse(wrapped, { strictMode: false });\n      } catch (parseError) {\n        if (typeof parseError.loc !== \"object\") {\n          throw parseError;\n        }\n\n        var err = new files.FancySyntaxError;\n        err.message = parseError.message;\n\n        if (parsedSourceMap) {\n          // XXX this duplicates code in computeGlobalReferences\n          var consumer2 = new sourcemap.SourceMapConsumer(parsedSourceMap);\n          var original = consumer2.originalPositionFor(parseError.loc);\n          if (original.source) {\n            err.file = original.source;\n            err.line = original.line;\n            err.column = original.column;\n            throw err;\n          }\n        }\n\n        err.file = filename;  // *not* stackFilename\n        err.line = parseError.loc.line;\n        err.column = parseError.loc.column;\n\n        // adjust errors on line 1 to account for our header\n        if (err.line === 1) {\n          err.column -= header.length;\n        }\n\n        throw err;\n      }\n\n      // What? Node thought that this was a parse error and Babel didn't?\n      // Eh, just throw Node's error and don't care too much about the line\n      // numbers being right.\n      throw nodeParseError;\n    }\n\n    var func = script.runInThisContext();\n\n    return (buildmessage.markBoundary(func)).apply(null, values);\n  });\n};\n\n// - message: an error message from the parser\n// - file: filename\n// - line: 1-based\n// - column: 1-based\nfiles.FancySyntaxError = function () {};\n\nfiles.OfflineError = function (error) {\n  this.error = error;\n};\nfiles.OfflineError.prototype.toString = function () {\n  return \"[Offline: \" + this.error.toString() + \"]\";\n};\n\n// Like files.readdir, but skips entries whose names begin with dots, and\n// converts ENOENT to [].\nfiles.readdirNoDots = function (path) {\n  try {\n    var entries = files.readdir(path);\n  } catch (e) {\n    if (e.code === 'ENOENT') {\n      return [];\n    }\n    throw e;\n  }\n  return _.filter(entries, function (entry) {\n    return entry && entry[0] !== '.';\n  });\n};\n\n// Read a file in line by line. Returns an array of lines to be\n// processed individually. Throws if the file doesn't exist or if\n// anything else goes wrong.\nvar getLines = function (file) {\n  var buffer = files.readFile(file);\n  var lines = exports.splitBufferToLines(buffer);\n\n  // strip blank lines at the end\n  while (lines.length) {\n    var line = lines[lines.length - 1];\n    if (line.match(/\\S/)) {\n      break;\n    }\n    lines.pop();\n  }\n\n  return lines;\n};\n\nexports.getLines = getLines;\n\nexports.splitBufferToLines = function (buffer) {\n  return buffer.toString('utf8').split(/\\r*\\n\\r*/);\n};\n\n// Same as `getLines`, but returns [] if the file doesn't exist.\nexports.getLinesOrEmpty = function (file) {\n  try {\n    return getLines(file);\n  } catch (e) {\n    if (e && e.code === 'ENOENT') {\n      return [];\n    }\n    throw e;\n  }\n};\n\n// Returns null if the file does not exist, otherwise returns the parsed JSON in\n// the file. Throws on errors other than ENOENT (including JSON parse failure).\nexports.readJSONOrNull = function (file) {\n  try {\n    var raw = files.readFile(file, 'utf8');\n  } catch (e) {\n    if (e && e.code === 'ENOENT') {\n      return null;\n    }\n    throw e;\n  }\n  return JSON.parse(raw);\n};\n\n// Trims whitespace & other filler characters of a line in a project file.\nfiles.trimSpaceAndComments = function (line) {\n  var match = line.match(/^([^#]*)#/);\n  if (match) {\n    line = match[1];\n  }\n  return files.trimSpace(line);\n};\n\n// Trims leading and trailing whilespace in a project file.\nfiles.trimSpace = function (line) {\n  return line.replace(/^\\s+|\\s+$/g, '');\n};\n\n\nfiles.KeyValueFile = function (path) {\n  var self = this;\n  self.path = path;\n}\n\n_.extend(files.KeyValueFile.prototype, {\n  set: function (k, v) {\n    var self = this;\n\n    var data = self._readAll() || '';\n    var lines = data.split(/\\n/);\n\n    var found = false;\n    for (var i = 0; i < lines.length; i++) {\n      var trimmed = lines[i].trim();\n      if (trimmed.indexOf(k + '=') == 0) {\n        lines[i] = k + '=' + v;\n        found = true;\n      }\n    }\n    if (!found) {\n      lines.push(k + \"=\" + v);\n    }\n    var newdata = lines.join('\\n') + '\\n';\n    files.writeFile(self.path, newdata, 'utf8');\n  },\n\n  _readAll: function () {\n    var self = this;\n\n    if (files.exists(self.path)) {\n      return files.readFile(self.path, 'utf8');\n    } else {\n      return null;\n    }\n  }\n});\n\nfiles.getHomeDir = function () {\n  if (process.platform === \"win32\") {\n    return files.pathDirname(\n      files.convertToStandardPath(process.env.METEOR_INSTALLATION));\n  } else {\n    return process.env.HOME;\n  }\n};\n\nfiles.currentEnvWithPathsAdded = function (...paths) {\n  const env = {...process.env};\n\n  let pathPropertyName;\n  if (process.platform === \"win32\") {\n    // process.env allows for case insensitive access on Windows, but copying it\n    // creates a normal JavaScript object with case sensitive property access.\n    // This leads to problems, because we would be adding a PATH property instead\n    // of setting Path for instance.\n    // We want to make sure we're setting the right property, so we\n    // lookup the property name case insensitively ourselves.\n    pathPropertyName = _.find(Object.keys(env), (key) => {\n      return key.toUpperCase() === 'PATH';\n    });\n    if (!pathPropertyName) {\n      pathPropertyName = 'Path';\n    }\n  } else {\n    pathPropertyName = 'PATH';\n  }\n\n  const convertedPaths = paths.map(path => files.convertToOSPath(path));\n  let pathDecomposed = (env[pathPropertyName] || \"\").split(files.pathOsDelimiter);\n  pathDecomposed.unshift(...convertedPaths);\n\n  env[pathPropertyName] = pathDecomposed.join(files.pathOsDelimiter);\n  return env;\n}\n\n// add .bat extension to link file if not present\nvar ensureBatExtension = function (p) {\n  if (p.indexOf(\".bat\") !== p.length - 4) {\n    p = p + \".bat\";\n  }\n  return p;\n};\n\n// Windows-only, generates a bat script that calls the destination bat script\nfiles._generateScriptLinkToMeteorScript = function (scriptLocation) {\n  var scriptLocationIsAbsolutePath = scriptLocation.match(/^\\//);\n  var scriptLocationConverted = scriptLocationIsAbsolutePath\n    ? files.convertToWindowsPath(scriptLocation)\n    : \"%~dp0\\\\\" + files.convertToWindowsPath(scriptLocation);\n\n  var newScript = [\n    \"@echo off\",\n    \"SETLOCAL\",\n    \"SET METEOR_INSTALLATION=%~dp0%\",\n\n    // always convert to Windows path since this function can also be\n    // called on Linux or Mac when we are building bootstrap tarballs\n    \"\\\"\" + scriptLocationConverted + \"\\\" %*\",\n    \"ENDLOCAL\",\n\n    // always exit with the same exit code as the child script\n    \"EXIT /b %ERRORLEVEL%\",\n\n    // add a comment with the destination of the link, so it can be read later\n    // by files.readLinkToMeteorScript\n    \"rem \" + scriptLocationConverted,\n  ].join(os.EOL);\n\n  return newScript;\n};\n\nfiles._getLocationFromScriptLinkToMeteorScript = function (script) {\n  var lines = _.compact(script.toString().split('\\n'));\n\n  var scriptLocation = _.last(lines)\n    .replace(/^rem /g, '');\n  var isAbsolute = true;\n\n  if (scriptLocation.match(/^%~dp0/)) {\n    isAbsolute = false;\n    scriptLocation = scriptLocation.replace(/^%~dp0\\\\?/g, '');\n  }\n\n  if (! scriptLocation) {\n    throw new Error('Failed to parse script location from meteor.bat');\n  }\n\n  return files.convertToPosixPath(scriptLocation, ! isAbsolute);\n};\n\nfiles.linkToMeteorScript = function (scriptLocation, linkLocation, platform) {\n  platform = platform || process.platform;\n\n  if (platform === 'win32') {\n    // Make a meteor batch script that points to current tool\n\n    linkLocation = ensureBatExtension(linkLocation);\n    scriptLocation = ensureBatExtension(scriptLocation);\n    var script = files._generateScriptLinkToMeteorScript(scriptLocation);\n\n    files.writeFile(linkLocation, script, {encoding: \"ascii\"});\n  } else {\n    // Symlink meteor tool\n    files.symlinkOverSync(scriptLocation, linkLocation);\n  }\n};\n\nfiles.readLinkToMeteorScript = function (linkLocation, platform) {\n  platform = platform || process.platform;\n  if (platform === 'win32') {\n    linkLocation = ensureBatExtension(linkLocation);\n    var script = files.readFile(linkLocation);\n    return files._getLocationFromScriptLinkToMeteorScript(script);\n  } else {\n    return files.readlink(linkLocation);\n  }\n};\n\n// Summary of cross platform file system handling strategy\n\n// There are three main pain points for handling files on Windows: slashes in\n// paths, line endings in text files, and colons/invalid characters in paths.\n\n// 1. Slashes in file paths\n\n//   We have decided to store all paths inside the tool as unix-style paths in\n//   the style of CYGWIN. This means that all paths have forward slashes on all\n//   platforms, and C:\\ is converted to /c/ on Windows.\n\n//   All of the methods in files.js know how to convert from these unixy paths\n//   to whatever type of path the underlying system prefers.\n\n//   The reason we chose this strategy because it was easier to make sure to use\n//   files.js everywhere instead of node's fs than to make sure every part of\n//   the tool correctly uses system-specific path separators. In addition, there\n//   are some parts of the tool where it is very hard to tell which strings are\n//   used as URLs and which are used as file paths. In some cases, a string can\n//   be used as both, meaning it has to have forward slashes no matter what.\n\n// 2. Line endings in text files\n\n//   We have decided to convert all files read by the tool to Unix-style line\n//   endings for the same reasons as slashes above. In many parts of the tool,\n//   we assume that '\\n' is the line separator, and it can be hard to find all\n//   of the places and decide whether it is appropriate to use os.EOL. We do not\n//   convert anything on write. We will wait and see if anyone complains.\n\n// 3. Colons and other invalid characters in file paths\n\n//   This is not handled automatically by files.js. You need to be careful to\n//   escape any colons in package names, etc, before using a string as a file\n//   path.\n\n//   A helpful file to import for this purpose is colon-converter.js, which also\n//   knows how to convert various configuration file formats.\n\n// If this environment variable is set, fs.*Sync methods will always be used\n// by wrapFsFunc instead of yielding wrappers for asynchronous fs.* methods.\nconst YIELD_ALLOWED = ! process.env.METEOR_DISABLE_FS_FIBERS;\n\nfiles.fsFixPath = {};\n/**\n * Wrap a function from node's fs module to use the right slashes for this OS\n * and run in a fiber, then assign it to the \"files\" namespace. Each call\n * creates a files.func that runs asynchronously with Fibers (yielding and\n * until the call is done), unless run outside a Fiber or in noYieldsAllowed, in\n * which case it uses fs.funcSync.\n *\n * Also creates a simpler version on files.fsFixPath.* that just fixes the path\n * and fiberizes the Sync version if possible.\n *\n * @param  {String} fsFuncName         The name of the node fs function to wrap\n * @param  {Number[]} pathArgIndices Indices of arguments that have paths, these\n * arguments will be converted to the correct OS slashes\n * @param  {Object} options        Some options for lesser-used cases\n * @param {Boolean} options.noErr If true, the callback of the wrapped function\n * doesn't have a first \"error\" argument, for example in fs.exists.\n * @param {Function} options.modifyReturnValue Pass in a function to modify the\n * return value\n */\nfunction wrapFsFunc(fsFuncName, pathArgIndices, options) {\n  options = options || {};\n\n  const fsFunc = fs[fsFuncName];\n  const fsFuncSync = fs[fsFuncName + \"Sync\"];\n\n  function makeWrapper ({alwaysSync, sync}) {\n    function wrapper(...args) {\n      for (let j = pathArgIndices.length - 1; j >= 0; --j) {\n        const i = pathArgIndices[j];\n        args[i] = files.convertToOSPath(args[i]);\n      }\n\n      const canYield = YIELD_ALLOWED &&\n        Fiber.current &&\n        Fiber.yield &&\n        ! Fiber.yield.disallowed;\n\n      const shouldBeSync = alwaysSync || sync;\n      // There's some overhead in awaiting a Promise of an async call,\n      // vs just doing the sync call, which for a call like \"stat\"\n      // takes longer than the call itself.  Different parts of the tool\n      // may perform 1,000s or 10,000s of stats each under certain\n      // conditions, so we get a nice performance boost from making\n      // these calls sync.\n      const isQuickie = (fsFuncName === 'stat' ||\n                         fsFuncName === 'rename' ||\n                         fsFuncName === 'symlink');\n\n      if (canYield && shouldBeSync && !isQuickie) {\n        const promise = new Promise((resolve, reject) => {\n          args.push((err, value) => {\n            if (options.noErr) {\n              resolve(err);\n            } else if (err) {\n              reject(err);\n            } else {\n              resolve(value);\n            }\n          });\n\n          fsFunc.apply(fs, args);\n        });\n\n        const result = promise.await();\n\n        return options.modifyReturnValue\n          ? options.modifyReturnValue(result)\n          : result;\n\n      } else if (shouldBeSync) {\n        // Should be sync but can't yield: we are not in a Fiber.\n        // Run the sync version of the fs.* method.\n        const result = fsFuncSync.apply(fs, args);\n        return options.modifyReturnValue ?\n               options.modifyReturnValue(result) : result;\n\n      } else if (! sync) {\n        // wrapping a plain async version\n        let cb = args[args.length - 1];\n        if (typeof cb === \"function\") {\n          args.pop();\n        } else {\n          cb = null;\n        }\n\n        new Promise((resolve, reject) => {\n          args.push((err, res) => {\n            err ? reject(err) : resolve(res);\n          });\n          fsFunc.apply(fs, args);\n        }).then(res => {\n          if (options.modifyReturnValue) {\n            res = options.modifyReturnValue(res);\n          }\n          cb && cb(null, res);\n        }, cb);\n\n        return;\n      }\n\n      throw new Error('unexpected');\n    }\n\n    wrapper.displayName = fsFuncName;\n    return wrapper;\n  }\n\n  files[fsFuncName] = Profile('files.' + fsFuncName, makeWrapper({ alwaysSync: true }));\n\n  files.fsFixPath[fsFuncName] =\n    Profile('wrapped.fs.' + fsFuncName, makeWrapper({ sync: false }));\n  files.fsFixPath[fsFuncName + 'Sync'] =\n    Profile('wrapped.fs.' + fsFuncName + 'Sync', makeWrapper({ sync: true }));\n}\n\nwrapFsFunc(\"writeFile\", [0]);\nwrapFsFunc(\"appendFile\", [0]);\nwrapFsFunc(\"readFile\", [0], {\n  modifyReturnValue: function (fileData) {\n    if (_.isString(fileData)) {\n      return files.convertToStandardLineEndings(fileData);\n    }\n\n    return fileData;\n  }\n});\nwrapFsFunc(\"stat\", [0]);\nwrapFsFunc(\"lstat\", [0]);\nwrapFsFunc(\"rename\", [0, 1]);\n\n// After the outermost files.withCache call returns, the withCacheCache is\n// reset to null so that it does not survive server restarts.\nlet withCacheCache = null;\n\nfiles.withCache = Profile(\"files.withCache\", function (fn) {\n  const oldCache = withCacheCache;\n  withCacheCache = oldCache || Object.create(null);\n  try {\n    return fn();\n  } finally {\n    withCacheCache = oldCache;\n  }\n});\n\nfunction enableCache(name) {\n  const method = files[name];\n\n  function makeCacheKey(args) {\n    var parts = [name];\n\n    for (var i = 0; i < args.length; ++i) {\n      var arg = args[i];\n\n      if (typeof arg !== \"string\") {\n        // If any of the arguments is not a string, then we won't cache\n        // the result of the corresponding file.* method invocation.\n        return null;\n      }\n\n      parts.push(arg);\n    }\n\n    return parts.join(\"\\0\");\n  }\n\n  files[name] = function (...args) {\n    if (withCacheCache) {\n      var cacheKey = makeCacheKey(args);\n      if (cacheKey && cacheKey in withCacheCache) {\n        return withCacheCache[cacheKey];\n      }\n    }\n\n    const result = method.apply(files, args);\n\n    if (withCacheCache && cacheKey !== null) {\n      // If cacheKey === null, then we called makeCacheKey above and it\n      // failed because one of the arguments was not a string, so we\n      // should not try to call makeCacheKey again.\n      withCacheCache[cacheKey || makeCacheKey(args)] = result;\n    }\n\n    return result;\n  };\n}\n\nenableCache(\"readdir\");\nenableCache(\"realpath\");\nenableCache(\"stat\");\nenableCache(\"lstat\");\n\n// The fs.exists method is deprecated in Node v4:\n// https://nodejs.org/api/fs.html#fs_fs_exists_path_callback\nfiles.exists =\nfiles.existsSync = function (path, callback) {\n  if (typeof callback === \"function\") {\n    throw new Error(\"Passing a callback to files.exists is no longer supported\");\n  }\n  return !! files.statOrNull(path);\n};\n\nif (process.platform === \"win32\") {\n  var rename = files.rename;\n\n  files.rename = function (from, to) {\n    // retries are necessarily only on Windows, because the rename call can fail\n    // with EBUSY, which means the file is \"busy\"\n    var maxTries = 10;\n    var success = false;\n    while (! success && maxTries-- > 0) {\n      try {\n        rename(from, to);\n        success = true;\n      } catch (err) {\n        if (err.code !== 'EPERM') {\n          throw err;\n        }\n      }\n    }\n    if (! success) {\n      files.cp_r(from, to);\n      files.rm_recursive(from);\n    }\n  };\n}\n\n// Warning: doesn't convert slashes in the second 'cache' arg\nwrapFsFunc(\"realpath\", [0], {\n  modifyReturnValue: files.convertToStandardPath\n});\n\nwrapFsFunc(\"readdir\", [0], {\n  modifyReturnValue: function (entries) {\n    return _.map(entries, files.convertToStandardPath);\n  }\n});\n\nwrapFsFunc(\"rmdir\", [0]);\nwrapFsFunc(\"mkdir\", [0]);\nwrapFsFunc(\"unlink\", [0]);\nwrapFsFunc(\"chmod\", [0]);\nwrapFsFunc(\"open\", [0]);\n\n// XXX this doesn't give you the second argument to the callback\nwrapFsFunc(\"read\", []);\nwrapFsFunc(\"write\", []);\nwrapFsFunc(\"close\", []);\nwrapFsFunc(\"symlink\", [0, 1]);\nwrapFsFunc(\"readlink\", [0]);\n\n// These don't need to be Fiberized\nfiles.createReadStream = function (...args) {\n  args[0] = files.convertToOSPath(args[0]);\n  return fs.createReadStream(...args);\n};\n\nfiles.createWriteStream = function (...args) {\n  args[0] = files.convertToOSPath(args[0]);\n  return fs.createWriteStream(...args);\n};\n\nfiles.watchFile = function (...args) {\n  args[0] = files.convertToOSPath(args[0]);\n  return fs.watchFile(...args);\n};\n\nfiles.unwatchFile = function (...args) {\n  args[0] = files.convertToOSPath(args[0]);\n  return fs.unwatchFile(...args);\n};\n\nfiles.readBufferWithLengthAndOffset = function (filename, length, offset) {\n  var data = new Buffer(length);\n  // Read the data from disk, if it is non-empty. Avoid doing IO for empty\n  // files, because (a) unnecessary and (b) fs.readSync with length 0\n  // throws instead of acting like POSIX read:\n  // https://github.com/joyent/node/issues/5685\n  if (length > 0) {\n    var fd = files.open(filename, \"r\");\n    try {\n      var count = files.read(\n        fd, data, 0, length, offset);\n    } finally {\n      files.close(fd);\n    }\n    if (count !== length) {\n      throw new Error(\"couldn't read entire resource\");\n    }\n  }\n  return data;\n};\n"]}