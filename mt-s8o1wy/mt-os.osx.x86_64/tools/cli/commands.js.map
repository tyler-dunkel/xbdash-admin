{"version":3,"sources":["/tools/cli/commands.js"],"names":["main","require","_","files","deploy","buildmessage","auth","authClient","config","runLog","utils","httpHelpers","archinfo","catalog","stats","Console","projectContextModule","release","cordova","CordovaProject","CordovaRunner","iOSRunTarget","AndroidRunTarget","EXAMPLE_REPOSITORIES","DEPLOY_ARCH","DEFAULT_PORT","VALID_ARCHITECTURES","__dirnameConverted","convertToStandardPath","__dirname","qualifySitename","site","indexOf","length","substring","showInvalidArchMsg","arch","info","each","keys","va","command","options","indent","parseServerOptionsForRunCommand","runTargets","parsedServerUrl","parsePortOption","port","mobileServerOption","parsedMobileServerUrl","parseMobileServerOption","isRunOnDeviceRequested","any","runTarget","isDevice","detectMobileServerUrl","portOption","parseUrl","error","ExitWithCode","optionName","protocol","hostname","myIp","ipAddress","message","parseRunTargets","targets","map","target","targetParts","split","platform","registerCommand","name","requiresRelease","pretty","catalogRefresh","Refresh","Never","rawInfo","host","current","appDir","Error","isCheckout","gitLog","runGitInCheckout","trim","getDisplayName","inCheckout","getToolsVersion","runCommandOptions","requiresApp","maxArgs","Infinity","type","String","short","Boolean","production","settings","verbose","once","extend","doRunCommand","setVerbose","args","projectContext","ProjectContext","projectDir","allowIncompatibleUpdate","lintAppAndLocalPackages","captureAndExit","readProjectMetadata","explicit","releaseFile","fullReleaseName","console","log","displayReleaseName","appHost","appPort","appPortMatch","match","parseInt","warn","setRawLogs","webArchs","isEmpty","push","cordovaRunner","cordovaProject","settingsFile","mobileServerUrl","formatUrl","jobHasMessages","checkPlatformsForRunTargets","runAll","run","proxyPort","proxyHost","debugPort","buildOptions","minifyMode","buildMode","rootUrl","process","env","ROOT_URL","mongoUrl","MONGO_URL","oplogUrl","MONGO_OPLOG_URL","noReleaseCheck","METEOR_NO_RELEASE_CHECK","connect","convertToOSPath","getMeteorShellDirectory","WaitForExit","list","example","packageName","ShowUsage","validatePackageNameOrExit","detailedColonExplanation","fsName","packageDir","pathResolve","inYourApp","exists","transform","x","xn","replace","relString","rel","official","getDefaultReleaseVersion","version","noPrefix","cp_r","pathJoin","transformFilename","f","transformContents","contents","test","Buffer","toString","ignore","err","displayPackageDir","pathRelative","cwd","path","forced","latestKnown","SpringboardToLatestRelease","repoInfo","branchInfo","branch","repo","branchOption","appPathAsEntered","appPath","findAppDir","appName","pathBasename","nonCodeFileExts","destinationHasCodeFiles","readdir","thisPathCountsAsAFile","filePath","isHidden","stat","isDirectory","ext","pathExtname","contains","toIgnore","alwaysWritePackageMap","write","projectConstraintsFile","updateReleaseConstraints","_manifest","upgraders","finishedUpgraders","appendUpgraders","allUpgraders","prepareProjectForBuild","appNameToDisplay","appPathWithQuotesIfSpaces","url","buildCommands","minArgs","debug","directory","architecture","server","headless","buildCommand","hidden","_bundleOnly","setHeadless","has","bundleArch","serverArchitectures","uniq","packageMapDelta","displayOnConsole","serverOnly","cordovaPlatforms","platformList","getCordovaPlatforms","without","buildDir","getProjectLocalDirectory","outputPath","relative","substr","labelWarn","bundlePath","recordPackages","what","bundler","bundleResult","bundle","serverArch","errors","formatMessages","mkdir_p","outputTar","createTarball","exception","rm_recursive","enterJob","title","pluginVersions","pluginVersionsFromStarManifest","starManifest","prepareFromAppBundle","displayNameForPlatform","buildPath","platformOutputPath","prepareForPlatform","writeFile","buildForPlatform","apkPath","copyFile","requiresAppOrPackage","tempProjectDir","mkdtemp","explicitlyAddedLocalPackageDirs","packageMapFilename","forceIncludeCordovaUnibuild","lintPackageWithSourceRoot","initializeCatalog","versionRecord","localCatalog","getVersionBySourceRoot","constraint","parsePackageConstraint","removeAllPackages","addConstraints","displayName","warnings","usedMeteorAccount","findMongoPort","mongoPort","temporaryMongoUrl","maybePrintRegistrationLink","stdin","pause","runMongo","runMongoShell","isRunning","localDir","password","allowUnrecognizedOptions","rawOptions","deleteApp","loggedIn","isLoggedIn","registerOrLogIn","buildArch","deployResult","bundleAndDeploy","leadingNewline","firstTime","logs","add","transfer","remove","pick","pollForRegistrationCompletion","changeAuthorized","listAuthorized","claim","testCommandOptions","ios","android","doTestCommand","global","testCommandMetadata","intersection","Object","testRunnerAppDir","projectContextOptions","driverPackage","projectDirForLocalPackages","packagesByPath","filter","p","packagesToAdd","getTestPackageNames","excludedPackages","exclude","some","excluded","unshift","constraintsToAdd","writeIfModified","copyDirIntoTestRunnerApp","allowSymlink","parts","appDirPath","testDirPath","pathDirname","symlink","preserveSymlinks","isAppTest","isTest","projectLocalDir","platformsForRunTargets","runTestAppForPackages","packageNames","packageNamesSpecifiedExplicitly","getAllPackageNames","testPackages","getLatestVersion","testName","recordPackageUsage","disableOplog","testMetadata","banner","selenium","seleniumBrowser","omitPackageMapDeltaDisplayOnFirstRun","forceRebuildPackages","email","loginCommand","overwriteExistingToken","logoutCommand","whoAmICommand","loggedInAccountsConnectionOrPrompt","action","token","getSessionToken","getAccountsDomain","doUsernamePasswordLogin","retry","conn","loggedInAccountsConnection","getAccountsApiUrl","result","request","method","useSessionHeader","useAuthHeader","body","JSON","parse","response","statusCode","organizations","pluck","join","username","call","reason","members","changed","slow","galaxy","browserstack","history","Number","file","selftest","offline","getUrl","e","OfflineError","compileRegexp","str","RegExp","SyntaxError","testRegexp","undefined","fileRegexp","excludeRegexp","listTests","onlyChanged","includeSlowTests","galaxyOnly","clients","runTests","historyLines","listSites","json","minutes","maybeLog","string","loggedInConnection","getBuildFarmUrl","getBuildFarmDomain","handleConnectionError","ret","close","retJson","sshKey","hostKey","stringify","tmpDir","idpath","encoding","mode","hostpath","addendum","login","maybeVerbose","connOptions","printOptions","child_process","clear","sshCommand","spawn","stdio","Promise","resolve","on","code","signal","await","secs","spinner","progress","getCurrentProgressTracker","totalProgress","end","done","i","n","updateProgress","reportProgress","setTimeout","ething","required","key"],"mappings":"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","file":"tools/cli/commands.js.map","sourcesContent":["var main = require('./main.js');\nvar _ = require('underscore');\nvar files = require('../fs/files.js');\nvar deploy = require('../meteor-services/deploy.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar auth = require('../meteor-services/auth.js');\nvar authClient = require('../meteor-services/auth-client.js');\nvar config = require('../meteor-services/config.js');\nvar runLog = require('../runners/run-log.js');\nvar utils = require('../utils/utils.js');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar archinfo = require('../utils/archinfo.js');\nvar catalog = require('../packaging/catalog/catalog.js');\nvar stats = require('../meteor-services/stats.js');\nvar Console = require('../console/console.js').Console;\nvar projectContextModule = require('../project-context.js');\nvar release = require('../packaging/release.js');\n\nimport * as cordova from '../cordova';\nimport { CordovaProject } from '../cordova/project.js';\nimport { CordovaRunner } from '../cordova/runner.js';\nimport { iOSRunTarget, AndroidRunTarget } from '../cordova/run-targets.js';\n\nimport { EXAMPLE_REPOSITORIES } from './example-repositories.js';\n\n// The architecture used by MDG's hosted servers; it's the architecture used by\n// 'meteor deploy'.\nvar DEPLOY_ARCH = 'os.linux.x86_64';\n\n// The default port that the development server listens on.\nvar DEFAULT_PORT = '3000';\n\n// Valid architectures that Meteor officially supports.\nvar VALID_ARCHITECTURES = {\n  \"os.osx.x86_64\": true,\n  \"os.linux.x86_64\": true,\n  \"os.linux.x86_32\": true,\n  \"os.windows.x86_32\": true\n};\n\n\n// __dirname - the location of the current executing file\nvar __dirnameConverted = files.convertToStandardPath(__dirname);\n\n// Given a site name passed on the command line (eg, 'mysite'), return\n// a fully-qualified hostname ('mysite.meteor.com').\n//\n// This is fairly simple for now. It appends 'meteor.com' if the name\n// doesn't contain a dot, and it deletes any trailing dots (the\n// technically legal hostname 'mysite.com.' is canonicalized to\n// 'mysite.com').\n//\n// In the future, you should be able to make this default to some\n// other domain you control, rather than 'meteor.com'.\nvar qualifySitename = function (site) {\n  if (site.indexOf(\".\") === -1) {\n    site = site + \".meteor.com\";\n  }\n  while (site.length && site[site.length - 1] === \".\") {\n    site = site.substring(0, site.length - 1);\n  }\n  return site;\n};\n\n// Display a message showing valid Meteor architectures.\nvar showInvalidArchMsg = function (arch) {\n  Console.info(\"Invalid architecture: \" + arch);\n  Console.info(\"The following are valid Meteor architectures:\");\n  _.each(_.keys(VALID_ARCHITECTURES), function (va) {\n    Console.info(\n      Console.command(va),\n      Console.options({ indent: 2 }));\n  });\n};\n\n// Utility functions to parse options in run/build/test-packages commands\n\nexport function parseServerOptionsForRunCommand(options, runTargets) {\n  const parsedServerUrl = parsePortOption(options.port);\n\n  // XXX COMPAT WITH 0.9.2.2 -- the 'mobile-port' option is deprecated\n  const mobileServerOption = options['mobile-server'] || options['mobile-port'];\n  let parsedMobileServerUrl;\n  if (mobileServerOption) {\n    parsedMobileServerUrl = parseMobileServerOption(mobileServerOption);\n  } else {\n    const isRunOnDeviceRequested = _.any(runTargets,\n      runTarget => runTarget.isDevice);\n    parsedMobileServerUrl = detectMobileServerUrl(parsedServerUrl,\n      isRunOnDeviceRequested);\n  }\n\n  return { parsedServerUrl, parsedMobileServerUrl };\n}\n\nfunction parsePortOption(portOption) {\n  let parsedServerUrl = utils.parseUrl(portOption);\n\n  if (!parsedServerUrl.port) {\n    Console.error(\"--port must include a port.\");\n    throw new main.ExitWithCode(1);\n  }\n\n  return parsedServerUrl;\n}\n\nfunction parseMobileServerOption(mobileServerOption,\n  optionName = 'mobile-server') {\n  let parsedMobileServerUrl = utils.parseUrl(\n    mobileServerOption,\n    { protocol: 'http' });\n\n  if (!parsedMobileServerUrl.hostname) {\n    Console.error(`--${optionName} must include a hostname.`);\n    throw new main.ExitWithCode(1);\n  }\n\n  return parsedMobileServerUrl;\n}\n\nfunction detectMobileServerUrl(parsedServerUrl, isRunOnDeviceRequested) {\n  // Always try to use an auto-detected IP first\n  try {\n    const myIp = utils.ipAddress();\n    return {\n      protocol: 'http',\n      hostname: myIp,\n      port: parsedServerUrl.port\n    };\n  } catch (error) {\n    // Unless we are being asked to run on a device, use localhost as fallback\n    if (isRunOnDeviceRequested) {\n      Console.error(\n`Error detecting IP address for mobile app to connect to:\n${error.message}\nPlease specify the address that the mobile app should connect\nto with --mobile-server.`);\n      throw new main.ExitWithCode(1);\n    } else {\n      return {\n        protocol: 'http',\n        hostname: 'localhost',\n        port: parsedServerUrl.port\n      };\n    }\n  }\n}\n\nexport function parseRunTargets(targets) {\n  return targets.map((target) => {\n    const targetParts = target.split('-');\n    const platform = targetParts[0];\n    const isDevice = targetParts[1] === 'device';\n\n    if (platform == 'ios') {\n      return new iOSRunTarget(isDevice);\n    } else if (platform == 'android') {\n      return new AndroidRunTarget(isDevice);\n    } else {\n      Console.error(`Unknown run target: ${target}`);\n      throw new main.ExitWithCode(1);\n    }\n  });\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// options that act like commands\n///////////////////////////////////////////////////////////////////////////////\n\n// Prints the Meteor architecture name of this host\nmain.registerCommand({\n  name: '--arch',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.rawInfo(archinfo.host() + \"\\n\");\n});\n\n// Prints the current release in use. Note that if there is not\n// actually a specific release, we print to stderr and exit non-zero,\n// while if there is a release we print to stdout and exit zero\n// (making this useful to scripts).\n// XXX: What does this mean in our new release-free world?\nmain.registerCommand({\n  name: '--version',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (release.current === null) {\n    if (! options.appDir) {\n      throw new Error(\"missing release, but not in an app?\");\n    }\n    Console.error(\n      \"This project was created with a checkout of Meteor, rather than an \" +\n      \"official release, and doesn't have a release number associated with \" +\n      \"it. You can set its release with \" +\n      Console.command(\"'meteor update'\") + \".\");\n    return 1;\n  }\n\n  if (release.current.isCheckout()) {\n    var gitLog = utils.runGitInCheckout(\n      'log',\n      '--format=%h%d', '-n 1').trim();\n    Console.error(\"Unreleased, running from a checkout at \" + gitLog);\n    return 1;\n  }\n\n  Console.info(release.current.getDisplayName());\n});\n\n// Internal use only. For automated testing.\nmain.registerCommand({\n  name: '--long-version',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (files.inCheckout()) {\n    Console.error(\"checkout\");\n    return 1;\n  } else if (release.current === null) {\n    // .meteor/release says \"none\" but not in a checkout.\n    Console.error(\"none\");\n    return 1;\n  } else {\n    Console.rawInfo(release.current.name + \"\\n\");\n    Console.rawInfo(files.getToolsVersion() + \"\\n\");\n    return 0;\n  }\n});\n\n// Internal use only. For automated testing.\nmain.registerCommand({\n  name: '--requires-release',\n  requiresRelease: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// run\n///////////////////////////////////////////////////////////////////////////////\n\nvar runCommandOptions = {\n  requiresApp: true,\n  maxArgs: Infinity,\n  options: {\n    port: { type: String, short: \"p\", default: DEFAULT_PORT },\n    'mobile-server': { type: String },\n    // XXX COMPAT WITH 0.9.2.2\n    'mobile-port': { type: String },\n    'app-port': { type: String },\n    'debug-port': { type: String },\n    'no-release-check': { type: Boolean },\n    production: { type: Boolean },\n    'raw-logs': { type: Boolean },\n    settings: { type: String, short: \"s\" },\n    verbose: { type: Boolean, short: \"v\" },\n    // With --once, meteor does not re-run the project if it crashes\n    // and does not monitor for file changes. Intentionally\n    // undocumented: intended for automated testing (eg, cli-test.sh),\n    // not end-user use. #Once\n    once: { type: Boolean },\n    // Don't run linter on rebuilds\n    'no-lint': { type: Boolean },\n    // Allow the version solver to make breaking changes to the versions\n    // of top-level dependencies.\n    'allow-incompatible-update': { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n};\n\nmain.registerCommand(_.extend(\n  { name: 'run' },\n  runCommandOptions\n), doRunCommand);\n\nfunction doRunCommand(options) {\n  Console.setVerbose(!!options.verbose);\n\n  // Additional args are interpreted as run targets\n  const runTargets = parseRunTargets(options.args);\n\n  const { parsedServerUrl, parsedMobileServerUrl } =\n    parseServerOptionsForRunCommand(options, runTargets);\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    allowIncompatibleUpdate: options['allow-incompatible-update'],\n    lintAppAndLocalPackages: !options['no-lint']\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    // We're just reading metadata here --- we'll wait to do the full build\n    // preparation until after we've started listening on the proxy, etc.\n    projectContext.readProjectMetadata();\n  });\n\n  if (release.explicit) {\n    if (release.current.name !== projectContext.releaseFile.fullReleaseName) {\n      console.log(\"=> Using %s as requested (overriding %s)\",\n                  release.current.getDisplayName(),\n                  projectContext.releaseFile.displayReleaseName);\n      console.log();\n    }\n  }\n\n  let appHost, appPort;\n  if (options['app-port']) {\n    var appPortMatch = options['app-port'].match(/^(?:(.+):)?([0-9]+)?$/);\n    if (!appPortMatch) {\n      Console.error(\n        \"run: --app-port must be a number or be of the form 'host:port' \",\n        \"where port is a number. Try\",\n        Console.command(\"'meteor help run'\") + \" for help.\");\n      return 1;\n    }\n    appHost = appPortMatch[1] || null;\n    // It's legit to specify `--app-port host:` and still let the port be\n    // randomized.\n    appPort = appPortMatch[2] ? parseInt(appPortMatch[2]) : null;\n  }\n\n  if (options.production) {\n    Console.warn(\n      \"Warning: The --production flag should only be used to simulate production \" +\n      \"bundling for testing purposes. Use meteor build to create a bundle for \" + \n      \"production deployment. See: https://guide.meteor.com/deployment.html\"\n    );\n  }\n\n  if (options['raw-logs']) {\n    runLog.setRawLogs(true);\n  }\n\n  let webArchs = ['web.browser'];\n  if (!_.isEmpty(runTargets) || options['mobile-server']) {\n    webArchs.push(\"web.cordova\");\n  }\n\n  let cordovaRunner;\n  if (!_.isEmpty(runTargets)) {\n    main.captureAndExit('', 'preparing Cordova project', () => {\n      const cordovaProject = new CordovaProject(projectContext, {\n        settingsFile: options.settings,\n        mobileServerUrl: utils.formatUrl(parsedMobileServerUrl) });\n      if (buildmessage.jobHasMessages()) return;\n\n      cordovaRunner = new CordovaRunner(cordovaProject, runTargets);\n      cordovaRunner.checkPlatformsForRunTargets();\n    });\n  }\n\n  var runAll = require('../runners/run-all.js');\n  return runAll.run({\n    projectContext: projectContext,\n    proxyPort: parsedServerUrl.port,\n    proxyHost: parsedServerUrl.hostname,\n    appPort: appPort,\n    appHost: appHost,\n    debugPort: options['debug-port'],\n    settingsFile: options.settings,\n    buildOptions: {\n      minifyMode: options.production ? 'production' : 'development',\n      buildMode: options.production && 'production',\n      webArchs: webArchs\n    },\n    rootUrl: process.env.ROOT_URL,\n    mongoUrl: process.env.MONGO_URL,\n    oplogUrl: process.env.MONGO_OPLOG_URL,\n    mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n    once: options.once,\n    noReleaseCheck: options['no-release-check'] || process.env.METEOR_NO_RELEASE_CHECK,\n    cordovaRunner: cordovaRunner\n  });\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// debug\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand(_.extend(\n  { name: 'debug' },\n  runCommandOptions\n), function (options) {\n  options['debug-port'] = options['debug-port'] || '5858';\n  return doRunCommand(options);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// shell\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'shell',\n  requiresRelease: false,\n  requiresApp: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (!options.appDir) {\n    Console.error(\n      \"The \" + Console.command(\"'meteor shell'\") + \" command must be run\",\n      \"in a Meteor app directory.\"\n    );\n  } else {\n    var projectContext = new projectContextModule.ProjectContext({\n      projectDir: options.appDir\n    });\n\n    // Convert to OS path here because shell/server.js doesn't know how to\n    // convert paths, since it exists in the app and in the tool.\n    require('../shell-client.js').connect(\n      files.convertToOSPath(projectContext.getMeteorShellDirectory())\n    );\n\n    throw new main.WaitForExit;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// create\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'create',\n  maxArgs: 1,\n  options: {\n    list: { type: Boolean },\n    example: { type: String },\n    package: { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  // Creating a package is much easier than creating an app, so if that's what\n  // we are doing, do that first. (For example, we don't springboard to the\n  // latest release to create a package if we are inside an app)\n  if (options.package) {\n    var packageName = options.args[0];\n\n    if (options.list || options.example) {\n      Console.error(\"No package examples exist at this time.\");\n      Console.error();\n      throw new main.ShowUsage;\n    }\n\n    if (!packageName) {\n      Console.error(\"Please specify the name of the package.\");\n      throw new main.ShowUsage;\n    }\n\n    utils.validatePackageNameOrExit(\n      packageName, {detailedColonExplanation: true});\n\n    // When we create a package, avoid introducing a colon into the file system\n    // by naming the directory after the package name without the prefix.\n    var fsName = packageName;\n    if (packageName.indexOf(\":\") !== -1) {\n      var split = packageName.split(\":\");\n\n      if (split.length > 2) {\n        // It may seem like this check should be inside package version parser's\n        // validatePackageName, but we decided to name test packages like this:\n        // local-test:prefix:name, so we have to support building packages\n        // with at least two colons. Therefore we will at least try to\n        // discourage people from putting a ton of colons in their package names\n        // here.\n        Console.error(packageName +\n          \": Package names may not have more than one colon.\");\n        return 1;\n      }\n\n      fsName = split[1];\n    }\n\n    var packageDir;\n    if (options.appDir) {\n      packageDir = files.pathResolve(options.appDir, 'packages', fsName);\n    } else {\n      packageDir = files.pathResolve(fsName);\n    }\n\n    var inYourApp = options.appDir ? \" in your app\" : \"\";\n\n    if (files.exists(packageDir)) {\n      Console.error(packageName + \": Already exists\" + inYourApp);\n      return 1;\n    }\n\n    var transform = function (x) {\n      var xn =\n        x.replace(/~name~/g, packageName).replace(/~fs-name~/g, fsName);\n\n      // If we are running from checkout, comment out the line sourcing packages\n      // from a release, with the latest release filled in (in case they do want\n      // to publish later). If we are NOT running from checkout, fill it out\n      // with the current release.\n      var relString;\n      if (release.current.isCheckout()) {\n        xn = xn.replace(/~cc~/g, \"//\");\n        var rel = catalog.official.getDefaultReleaseVersion();\n        // the no-release case should never happen except in tests.\n        relString = rel ? rel.version : \"no-release\";\n      } else {\n        xn = xn.replace(/~cc~/g, \"\");\n        relString = release.current.getDisplayName({noPrefix: true});\n      }\n\n      // If we are not in checkout, write the current release here.\n      return xn.replace(/~release~/g, relString);\n    };\n\n    try {\n      files.cp_r(files.pathJoin(__dirnameConverted, '..', 'static-assets', 'skel-pack'), packageDir, {\n        transformFilename: function (f) {\n          return transform(f);\n        },\n        transformContents: function (contents, f) {\n          if ((/(\\.html|\\.js|\\.css)/).test(f)) {\n            return new Buffer(transform(contents.toString()));\n          } else {\n            return contents;\n          }\n        },\n        ignore: [/^local$/]\n      });\n    } catch (err) {\n      Console.error(\"Could not create package: \" + err.message);\n      return 1;\n    }\n\n    var displayPackageDir =\n      files.convertToOSPath(files.pathRelative(files.cwd(), packageDir));\n\n    // Since the directory can't have colons, the directory name will often not\n    // match the name of the package exactly, therefore we should tell people\n    // where it was created.\n    Console.info(\n      packageName + \": created in\",\n      Console.path(displayPackageDir)\n    );\n\n    return 0;\n  }\n\n  // Suppose you have an app A, and from some directory inside that\n  // app, you run 'meteor create /my/new/app'. The new app should use\n  // the latest available Meteor release, not the release that A\n  // uses. So if we were run from inside an app directory, and the\n  // user didn't force a release with --release, we need to\n  // springboard to the correct release and tools version.\n  //\n  // (In particular, it's not sufficient to create the new app with\n  // this version of the tools, and then stamp on the correct release\n  // at the end.)\n  if (! release.current.isCheckout() && !release.forced) {\n    if (release.current.name !== release.latestKnown()) {\n      throw new main.SpringboardToLatestRelease;\n    }\n  }\n\n  if (options.list) {\n    Console.info(\"Available examples:\");\n    _.each(EXAMPLE_REPOSITORIES, function (repoInfo, name) {\n      const branchInfo = repoInfo.branch ? `#${repoInfo.branch}` : '';\n      Console.info(\n        Console.command(`${name}: ${repoInfo.repo}${branchInfo}`),\n        Console.options({ indent: 2 }));\n    });\n\n    Console.info();\n    Console.info(\"To create an example, simply\", Console.command(\"git clone\"),\n      \"the relevant repository and branch (run\", \n      Console.command(\"'meteor create --example <name>'\"),\n      \" to see the full command).\");\n    return 0;\n  };\n\n  if (options.example) {\n    const repoInfo = EXAMPLE_REPOSITORIES[options.example];\n    if (!repoInfo) {\n      Console.error(`${options.example}: no such example.`);\n      Console.error(\n        \"List available applications with\",\n        Console.command(\"'meteor create --list'\") + \".\");\n      return 1;\n    }\n\n    const branchOption = repoInfo.branch ? ` -b ${repoInfo.branch}` : '';\n    const path = options.args.length === 1 ? ` ${options.args[0]}` : '';\n\n    Console.info(`To create the ${options.example} example, please run:`)\n    Console.info(\n      Console.command(`git clone ${repoInfo.repo}${branchOption}${path}`),\n      Console.options({ indent: 2 }));\n\n    return 0;\n  }\n\n  var appPathAsEntered;\n  if (options.args.length === 1) {\n    appPathAsEntered = options.args[0];\n  } else {\n    throw new main.ShowUsage;\n  }\n  var appPath = files.pathResolve(appPathAsEntered);\n\n  if (files.findAppDir(appPath)) {\n    Console.error(\n      \"You can't create a Meteor project inside another Meteor project.\");\n    return 1;\n  }\n\n  var appName;\n  if (appPathAsEntered === \".\" || appPathAsEntered === \"./\") {\n    // If trying to create in current directory\n    appName = files.pathBasename(files.cwd());\n  } else {\n    appName = files.pathBasename(appPath);\n  }\n\n\n  var transform = function (x) {\n    return x.replace(/~name~/g, appName);\n  };\n\n  // These file extensions are usually metadata, not app code\n  var nonCodeFileExts = ['.txt', '.md', '.json', '.sh'];\n\n  var destinationHasCodeFiles = false;\n\n  // If the directory doesn't exist, it clearly doesn't have any source code\n  // inside itself\n  if (files.exists(appPath)) {\n    destinationHasCodeFiles = _.any(files.readdir(appPath),\n        function thisPathCountsAsAFile(filePath) {\n      // We don't mind if there are hidden files or directories (this includes\n      // .git) and we don't need to check for .meteor here because the command\n      // will fail earlier\n      var isHidden = /^\\./.test(filePath);\n      if (isHidden) {\n        // Not code\n        return false;\n      }\n\n      // We do mind if there are non-hidden directories, because we don't want\n      // to recursively check everything to do some crazy heuristic to see if\n      // we should try to creat an app.\n      var stats = files.stat(filePath);\n      if (stats.isDirectory()) {\n        // Could contain code\n        return true;\n      }\n\n      // Check against our file extension white list\n      var ext = files.pathExtname(filePath);\n      if (ext == '' || _.contains(nonCodeFileExts, ext)) {\n        return false;\n      }\n\n      // Everything not matched above is considered to be possible source code\n      return true;\n    });\n  }\n\n  var toIgnore = [/^local$/, /^\\.id$/]\n  if (destinationHasCodeFiles) {\n    // If there is already source code in the directory, don't copy our\n    // skeleton app code over it. Just create the .meteor folder and metadata\n    toIgnore.push(/(\\.html|\\.js|\\.css)/)\n  }\n\n  files.cp_r(files.pathJoin(__dirnameConverted, '..', 'static-assets', 'skel'), appPath, {\n    transformFilename: function (f) {\n      return transform(f);\n    },\n    transformContents: function (contents, f) {\n      if ((/(\\.html|\\.js|\\.css)/).test(f)) {\n        return new Buffer(transform(contents.toString()));\n      } else {\n        return contents;\n      }\n    },\n    ignore: toIgnore\n  });\n\n  // We are actually working with a new meteor project at this point, so\n  // set up its context.\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: appPath,\n    // Write .meteor/versions even if --release is specified.\n    alwaysWritePackageMap: true,\n    // examples come with a .meteor/versions file, but we shouldn't take it\n    // too seriously\n    allowIncompatibleUpdate: true\n  });\n\n  main.captureAndExit(\"=> Errors while creating your project\", function () {\n    projectContext.readProjectMetadata();\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    projectContext.releaseFile.write(\n      release.current.isCheckout() ? \"none\" : release.current.name);\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Also, write package version constraints from the current release\n    // If we are on a checkout, we don't need to do this as running from\n    // checkout still pins all package versions and if the user updates\n    // to a real release, the packages file will subsequently get updated\n    if (!release.current.isCheckout()) {\n      projectContext.projectConstraintsFile\n        .updateReleaseConstraints(release.current._manifest);\n    }\n\n    // Any upgrader that is in this version of Meteor doesn't need to be run on\n    // this project.\n    var upgraders = require('../upgraders.js');\n    projectContext.finishedUpgraders.appendUpgraders(upgraders.allUpgraders());\n\n    projectContext.prepareProjectForBuild();\n  });\n  // No need to display the PackageMapDelta here, since it would include all of\n  // the packages (or maybe an unpredictable subset based on what happens to be\n  // in the template's versions file).\n\n  var appNameToDisplay = appPathAsEntered === \".\" ?\n    \"current directory\" : `'${appPathAsEntered}'`;\n\n  var message = `Created a new Meteor app in ${appNameToDisplay}`;\n\n  message += \".\";\n\n  Console.info(message + \"\\n\");\n\n  // Print a nice message telling people we created their new app, and what to\n  // do next.\n  Console.info(\"To run your new app:\");\n\n  if (appPathAsEntered !== \".\") {\n    // Wrap the app path in quotes if it contains spaces\n    const appPathWithQuotesIfSpaces = appPathAsEntered.indexOf(' ') === -1 ?\n      appPathAsEntered :\n      `'${appPathAsEntered}'`;\n\n    // Don't tell people to 'cd .'\n    Console.info(\n      Console.command(\"cd \" + appPathWithQuotesIfSpaces),\n        Console.options({ indent: 2 }));\n  }\n\n  Console.info(\n    Console.command(\"meteor\"), Console.options({ indent: 2 }));\n\n  Console.info(\"\");\n  Console.info(\"If you are new to Meteor, try some of the learning resources here:\");\n  Console.info(\n    Console.url(\"https://www.meteor.com/learn\"),\n      Console.options({ indent: 2 }));\n\n  Console.info(\"\");\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// build\n///////////////////////////////////////////////////////////////////////////////\n\nvar buildCommands = {\n  minArgs: 1,\n  maxArgs: 1,\n  requiresApp: true,\n  options: {\n    debug: { type: Boolean },\n    directory: { type: Boolean },\n    architecture: { type: String },\n    \"server-only\": { type: Boolean },\n    'mobile-settings': { type: String },\n    server: { type: String },\n    // XXX COMPAT WITH 0.9.2.2\n    \"mobile-port\": { type: String },\n    // Indicates whether these build is running headless, e.g. in a\n    // continuous integration building environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    'allow-incompatible-update': { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n};\n\nmain.registerCommand(_.extend({ name: 'build' }, buildCommands),\n  function (options) {\n    return buildCommand(options);\n});\n\n// Deprecated -- identical functionality to 'build' with one exception: it\n// doesn't output a directory with all builds but rather only one tarball with\n// server/client programs.\n// XXX COMPAT WITH 0.9.1.1\nmain.registerCommand(_.extend({ name: 'bundle', hidden: true\n                              }, buildCommands),\n    function (options) {\n\n      Console.error(\n      \"This command has been deprecated in favor of \" +\n      Console.command(\"'meteor build'\") + \", which allows you to \" +\n      \"build for multiple platforms and outputs a directory instead of \" +\n      \"a single tarball. See \" + Console.command(\"'meteor help build'\") + \" \" +\n      \"for more information.\");\n      Console.error();\n      return buildCommand(_.extend(options, { _bundleOnly: true }));\n});\n\nvar buildCommand = function (options) {\n  Console.setVerbose(!!options.verbose);\n  if (options.headless) {\n    // There's no point in spinning the spinner when we're running\n    // automated builds.\n    Console.setHeadless(true);\n  }\n  // XXX output, to stderr, the name of the file written to (for human\n  // comfort, especially since we might change the name)\n\n  // XXX name the root directory in the bundle based on the basename\n  // of the file, not a constant 'bundle' (a bit obnoxious for\n  // machines, but worth it for humans)\n\n  // Error handling for options.architecture. We must pass in only one of three\n  // architectures. See archinfo.js for more information on what the\n  // architectures are, what they mean, et cetera.\n  if (options.architecture &&\n      !_.has(VALID_ARCHITECTURES, options.architecture)) {\n    showInvalidArchMsg(options.architecture);\n    return 1;\n  }\n  var bundleArch = options.architecture || archinfo.host();\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    serverArchitectures: _.uniq([bundleArch, archinfo.host()]),\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  // _bundleOnly implies serverOnly\n  const serverOnly = options._bundleOnly || !!options['server-only'];\n\n  // options['mobile-settings'] is used to set the initial value of\n  // `Meteor.settings` on mobile apps. Pass it on to options.settings,\n  // which is used in this command.\n  if (options['mobile-settings']) {\n    options.settings = options['mobile-settings'];\n  }\n\n  const appName = files.pathBasename(options.appDir);\n\n  let cordovaPlatforms;\n  let parsedMobileServerUrl;\n  if (!serverOnly) {\n    cordovaPlatforms = projectContext.platformList.getCordovaPlatforms();\n\n    if (process.platform !== 'darwin' && _.contains(cordovaPlatforms, 'ios')) {\n      cordovaPlatforms = _.without(cordovaPlatforms, 'ios');\n      Console.warn(\"Currently, it is only possible to build iOS apps \\\non an OS X system.\");\n    }\n\n    if (!_.isEmpty(cordovaPlatforms)) {\n      // XXX COMPAT WITH 0.9.2.2 -- the --mobile-port option is deprecated\n      const mobileServerOption = options.server || options[\"mobile-port\"];\n      if (!mobileServerOption) {\n        // For Cordova builds, require '--server'.\n        // XXX better error message?\n        Console.error(\n          \"Supply the server hostname and port in the --server option \" +\n            \"for mobile app builds.\");\n        return 1;\n      }\n      parsedMobileServerUrl = parseMobileServerOption(mobileServerOption,\n        'server');\n    }\n  } else {\n    cordovaPlatforms = [];\n  }\n\n  var buildDir = projectContext.getProjectLocalDirectory('build_tar');\n  var outputPath = files.pathResolve(options.args[0]); // get absolute path\n\n  // Warn if people try to build inside the app directory.\n  var relative = files.pathRelative(options.appDir, outputPath);\n  // We would like the output path to be outside the app directory, which\n  // means the first step to getting there is going up a level.\n  if (relative.substr(0, 2) !== '..') {\n    Console.warn();\n    Console.labelWarn(`The output directory is under your source tree.\nYour generated files may get interpreted as source code!\nConsider building into a different directory instead\n${Console.command(\"meteor build ../output\")}`,\n      Console.options({ indent: 2 }));\n    Console.warn();\n  }\n\n  var bundlePath = options.directory ?\n      (options._bundleOnly ? outputPath :\n      files.pathJoin(outputPath, 'bundle')) :\n      files.pathJoin(buildDir, 'bundle');\n\n  stats.recordPackages({\n    what: \"sdk.bundle\",\n    projectContext: projectContext\n  });\n\n  var bundler = require('../isobuild/bundler.js');\n  var bundleResult = bundler.bundle({\n    projectContext: projectContext,\n    outputPath: bundlePath,\n    buildOptions: {\n      minifyMode: options.debug ? 'development' : 'production',\n      // XXX is this a good idea, or should linux be the default since\n      //     that's where most people are deploying\n      //     default?  i guess the problem with using DEPLOY_ARCH as default\n      //     is then 'meteor bundle' with no args fails if you have any local\n      //     packages with binary npm dependencies\n      serverArch: bundleArch,\n      buildMode: options.debug ? 'development' : 'production',\n    },\n  });\n  if (bundleResult.errors) {\n    Console.error(\"Errors prevented bundling:\");\n    Console.error(bundleResult.errors.formatMessages());\n    return 1;\n  }\n\n  if (!options._bundleOnly) {\n    files.mkdir_p(outputPath);\n  }\n\n  if (!options.directory) {\n    main.captureAndExit('', 'creating server tarball', () => {\n      try {\n        var outputTar = options._bundleOnly ? outputPath :\n          files.pathJoin(outputPath, appName + '.tar.gz');\n\n        files.createTarball(files.pathJoin(buildDir, 'bundle'), outputTar);\n      } catch (err) {\n        buildmessage.exception(err);\n        files.rm_recursive(buildDir);\n      }\n    });\n  }\n\n  if (!_.isEmpty(cordovaPlatforms)) {\n    let cordovaProject;\n\n    main.captureAndExit('', () => {\n      buildmessage.enterJob({ title: \"preparing Cordova project\" }, () => {\n        cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl) });\n        if (buildmessage.jobHasMessages()) return;\n\n        const pluginVersions = cordova.pluginVersionsFromStarManifest(\n          bundleResult.starManifest);\n\n        cordovaProject.prepareFromAppBundle(bundlePath, pluginVersions);\n      });\n\n      for (platform of cordovaPlatforms) {\n        buildmessage.enterJob(\n          { title: `building Cordova app for \\\n${cordova.displayNameForPlatform(platform)}` }, () => {\n            let buildOptions = { release: !options.debug };\n            \n            const buildPath = files.pathJoin(\n              projectContext.getProjectLocalDirectory('cordova-build'),\n              'platforms', platform);\n            const platformOutputPath = files.pathJoin(outputPath, platform);\n\n            files.cp_r(buildPath,\n              files.pathJoin(platformOutputPath, 'project'));\n\n            if (platform === 'ios') {\n              cordovaProject.prepareForPlatform(platform, buildOptions);\n\n              files.writeFile(\n                files.pathJoin(platformOutputPath, 'README'),\n`This is an auto-generated XCode project for your iOS application.\n\nInstructions for publishing your iOS app to App Store can be found at:\nhttps://github.com/meteor/meteor/wiki/How-to-submit-your-iOS-app-to-App-Store\n`, \"utf8\");\n            } else if (platform === 'android') {\n              cordovaProject.buildForPlatform(platform, buildOptions);\n\n              const apkPath = files.pathJoin(buildPath, 'build/outputs/apk',\n                options.debug ? 'android-debug.apk' : 'android-release-unsigned.apk')\n\n              if (files.exists(apkPath)) {\n              files.copyFile(apkPath, files.pathJoin(platformOutputPath,\n                options.debug ? 'debug.apk' : 'release-unsigned.apk'));\n              }\n\n              files.writeFile(\n                files.pathJoin(platformOutputPath, 'README'),\n`This is an auto-generated Gradle project for your Android application.\n\nInstructions for publishing your Android app to Play Store can be found at:\nhttps://github.com/meteor/meteor/wiki/How-to-submit-your-Android-app-to-Play-Store\n`, \"utf8\");\n            }\n        });\n      }\n    });\n  }\n\n  files.rm_recursive(buildDir);\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// lint\n///////////////////////////////////////////////////////////////////////////////\nmain.registerCommand({\n  name: 'lint',\n  maxArgs: 0,\n  requiresAppOrPackage: true,\n  options: {\n    'allow-incompatible-updates': { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  const {packageDir, appDir} = options;\n\n  let projectContext = null;\n\n  // if the goal is to lint the package, don't include the whole app\n  if (packageDir) {\n    // similar to `meteor publish`, create a fake project\n    const tempProjectDir = files.mkdtemp('meteor-package-build');\n    projectContext = new projectContextModule.ProjectContext({\n      projectDir: tempProjectDir,\n      explicitlyAddedLocalPackageDirs: [packageDir],\n      packageMapFilename: files.pathJoin(packageDir, '.versions'),\n      alwaysWritePackageMap: true,\n      forceIncludeCordovaUnibuild: true,\n      allowIncompatibleUpdate: options['allow-incompatible-update'],\n      lintPackageWithSourceRoot: packageDir\n    });\n\n    main.captureAndExit(\"=> Errors while setting up package:\", () =>\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog()\n    );\n    const versionRecord =\n        projectContext.localCatalog.getVersionBySourceRoot(packageDir);\n    if (! versionRecord) {\n      throw Error(\"explicitly added local package dir missing?\");\n    }\n    const packageName = versionRecord.packageName;\n    const constraint = utils.parsePackageConstraint(packageName);\n    projectContext.projectConstraintsFile.removeAllPackages();\n    projectContext.projectConstraintsFile.addConstraints([constraint]);\n  }\n\n  // linting the app\n  if (! projectContext && appDir) {\n    projectContext = new projectContextModule.ProjectContext({\n      projectDir: appDir,\n      serverArchitectures: [archinfo.host()],\n      allowIncompatibleUpdate: options['allow-incompatible-update'],\n      lintAppAndLocalPackages: true\n    });\n  }\n\n\n  main.captureAndExit(\"=> Errors prevented the build:\", () => {\n    projectContext.prepareProjectForBuild();\n  });\n\n  const bundlePath = projectContext.getProjectLocalDirectory('build');\n  const bundler = require('../isobuild/bundler.js');\n  const bundle = bundler.bundle({\n    projectContext: projectContext,\n    outputPath: null,\n    buildOptions: {\n      minifyMode: 'development'\n    }\n  });\n\n  const displayName = options.packageDir ? 'package' : 'app';\n  if (bundle.errors) {\n    Console.error(\n      `=> Errors building your ${displayName}:\\n\\n${bundle.errors.formatMessages()}`\n    );\n    throw new main.ExitWithCode(2);\n  }\n\n  if (bundle.warnings) {\n    Console.warn(bundle.warnings.formatMessages());\n    return 1;\n  }\n\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// mongo\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'mongo',\n  maxArgs: 1,\n  options: {\n    url: { type: Boolean, short: 'U' }\n  },\n  requiresApp: function (options) {\n    return options.args.length === 0;\n  },\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var mongoUrl;\n  var usedMeteorAccount = false;\n\n  if (options.args.length === 0) {\n    // localhost mode\n    var findMongoPort =\n      require('../runners/run-mongo.js').findMongoPort;\n    var mongoPort = findMongoPort(files.pathJoin(options.appDir, \".meteor\", \"local\", \"db\"));\n\n    // XXX detect the case where Meteor is running, but MONGO_URL was\n    // specified?\n\n    if (! mongoPort) {\n      Console.info(\"mongo: Meteor isn't running a local MongoDB server.\");\n      Console.info();\n      Console.info(`\\\nThis command only works while Meteor is running your application locally. \\\nStart your application first with 'meteor' and then run this command in a new \\\nterminal. This error will also occur if you asked Meteor to use a different \\\nMongoDB server with $MONGO_URL when you ran your application.`);\n      Console.info();\n      Console.info(`\\\nIf you're trying to connect to the database of an app you deployed with \\\n${Console.command(\"'meteor deploy'\")}, specify your site's name as an argument \\\nto this command.`);\n      return 1;\n    }\n    mongoUrl = \"mongodb://127.0.0.1:\" + mongoPort + \"/meteor\";\n\n  } else {\n    // remote mode\n    var site = qualifySitename(options.args[0]);\n\n    mongoUrl = deploy.temporaryMongoUrl(site);\n    usedMeteorAccount = true;\n\n    if (! mongoUrl) {\n      // temporaryMongoUrl() will have printed an error message\n      return 1;\n    }\n  }\n  if (options.url) {\n    console.log(mongoUrl);\n  } else {\n    if (usedMeteorAccount) {\n      auth.maybePrintRegistrationLink();\n    }\n    process.stdin.pause();\n    var runMongo = require('../runners/run-mongo.js');\n    runMongo.runMongoShell(mongoUrl);\n    throw new main.WaitForExit;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// reset\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'reset',\n  // Doesn't actually take an argument, but we want to print an custom\n  // error message if they try to pass one.\n  maxArgs: 1,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (options.args.length !== 0) {\n    Console.error(\"meteor reset only affects the locally stored database.\");\n    Console.error();\n    Console.error(\"To reset a deployed application use\");\n    Console.error(\n      Console.command(\"meteor deploy --delete appname\"), Console.options({ indent: 2 }));\n    Console.error(\"followed by\");\n    Console.error(\n      Console.command(\"meteor deploy appname\"), Console.options({ indent: 2 }));\n    return 1;\n  }\n  \n  if (process.env.MONGO_URL) {\n    Console.info(\"As a precaution, meteor reset only clears the local database that is \" +\n                 \"provided by meteor run for development. The database specified with \" +\n                 \"MONGO_URL will NOT be reset.\");\n  }\n\n  // XXX detect the case where Meteor is running the app, but\n  // MONGO_URL was set, so we don't see a Mongo process\n  var findMongoPort = require('../runners/run-mongo.js').findMongoPort;\n  var isRunning = !! findMongoPort(files.pathJoin(options.appDir, \".meteor\", \"local\", \"db\"));\n  if (isRunning) {\n    Console.error(\"reset: Meteor is running.\");\n    Console.error();\n    Console.error(\n      \"This command does not work while Meteor is running your application.\",\n      \"Exit the running Meteor development server.\");\n    return 1;\n  }\n\n  var localDir = files.pathJoin(options.appDir, '.meteor', 'local');\n  files.rm_recursive(localDir);\n\n  Console.info(\"Project reset.\");\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// deploy\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'deploy',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    'delete': { type: Boolean, short: 'D' },\n    debug: { type: Boolean },\n    settings: { type: String, short: 's' },\n    // No longer supported, but we still parse it out so that we can\n    // print a custom error message.\n    password: { type: String },\n    // Override architecture to deploy whatever stuff we have locally, even if\n    // it contains binary packages that should be incompatible. A hack to allow\n    // people to deploy from checkout or do other weird shit. We are not\n    // responsible for the consequences.\n    'override-architecture-with-local' : { type: Boolean },\n    'allow-incompatible-update': { type: Boolean }\n  },\n  allowUnrecognizedOptions: true,\n  requiresApp: function (options) {\n    return ! options.delete;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options, {rawOptions}) {\n  var site = options.args[0];\n\n  if (options.delete) {\n    return deploy.deleteApp(site);\n  }\n\n  if (options.password) {\n    Console.error(\n      \"Setting passwords on apps is no longer supported. Now there are \" +\n        \"user accounts and your apps are associated with your account so \" +\n        \"that only you (and people you designate) can access them. See the \" +\n        Console.command(\"'meteor claim'\") + \" and \" +\n        Console.command(\"'meteor authorized'\") + \" commands.\");\n    return 1;\n  }\n\n  var loggedIn = auth.isLoggedIn();\n  if (! loggedIn) {\n    Console.error(\n      \"You must be logged in to deploy, just enter your email address.\");\n    Console.error();\n    if (! auth.registerOrLogIn()) {\n      return 1;\n    }\n  }\n\n  // Override architecture iff applicable.\n  var buildArch = DEPLOY_ARCH;\n  if (options['override-architecture-with-local']) {\n    Console.warn();\n    Console.labelWarn(\n      \"OVERRIDING DEPLOY ARCHITECTURE WITH LOCAL ARCHITECTURE.\",\n      \"If your app contains binary code, it may break in unexpected \" +\n      \"and terrible ways.\");\n    buildArch = archinfo.host();\n  }\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    serverArchitectures: _.uniq([buildArch, archinfo.host()]),\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  var buildOptions = {\n    minifyMode: options.debug ? 'development' : 'production',\n    buildMode: options.debug ? 'development' : 'production',\n    serverArch: buildArch\n  };\n\n  var deployResult = deploy.bundleAndDeploy({\n    projectContext: projectContext,\n    site: site,\n    settingsFile: options.settings,\n    buildOptions: buildOptions,\n    rawOptions\n  });\n\n  if (deployResult === 0) {\n    auth.maybePrintRegistrationLink({\n      leadingNewline: true,\n      // If the user was already logged in at the beginning of the\n      // deploy, then they've already been prompted to set a password\n      // at least once before, so we use a slightly different message.\n      firstTime: ! loggedIn\n    });\n  }\n\n  return deployResult;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// logs\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'logs',\n  minArgs: 1,\n  maxArgs: 1,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var site = qualifySitename(options.args[0]);\n\n  return deploy.logs(site);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// authorized\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'authorized',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    add: { type: String, short: \"a\" },\n    transfer: { type: String, short: \"t\" },\n    remove: { type: String, short: \"r\" },\n    list: { type: Boolean }\n  },\n  pretty: function (options) {\n    // pretty if we're mutating; plain if we're listing (which is more likely to\n    // be used by scripts)\n    return options.add || options.remove || options.transfer;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  if (_.keys(_.pick(options, 'add', 'remove', 'transfer', 'list')).length > 1) {\n    Console.error(\n      \"Sorry, you can only perform one authorization operation at a time.\");\n    return 1;\n  }\n\n  auth.pollForRegistrationCompletion();\n  var site = qualifySitename(options.args[0]);\n\n  if (! auth.isLoggedIn()) {\n    Console.error(\n      \"You must be logged in for that. Try \" +\n      Console.command(\"'meteor login'\"));\n    return 1;\n  }\n\n  if (options.add) {\n    return deploy.changeAuthorized(site, \"add\", options.add);\n  } else if (options.remove) {\n    return deploy.changeAuthorized(site, \"remove\", options.remove);\n  } else if (options.transfer) {\n    return deploy.changeAuthorized(site, \"transfer\", options.transfer);\n  } else {\n    return deploy.listAuthorized(site);\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// claim\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'claim',\n  minArgs: 1,\n  maxArgs: 1,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  auth.pollForRegistrationCompletion();\n  var site = qualifySitename(options.args[0]);\n\n  if (! auth.isLoggedIn()) {\n    Console.error(\n      \"You must be logged in to claim sites. Use \" +\n      Console.command(\"'meteor login'\") + \" to log in. If you don't have a \" +\n      \"Meteor developer account yet, create one by clicking \" +\n      Console.command(\"'Sign in'\") + \" and then \" +\n      Console.command(\"'Create account'\") + \" at www.meteor.com.\");\n    Console.error();\n    return 1;\n  }\n\n  return deploy.claim(site);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// test and test-packages\n///////////////////////////////////////////////////////////////////////////////\n\ntestCommandOptions = {\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  options: {\n    port: { type: String, short: \"p\", default: DEFAULT_PORT },\n    'mobile-server': { type: String },\n    // XXX COMPAT WITH 0.9.2.2\n    'mobile-port': { type: String },\n    'debug-port': { type: String },\n    deploy: { type: String },\n    production: { type: Boolean },\n    settings: { type: String, short: 's' },\n    // Indicates whether these self-tests are running headless, e.g. in a\n    // continuous integration testing environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    'raw-logs': { type: Boolean },\n\n    // Undocumented. See #Once\n    once: { type: Boolean },\n    // Undocumented. To ensure that QA covers both\n    // PollingObserveDriver and OplogObserveDriver, this option\n    // disables oplog for tests.  (It still creates a replset, it just\n    // doesn't do oplog tailing.)\n    'disable-oplog': { type: Boolean },\n    // Undocumented flag to use a different test driver.\n    'driver-package': { type: String },\n\n    // Sets the path of where the temp app should be created\n    'test-app-path': { type: String },\n\n    // Undocumented, runs tests under selenium\n    'selenium': { type: Boolean },\n    'selenium-browser': { type: String },\n\n    // Undocumented.  Usually we just show a banner saying 'Tests' instead of\n    // the ugly path to the temporary test directory, but if you actually want\n    // to see it you can ask for it.\n    'show-test-app-path': { type: Boolean },\n\n    // hard-coded options with all known Cordova platforms\n    ios: { type: Boolean },\n    'ios-device': { type: Boolean },\n    android: { type: Boolean },\n    'android-device': { type: Boolean },\n\n    // This could theoretically be useful/necessary in conjunction with\n    // --test-app-path.\n    'allow-incompatible-update': { type: Boolean },\n\n    // Don't print linting messages for tested packages\n    'no-lint': { type: Boolean },\n\n    // allow excluding packages when testing all packages.\n    // should be a comma-separated list of package names.\n    'exclude': { type: String },\n\n    // one of the following must be true\n    'test': { type: Boolean, 'default': false },\n    'test-packages': { type: Boolean, 'default': false },\n\n    // For 'test-packages': Run in \"full app\" mode\n    'full-app': { type: Boolean, 'default': false }\n  }\n};\n\nmain.registerCommand(_.extend({\n  name: 'test',\n  requiresApp: true\n}, testCommandOptions), function (options) {\n  options['test'] = true;\n  return doTestCommand(options);\n});\n\nmain.registerCommand(_.extend(\n  { name: 'test-packages' },\n  testCommandOptions\n), function (options) {\n  options['test-packages'] = true;\n  return doTestCommand(options);\n});\n\nfunction doTestCommand(options) {\n  // This \"metadata\" is accessed in a few places. Using a global\n  // variable here was more expedient than navigating the many layers\n  // of abstraction across the the build process.\n  //\n  // As long as the Meteor CLI runs a single command as part of each\n  // process, this should be safe.\n  global.testCommandMetadata = {};\n\n  Console.setVerbose(!!options.verbose);\n  if (options.headless) {\n    Console.setHeadless(true);\n  }\n\n  const runTargets = parseRunTargets(_.intersection(\n    Object.keys(options), ['ios', 'ios-device', 'android', 'android-device']));\n\n  const { parsedServerUrl, parsedMobileServerUrl } =\n    parseServerOptionsForRunCommand(options, runTargets);\n\n  // Make a temporary app dir (based on the test runner app). This will be\n  // cleaned up on process exit. Using a temporary app dir means that we can\n  // run multiple \"test-packages\" commands in parallel without them stomping\n  // on each other.\n  var testRunnerAppDir =\n        options['test-app-path'] || files.mkdtemp('meteor-test-run');\n\n  // Download packages for our architecture, and for the deploy server's\n  // architecture if we're deploying.\n  var serverArchitectures = [archinfo.host()];\n  if (options.deploy && DEPLOY_ARCH !== archinfo.host()) {\n    serverArchitectures.push(DEPLOY_ARCH);\n  }\n\n  if (options['raw-logs']) {\n    runLog.setRawLogs(true);\n  }\n\n  var projectContextOptions = {\n    serverArchitectures: serverArchitectures,\n    allowIncompatibleUpdate: options['allow-incompatible-update'],\n    lintAppAndLocalPackages: !options['no-lint']\n  };\n  var projectContext;\n\n  if (options[\"test-packages\"]) {\n    global.testCommandMetadata.driverPackage = options['driver-package'] || 'test-in-browser';\n    projectContextOptions.projectDir = testRunnerAppDir;\n    projectContextOptions.projectDirForLocalPackages = options.appDir;\n\n    // Find any packages mentioned by a path instead of a package name. We will\n    // load them explicitly into the catalog.\n    var packagesByPath = _.filter(options.args, function (p) {\n      return p.indexOf('/') !== -1;\n    });\n    // If we're currently in an app, we still want to use the real app's\n    // packages subdirectory, not the test runner app's empty one.\n    projectContextOptions.explicitlyAddedLocalPackageDirs = packagesByPath;\n\n    // XXX Because every run uses a new app with its own IsopackCache directory,\n    //     this always does a clean build of all packages. Maybe we can speed up\n    //     repeated test-packages calls with some sort of shared or semi-shared\n    //     isopack cache that's specific to test-packages?  See #3012.\n    projectContext = new projectContextModule.ProjectContext(projectContextOptions);\n\n    main.captureAndExit(\"=> Errors while initializing project:\", function () {\n      // We're just reading metadata here --- we'll wait to do the full build\n      // preparation until after we've started listening on the proxy, etc.\n      projectContext.readProjectMetadata();\n    });\n\n    main.captureAndExit(\"=> Errors while setting up tests:\", function () {\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog();\n    });\n\n    // Overwrite .meteor/release.\n    projectContext.releaseFile.write(\n      release.current.isCheckout() ? \"none\" : release.current.name);\n\n    var packagesToAdd = getTestPackageNames(projectContext, options.args);\n\n    // filter out excluded packages\n    var excludedPackages = options.exclude && options.exclude.split(',');\n    if (excludedPackages) {\n      packagesToAdd = _.filter(packagesToAdd, function (p) {\n        return ! _.some(excludedPackages, function (excluded) {\n          return p.replace(/^local-test:/, '') === excluded;\n        });\n      });\n    }\n\n    // Use the driver package if running `meteor test-packages`. For\n    // `meteor test`, the driver package is expected to already\n    // have been added to the app.\n    packagesToAdd.unshift(global.testCommandMetadata.driverPackage);\n\n    // Also, add `autoupdate` so that you don't have to manually refresh the tests\n    packagesToAdd.unshift(\"autoupdate\");\n\n    var constraintsToAdd = _.map(packagesToAdd, function (p) {\n      return utils.parsePackageConstraint(p);\n    });\n    // Add the packages to our in-memory representation of .meteor/packages.  (We\n    // haven't yet resolved constraints, so this will affect constraint\n    // resolution.)  This will get written to disk once we prepareProjectForBuild,\n    // either in the Cordova code below, right before deploying below, or in the\n    // app runner.  (Note that removeAllPackages removes any comments from\n    // .meteor/packages, but that's OK since this isn't a real user project.)\n    projectContext.projectConstraintsFile.removeAllPackages();\n    projectContext.projectConstraintsFile.addConstraints(constraintsToAdd);\n    // Write these changes to disk now, so that if the first attempt to prepare\n    // the project for build hits errors, we don't lose them on\n    // projectContext.reset.\n    projectContext.projectConstraintsFile.writeIfModified();\n  } else if (options[\"test\"]) {\n    if (!options['driver-package']) {\n      throw new Error(\"You must specify a driver package with --driver-package\");\n    }\n\n    global.testCommandMetadata.driverPackage = options['driver-package'];\n\n    global.testCommandMetadata.isAppTest = options['full-app'];\n    global.testCommandMetadata.isTest = !global.testCommandMetadata.isAppTest;\n    \n    projectContextOptions.projectDir = options.appDir;\n    projectContextOptions.projectLocalDir = files.pathJoin(testRunnerAppDir, '.meteor', 'local');\n\n    // Copy the existing build and isopacks to speed up the initial start\n    function copyDirIntoTestRunnerApp(allowSymlink, ...parts) {\n      // Depending on whether the user has run `meteor run` or other commands, they\n      // may or may not exist yet\n      const appDirPath = files.pathJoin(options.appDir, ...parts);\n      const testDirPath = files.pathJoin(testRunnerAppDir, ...parts);\n\n      files.mkdir_p(appDirPath);\n      files.mkdir_p(files.pathDirname(testDirPath));\n\n      if (allowSymlink) {\n        // Windows can create junction links without administrator\n        // privileges since both paths refer to directories.\n        files.symlink(appDirPath, testDirPath, \"junction\");\n      } else {\n        files.cp_r(appDirPath, testDirPath, {\n          preserveSymlinks: true\n        });\n      }\n    }\n\n    copyDirIntoTestRunnerApp(false, '.meteor', 'local', 'build');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'bundler-cache');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'isopacks');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'plugin-cache');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'shell');\n    \n    projectContext = new projectContextModule.ProjectContext(projectContextOptions);\n\n    main.captureAndExit(\"=> Errors while setting up tests:\", function () {\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog();\n    });\n  } else {\n    throw new Error(\"Unexpected: neither test-packages nor test\");\n  }\n\n  // The rest of the projectContext preparation process will happen inside the\n  // runner, once the proxy is listening. The changes we made were persisted to\n  // disk, so projectContext.reset won't make us forget anything.\n\n  let cordovaRunner;\n\n  if (!_.isEmpty(runTargets)) {\n    main.captureAndExit('', 'preparing Cordova project', () => {\n      const cordovaProject = new CordovaProject(projectContext, {\n        settingsFile: options.settings,\n        mobileServerUrl: utils.formatUrl(parsedMobileServerUrl) });\n      if (buildmessage.jobHasMessages()) return;\n\n      cordovaRunner = new CordovaRunner(cordovaProject, runTargets);\n      projectContext.platformList.write(cordovaRunner.platformsForRunTargets);\n      cordovaRunner.checkPlatformsForRunTargets();\n    });\n  }\n\n  options.cordovaRunner = cordovaRunner;\n\n  return runTestAppForPackages(projectContext, _.extend(\n    options,\n    {\n      mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n      proxyPort: parsedServerUrl.port,\n      proxyHost: parsedServerUrl.hostname,\n    }\n  ));\n}\n\n// Returns the \"local-test:*\" package names for the given package names (or for\n// all local packages if packageNames is empty/unspecified).\nvar getTestPackageNames = function (projectContext, packageNames) {\n  var packageNamesSpecifiedExplicitly = ! _.isEmpty(packageNames);\n  if (_.isEmpty(packageNames)) {\n    // If none specified, test all local packages. (We don't have tests for\n    // non-local packages.)\n    packageNames = projectContext.localCatalog.getAllPackageNames();\n  }\n  var testPackages = [];\n  main.captureAndExit(\"=> Errors while collecting tests:\", function () {\n    _.each(packageNames, function (p) {\n      buildmessage.enterJob(\"trying to test package `\" + p + \"`\", function () {\n        // If it's a package name, look it up the normal way.\n        if (p.indexOf('/') === -1) {\n          if (p.indexOf('@') !== -1) {\n            buildmessage.error(\n              \"You may not specify versions for local packages: \" + p );\n            return;  // recover by ignoring\n          }\n          // Check to see if this is a real local package, and if it is a real\n          // local package, if it has tests.\n          var version = projectContext.localCatalog.getLatestVersion(p);\n          if (! version) {\n            buildmessage.error(\"Not a known local package, cannot test\");\n          } else if (version.testName) {\n            testPackages.push(version.testName);\n          } else if (packageNamesSpecifiedExplicitly) {\n            // It's only an error to *ask* to test a package with no tests, not\n            // to come across a package with no tests when you say \"test all\n            // packages\".\n            buildmessage.error(\"Package has no tests\");\n          }\n        } else {\n          // Otherwise, it's a directory; find it by source root.\n          version = projectContext.localCatalog.getVersionBySourceRoot(\n            files.pathResolve(p));\n          if (! version) {\n            throw Error(\"should have been caught when initializing catalog?\");\n          }\n          if (version.testName) {\n            testPackages.push(version.testName);\n          }\n          // It is not an error to mention a package by directory that is a\n          // package but has no tests; this means you can run `meteor\n          // test-packages $APP/packages/*` without having to worry about the\n          // packages that don't have tests.\n        }\n      });\n    });\n  });\n\n  return testPackages;\n};\n\nvar runTestAppForPackages = function (projectContext, options) {\n  var buildOptions = {\n    minifyMode: options.production ? 'production' : 'development'\n  };\n  buildOptions.buildMode = \"test\";\n  \n  if (options.deploy) {\n    // Run the constraint solver and build local packages.\n    main.captureAndExit(\"=> Errors while initializing project:\", function () {\n      projectContext.prepareProjectForBuild();\n    });\n    // No need to display the PackageMapDelta here, since it would include all\n    // of the packages!\n\n    buildOptions.serverArch = DEPLOY_ARCH;\n    return deploy.bundleAndDeploy({\n      projectContext: projectContext,\n      site: options.deploy,\n      settingsFile: options.settings,\n      buildOptions: buildOptions,\n      recordPackageUsage: false\n    });\n  } else {\n    var runAll = require('../runners/run-all.js');\n    return runAll.run({\n      projectContext: projectContext,\n      proxyPort: options.proxyPort,\n      proxyHost: options.proxyHost,\n      debugPort: options['debug-port'],\n      disableOplog: options['disable-oplog'],\n      settingsFile: options.settings,\n      testMetadata: global.testCommandMetadata,\n      banner: options['show-test-app-path'] ? null : \"Tests\",\n      buildOptions: buildOptions,\n      rootUrl: process.env.ROOT_URL,\n      mongoUrl: process.env.MONGO_URL,\n      oplogUrl: process.env.MONGO_OPLOG_URL,\n      mobileServerUrl: options.mobileServerUrl,\n      once: options.once,\n      noReleaseCheck: options['no-release-check'] || process.env.METEOR_NO_RELEASE_CHECK,\n      recordPackageUsage: false,\n      selenium: options.selenium,\n      seleniumBrowser: options['selenium-browser'],\n      cordovaRunner: options.cordovaRunner,\n      // On the first run, we shouldn't display the delta between \"no packages\n      // in the temp app\" and \"all the packages we're testing\". If we make\n      // changes and reload, though, it's fine to display them.\n      omitPackageMapDeltaDisplayOnFirstRun: true\n    });\n  }\n};\n\n\n\n///////////////////////////////////////////////////////////////////////////////\n// rebuild\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'rebuild',\n  maxArgs: Infinity,\n  hidden: true,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never(),\n  'allow-incompatible-update': { type: Boolean }\n}, function (options) {\n  var projectContextModule = require('../project-context.js');\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    forceRebuildPackages: options.args.length ? options.args : true,\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while rebuilding packages:\", function () {\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  Console.info(\"Packages rebuilt.\");\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// login\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'login',\n  options: {\n    email: { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return auth.loginCommand(_.extend({\n    overwriteExistingToken: true\n  }, options));\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// logout\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'logout',\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return auth.logoutCommand(options);\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// whoami\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'whoami',\n  catalogRefresh: new catalog.Refresh.Never(),\n  pretty: false\n}, function (options) {\n  return auth.whoAmICommand(options);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// organizations\n///////////////////////////////////////////////////////////////////////////////\n\nvar loggedInAccountsConnectionOrPrompt = function (action) {\n  var token = auth.getSessionToken(config.getAccountsDomain());\n  if (! token) {\n    Console.error(\"You must be logged in to \" + action + \".\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n  }\n\n  token = auth.getSessionToken(config.getAccountsDomain());\n  var conn = auth.loggedInAccountsConnection(token);\n  if (conn === null) {\n    // Server rejected our token.\n    Console.error(\"You must be logged in to \" + action + \".\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n    token = auth.getSessionToken(config.getAccountsDomain());\n    conn = auth.loggedInAccountsConnection(token);\n  }\n\n  return conn;\n};\n\n// List the organizations of which the current user is a member.\nmain.registerCommand({\n  name: 'admin list-organizations',\n  minArgs: 0,\n  maxArgs: 0,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  var token = auth.getSessionToken(config.getAccountsDomain());\n  if (! token) {\n    Console.error(\"You must be logged in to list your organizations.\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n  }\n\n  var url = config.getAccountsApiUrl() + \"/organizations\";\n  try {\n    var result = httpHelpers.request({\n      url: url,\n      method: \"GET\",\n      useSessionHeader: true,\n      useAuthHeader: true\n    });\n    var body = JSON.parse(result.body);\n  } catch (err) {\n    Console.error(\"Error listing organizations.\");\n    return 1;\n  }\n\n  if (result.response.statusCode === 401 &&\n      body && body.error === \"invalid_credential\") {\n    Console.error(\"You must be logged in to list your organizations.\");\n    // XXX It would be nice to do a username/password prompt here like\n    // we do for the other orgs commands.\n    return 1;\n  }\n\n  if (result.response.statusCode !== 200 ||\n      ! body || ! body.organizations) {\n    Console.error(\"Error listing organizations.\");\n    return 1;\n  }\n\n  if (body.organizations.length === 0) {\n    Console.info(\"You are not a member of any organizations.\");\n  } else {\n    Console.rawInfo(_.pluck(body.organizations, \"name\").join(\"\\n\") + \"\\n\");\n  }\n  return 0;\n});\n\nmain.registerCommand({\n  name: 'admin members',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    add: { type: String },\n    remove: { type: String },\n    list: { type: Boolean }\n  },\n  pretty: function (options) {\n    // pretty if we're mutating; plain if we're listing (which is more likely to\n    // be used by scripts)\n    return options.add || options.remove;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  if (options.add && options.remove) {\n    Console.error(\n      \"Sorry, you can only add or remove one member at a time.\");\n    throw new main.ShowUsage;\n  }\n\n  var username = options.add || options.remove;\n\n  var conn = loggedInAccountsConnectionOrPrompt(\n    username ? \"edit organizations\" : \"show an organization's members\");\n\n  if (username ) {\n    // Adding or removing members\n    try {\n      conn.call(\n        options.add ? \"addOrganizationMember\": \"removeOrganizationMember\",\n        options.args[0], username);\n    } catch (err) {\n      Console.error(\"Error \" +\n                    (options.add ? \"adding\" : \"removing\") +\n                    \" member: \" + err.reason);\n      return 1;\n    }\n\n    Console.info(username + \" \" +\n                         (options.add ? \"added to\" : \"removed from\") +\n                         \" organization \" + options.args[0] + \".\");\n  } else {\n    // Showing the members of an org\n    try {\n      var result = conn.call(\"showOrganization\", options.args[0]);\n    } catch (err) {\n      Console.error(\"Error showing organization: \" + err.reason);\n      return 1;\n    }\n\n    var members = _.pluck(result, \"username\");\n    Console.rawInfo(members.join(\"\\n\") + \"\\n\");\n  }\n\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// self-test\n///////////////////////////////////////////////////////////////////////////////\n\n// XXX we should find a way to make self-test fully self-contained, so that it\n// ignores \"packageDirs\" (ie, it shouldn't fail just because you happen to be\n// sitting in an app with packages that don't build)\n\nmain.registerCommand({\n  name: 'self-test',\n  minArgs: 0,\n  maxArgs: 1,\n  options: {\n    changed: { type: Boolean },\n    'force-online': { type: Boolean },\n    slow: { type: Boolean },\n    galaxy: { type: Boolean },\n    browserstack: { type: Boolean },\n    // Indicates whether these self-tests are running headless, e.g. in a\n    // continuous integration testing environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    history: { type: Number },\n    list: { type: Boolean },\n    file: { type: String },\n    exclude: { type: String },\n    // Skip tests w/ this tag\n    'without-tag': { type: String },\n    // Only run tests with this tag\n    'with-tag': { type: String },\n  },\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (! files.inCheckout()) {\n    Console.error(\"self-test is only supported running from a checkout\");\n    return 1;\n  }\n\n  var selftest = require('../tool-testing/selftest.js');\n\n  // Auto-detect whether to skip 'net' tests, unless --force-online is passed.\n  var offline = false;\n  if (!options['force-online']) {\n    try {\n      require('../utils/http-helpers.js').getUrl(\"http://www.google.com/\");\n    } catch (e) {\n      if (e instanceof files.OfflineError) {\n        offline = true;\n      }\n    }\n  }\n\n  var compileRegexp = function (str) {\n    try {\n      return new RegExp(str);\n    } catch (e) {\n      if (!(e instanceof SyntaxError)) {\n        throw e;\n      }\n      Console.error(\"Bad regular expression: \" + str);\n      return null;\n    }\n  };\n\n  var testRegexp = undefined;\n  if (options.args.length) {\n    testRegexp = compileRegexp(options.args[0]);\n    if (! testRegexp) {\n      return 1;\n    }\n  }\n\n  var fileRegexp = undefined;\n  if (options.file) {\n    fileRegexp = compileRegexp(options.file);\n    if (! fileRegexp) {\n      return 1;\n    }\n  }\n\n  var excludeRegexp = undefined;\n  if (options.exclude) {\n    excludeRegexp = compileRegexp(options.exclude);\n    if (! excludeRegexp) {\n      return 1;\n    }\n  }\n\n  if (options.list) {\n    selftest.listTests({\n      onlyChanged: options.changed,\n      offline: offline,\n      includeSlowTests: options.slow,\n      galaxyOnly: options.galaxy,\n      testRegexp: testRegexp,\n      fileRegexp: fileRegexp,\n      'without-tag': options['without-tag'],\n      'with-tag': options['with-tag']\n    });\n\n    return 0;\n  }\n\n  var clients = {\n    browserstack: options.browserstack\n  };\n\n  if (options.headless) {\n    // There's no point in spinning the spinner when we're running\n    // continuous integration tests.\n    Console.setHeadless(true);\n  }\n\n  return selftest.runTests({\n    // filtering options\n    onlyChanged: options.changed,\n    offline: offline,\n    includeSlowTests: options.slow,\n    galaxyOnly: options.galaxy,\n    testRegexp: testRegexp,\n    fileRegexp: fileRegexp,\n    excludeRegexp: excludeRegexp,\n    // other options\n    historyLines: options.history,\n    clients: clients,\n    'without-tag': options['without-tag'],\n    'with-tag': options['with-tag']\n  });\n\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// list-sites\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'list-sites',\n  minArgs: 0,\n  maxArgs: 0,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  auth.pollForRegistrationCompletion();\n  if (! auth.isLoggedIn()) {\n    Console.error(\n      \"You must be logged in for that. Try \" +\n      Console.command(\"'meteor login'\") + \".\");\n    return 1;\n  }\n\n  return deploy.listSites();\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// admin get-machine\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'admin get-machine',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    json: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    // By default, we give you a machine for 5 minutes. You can request up to\n    // 15. (MDG can reserve machines for longer than that.)\n    minutes: { type: Number }\n  },\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  // Check that we are asking for a valid architecture.\n  var arch = options.args[0];\n  if (!_.has(VALID_ARCHITECTURES, arch)){\n    showInvalidArchMsg(arch);\n    return 1;\n  }\n\n  // Set the minutes. We will check validity on the server.\n  var minutes = options.minutes || 5;\n\n  // In verbose mode, we let you know what is going on.\n  var maybeLog = function (string) {\n    if (options.verbose) {\n      Console.info(string);\n    }\n  };\n\n  try {\n    maybeLog(\"Logging into the get-machines server ...\");\n    var conn = authClient.loggedInConnection(\n      config.getBuildFarmUrl(),\n      config.getBuildFarmDomain(),\n      \"build-farm\");\n  } catch (err) {\n    authClient.handleConnectionError(err, \"get-machines server\");\n    return 1;\n  }\n\n  try {\n    maybeLog(\"Reserving machine ...\");\n\n    // The server returns to us an object with the following keys:\n    // username & sshKey : use this to log in.\n    // host: what you login into\n    // port: port you should use\n    // hostKey: RSA key to compare for safety.\n    var ret = conn.call('createBuildServer', arch, minutes);\n  } catch (err) {\n    authClient.handleConnectionError(err, \"build farm\");\n    return 1;\n  }\n  conn.close();\n\n  // Possibly, the user asked us to return a JSON of the data and is going to process it\n  // themselves. In that case, let's do that and exit.\n  if (options.json) {\n    var retJson = {\n      'username': ret.username,\n      'host' : ret.host,\n      'port' : ret.port,\n      'key' : ret.sshKey,\n      'hostKey' : ret.hostKey\n    };\n    Console.rawInfo(JSON.stringify(retJson, null, 2) + \"\\n\");\n    return 0;\n  }\n\n  // Record the SSH Key in a temporary file on disk and give it the permissions\n  // that ssh-agent requires it to have.\n  var tmpDir = files.mkdtemp('meteor-ssh-');\n  var idpath = tmpDir + '/id';\n  maybeLog(\"Writing ssh key to \" + idpath);\n  files.writeFile(idpath, ret.sshKey, {encoding: 'utf8', mode: 0o400});\n\n  // Add the known host key to a custom known hosts file.\n  var hostpath = tmpDir + '/host';\n  var addendum = ret.host + \" \" + ret.hostKey + \"\\n\";\n  maybeLog(\"Writing host key to \" + hostpath);\n  files.writeFile(hostpath, addendum, 'utf8');\n\n  // Finally, connect to the machine.\n  var login = ret.username + \"@\" + ret.host;\n  var maybeVerbose = options.verbose ? \"-v\" : \"-q\";\n\n  var connOptions = [\n    login,\n     \"-i\" + idpath,\n     \"-p\" + ret.port,\n     \"-oUserKnownHostsFile=\" + hostpath,\n     maybeVerbose];\n\n  var printOptions = connOptions.join(' ');\n  maybeLog(\"Connecting: \" + Console.command(\"ssh \" + printOptions));\n\n  var child_process = require('child_process');\n\n  if (arch.match(/win/)) {\n    // The ssh output from Windows machines is buggy, it can overlay your\n    // existing output on the top of the screen which is very ugly. Force the\n    // screen cleaning to assist.\n    Console.clear();\n  }\n\n  var sshCommand = child_process.spawn(\n    \"ssh\", connOptions,\n    { stdio: 'inherit' }); // Redirect spawn stdio to process\n\n  return new Promise(function (resolve) {\n    sshCommand.on('error', function (err) {\n      if (err.code === \"ENOENT\") {\n        if (process.platform === \"win32\") {\n          Console.error(\"Could not find the `ssh` command in your PATH.\",\n                        \"Please read this page about using the get-machine command on Windows:\",\n                        Console.url(\"https://github.com/meteor/meteor/wiki/Accessing-Meteor-provided-build-machines-from-Windows\"));\n        } else {\n          Console.error(\"Could not find the `ssh` command in your PATH.\");\n        }\n\n        resolve(1);\n      }\n    });\n\n    sshCommand.on('exit', function (code, signal) {\n      // XXX: We should process the signal in some way, but I am not sure we\n      // care right now.\n      resolve(signal ? 1 : code);\n    });\n  }).await();\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// admin progressbar-test\n///////////////////////////////////////////////////////////////////////////////\n\n// A test command to print a progressbar. Useful for manual testing.\nmain.registerCommand({\n  name: 'admin progressbar-test',\n  options: {\n    secs: { type: Number, default: 20 },\n    spinner: { type: Boolean, default: false }\n  },\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  buildmessage.enterJob({ title: \"A test progressbar\" }, function () {\n    var progress = buildmessage.getCurrentProgressTracker();\n    var totalProgress = { current: 0, end: options.secs, done: false };\n    var i = 0;\n    var n = options.secs;\n\n    if (options.spinner) {\n      totalProgress.end = undefined;\n    }\n\n    new Promise(function (resolve) {\n      function updateProgress() {\n        i++;\n        if (! options.spinner) {\n          totalProgress.current = i;\n        }\n\n        if (i === n) {\n          totalProgress.done = true;\n          progress.reportProgress(totalProgress);\n          resolve();\n        } else {\n          progress.reportProgress(totalProgress);\n          setTimeout(updateProgress, 1000);\n        }\n      }\n\n      setTimeout(updateProgress);\n    }).await();\n  });\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// dummy\n///////////////////////////////////////////////////////////////////////////////\n\n// Dummy test command. Used for automated testing of the command line\n// option parser.\n\nmain.registerCommand({\n  name: 'dummy',\n  options: {\n    ething: { type: String, short: \"e\", required: true },\n    port: { type: Number, short: \"p\", default: DEFAULT_PORT },\n    url: { type: Boolean, short: \"U\" },\n    'delete': { type: Boolean, short: \"D\" },\n    changed: { type: Boolean }\n  },\n  maxArgs: 2,\n  hidden: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var p = function (key) {\n    if (_.has(options, key)) {\n      return JSON.stringify(options[key]);\n    }\n    return 'none';\n  };\n\n  Console.info(p('ething') + \" \" + p('port') + \" \" + p('changed') +\n                       \" \" + p('args'));\n  if (options.url) {\n    Console.info('url');\n  }\n  if (options['delete']) {\n    Console.info('delete');\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// throw-error\n///////////////////////////////////////////////////////////////////////////////\n\n// Dummy test command. Used to test that stack traces work from an installed\n// Meteor tool.\n\nmain.registerCommand({\n  name: 'throw-error',\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function () {\n  throw new Error(\"testing stack traces!\"); // #StackTraceTest this line is found in tests/source-maps.js\n});\n"]}